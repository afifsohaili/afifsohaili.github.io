/*! For license information please see LICENSES */
webpackJsonp([0],{"/43w":function(a,n,e){"use strict";n.a={props:["url"]}},"/TYz":function(a,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=e("D3GB"),i=e("rGQh"),r=!1;var o=function(a){r||(e("xVq+"),e("nIIO"))},s=e("VU/8")(t.a,i.a,!1,o,"data-v-2a183b29",null);s.options.__file="pages/index.vue",n.default=s.exports},"/m0K":function(a,n,e){"use strict";var t=function(){var a=this.$createElement,n=this._self._c||a;return n("div",{staticClass:"content"},[n("h3",{staticClass:"title is-4"},[this._v("\n    Presentations\n  ")]),n("VideoBox",{attrs:{url:"https://www.youtube-nocookie.com/embed/_femHvk47IQ?rel=0"}},[n("div",{staticClass:"section video-content"},[n("h4",[this._v("Build Real-time Chat App with Nuxt.js and FeathersJS")]),n("p",[this._v("\n        My own tutorial working with Nuxt.js (a frontend framework), connected to a backend system built using FeathersJS and bridged with Socket.io for real-time connectivity\n      ")]),n("p",[this._v("\n        Garnered over 1.6k views in just two months and even caught the attention of the creator of Nuxt.js himself\n      ")])])])],1)};t._withStripped=!0;var i={render:t,staticRenderFns:[]};n.a=i},"0HUM":function(a,n,e){"use strict";var t=e("cygF"),i=e("OnPC"),r=!1;var o=function(a){r||e("AYZ9")},s=e("VU/8")(t.a,i.a,!1,o,null,null);s.options.__file="components/ExperienceBlock.vue",n.a=s.exports},"15sF":function(a,n,e){"use strict";var t=e("8SSo");n.a={components:{VideoBox:t.a}}},"3oKH":function(a,n,e){var t=e("RCEK");"string"==typeof t&&(t=[[a.i,t,""]]),t.locals&&(a.exports=t.locals);e("rjj0")("59e14cc8",t,!1,{sourceMap:!1})},"8SSo":function(a,n,e){"use strict";var t=e("/43w"),i=e("pmzS"),r=!1;var o=function(a){r||e("P0Ia")},s=e("VU/8")(t.a,i.a,!1,o,"data-v-b53308aa",null);s.options.__file="components/VideoBox.vue",n.a=s.exports},A5qe:function(a,n,e){(function(e){var t,i,r,o={scope:{}};o.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,n,e){if(e.get||e.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[n]=e.value)},o.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:void 0!==e&&null!=e?e:a},o.global=o.getGlobal(this),o.SYMBOL_PREFIX="jscomp_symbol_",o.initSymbol=function(){o.initSymbol=function(){},o.global.Symbol||(o.global.Symbol=o.Symbol)},o.symbolCounter_=0,o.Symbol=function(a){return o.SYMBOL_PREFIX+(a||"")+o.symbolCounter_++},o.initSymbolIterator=function(){o.initSymbol();var a=o.global.Symbol.iterator;a||(a=o.global.Symbol.iterator=o.global.Symbol("iterator")),"function"!=typeof Array.prototype[a]&&o.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return o.arrayIterator(this)}}),o.initSymbolIterator=function(){}},o.arrayIterator=function(a){var n=0;return o.iteratorPrototype(function(){return n<a.length?{done:!1,value:a[n++]}:{done:!0}})},o.iteratorPrototype=function(a){return o.initSymbolIterator(),(a={next:a})[o.global.Symbol.iterator]=function(){return this},a},o.array=o.array||{},o.iteratorFromArray=function(a,n){o.initSymbolIterator(),a instanceof String&&(a+="");var e=0,t={next:function(){if(e<a.length){var i=e++;return{value:n(i,a[i]),done:!1}}return t.next=function(){return{done:!0,value:void 0}},t.next()}};return t[Symbol.iterator]=function(){return t},t},o.polyfill=function(a,n,e,t){if(n){for(e=o.global,a=a.split("."),t=0;t<a.length-1;t++){var i=a[t];i in e||(e[i]={}),e=e[i]}(n=n(t=e[a=a[a.length-1]]))!=t&&null!=n&&o.defineProperty(e,a,{configurable:!0,writable:!0,value:n})}},o.polyfill("Array.prototype.keys",function(a){return a||function(){return o.iteratorFromArray(this,function(a){return a})}},"es6-impl","es3");var s=this;!function(e,o){i=[],void 0===(r="function"==typeof(t=o)?t.apply(n,i):t)||(a.exports=r)}(0,function(){function a(a){if(!E.col(a))try{return document.querySelectorAll(a)}catch(a){}}function n(a,n){for(var e=a.length,t=2<=arguments.length?arguments[1]:void 0,i=[],r=0;r<e;r++)if(r in a){var o=a[r];n.call(t,o,r,a)&&i.push(o)}return i}function e(a){return a.reduce(function(a,n){return a.concat(E.arr(n)?e(n):n)},[])}function t(n){return E.arr(n)?n:(E.str(n)&&(n=a(n)||n),n instanceof NodeList||n instanceof HTMLCollection?[].slice.call(n):[n])}function i(a,n){return a.some(function(a){return a===n})}function r(a){var n,e={};for(n in a)e[n]=a[n];return e}function o(a,n){var e,t=r(a);for(e in a)t[e]=n.hasOwnProperty(e)?n[e]:a[e];return t}function l(a,n){var e,t=r(a);for(e in n)t[e]=E.und(a[e])?n[e]:a[e];return t}function c(a){if(a=/([\+\-]?[0-9#\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(a))return a[2]}function p(a,n){return E.fnc(a)?a(n.target,n.id,n.total):a}function u(a,n){if(n in a.style)return getComputedStyle(a).getPropertyValue(n.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase())||"0"}function m(a,n){return E.dom(a)&&i(w,n)?"transform":E.dom(a)&&(a.getAttribute(n)||E.svg(a)&&a[n])?"attribute":E.dom(a)&&"transform"!==n&&u(a,n)?"css":null!=a[n]?"object":void 0}function d(a,e){switch(m(a,e)){case"transform":return function(a,e){var t=function(a){return-1<a.indexOf("translate")||"perspective"===a?"px":-1<a.indexOf("rotate")||-1<a.indexOf("skew")?"deg":void 0}(e);if(t=-1<e.indexOf("scale")?1:0+t,!(a=a.style.transform))return t;for(var i=[],r=[],o=[],s=/(\w+)\((.+?)\)/g;i=s.exec(a);)r.push(i[1]),o.push(i[2]);return(a=n(o,function(a,n){return r[n]===e})).length?a[0]:t}(a,e);case"css":return u(a,e);case"attribute":return a.getAttribute(e)}return a[e]||0}function h(a,n){var e=/^(\*=|\+=|-=)/.exec(a);if(!e)return a;var t=c(a)||0;switch(n=parseFloat(n),a=parseFloat(a.replace(e[0],"")),e[0][0]){case"+":return n+a+t;case"-":return n-a+t;case"*":return n*a+t}}function g(a,n){return Math.sqrt(Math.pow(n.x-a.x,2)+Math.pow(n.y-a.y,2))}function b(a){a=a.points;for(var n,e=0,t=0;t<a.numberOfItems;t++){var i=a.getItem(t);0<t&&(e+=g(n,i)),n=i}return e}function y(a){if(a.getTotalLength)return a.getTotalLength();switch(a.tagName.toLowerCase()){case"circle":return 2*Math.PI*a.getAttribute("r");case"rect":return 2*a.getAttribute("width")+2*a.getAttribute("height");case"line":return g({x:a.getAttribute("x1"),y:a.getAttribute("y1")},{x:a.getAttribute("x2"),y:a.getAttribute("y2")});case"polyline":return b(a);case"polygon":var n=a.points;return b(a)+g(n.getItem(n.numberOfItems-1),n.getItem(0))}}function f(a,n){function e(e){return e=void 0===e?0:e,a.el.getPointAtLength(1<=n+e?n+e:0)}var t=e(),i=e(-1),r=e(1);switch(a.property){case"x":return t.x;case"y":return t.y;case"angle":return 180*Math.atan2(r.y-i.y,r.x-i.x)/Math.PI}}function C(a,n){var e,t=/-?\d*\.?\d+/g;if(e=E.pth(a)?a.totalLength:a,E.col(e))if(E.rgb(e)){var i=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(e);e=i?"rgba("+i[1]+",1)":e}else e=E.hex(e)?function(a){a=a.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(a,n,e,t){return n+n+e+e+t+t});var n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a);return"rgba("+(a=parseInt(n[1],16))+","+parseInt(n[2],16)+","+(n=parseInt(n[3],16))+",1)"}(e):E.hsl(e)?function(a){function n(a,n,e){return 0>e&&(e+=1),1<e&&--e,e<1/6?a+6*(n-a)*e:.5>e?n:e<2/3?a+(n-a)*(2/3-e)*6:a}var e=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(a)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(a);a=parseInt(e[1])/360;var t=parseInt(e[2])/100,i=parseInt(e[3])/100;if(e=e[4]||1,0==t)i=t=a=i;else{var r=.5>i?i*(1+t):i+t-i*t,o=2*i-r;i=n(o,r,a+1/3),t=n(o,r,a),a=n(o,r,a-1/3)}return"rgba("+255*i+","+255*t+","+255*a+","+e+")"}(e):void 0;else i=(i=c(e))?e.substr(0,e.length-i.length):e,e=n&&!/\s/g.test(e)?i+n:i;return{original:e+="",numbers:e.match(t)?e.match(t).map(Number):[0],strings:E.str(a)||n?e.split(t):[]}}function v(a){return n(a=a?e(E.arr(a)?a.map(t):t(a)):[],function(a,n,e){return e.indexOf(a)===n})}function A(a,n){var e=r(n);if(E.arr(a)){var i=a.length;2!==i||E.obj(a[0])?E.fnc(n.duration)||(e.duration=n.duration/i):a={value:a}}return t(a).map(function(a,e){return e=e?0:n.delay,a=E.obj(a)&&!E.pth(a)?a:{value:a},E.und(a.delay)&&(a.delay=e),a}).map(function(a){return l(a,e)})}function S(a,n){var e;return a.tweens.map(function(t){var i=(t=function(a,n){var e,t={};for(e in a){var i=p(a[e],n);E.arr(i)&&1===(i=i.map(function(a){return p(a,n)})).length&&(i=i[0]),t[e]=i}return t.duration=parseFloat(t.duration),t.delay=parseFloat(t.delay),t}(t,n)).value,r=d(n.target,a.name),o=e?e.to.original:r,s=(o=E.arr(i)?i[0]:o,h(E.arr(i)?i[1]:i,o));r=c(s)||c(o)||c(r);return t.from=C(o,r),t.to=C(s,r),t.start=e?e.end:a.offset,t.end=t.start+t.delay+t.duration,t.easing=function(a){return E.arr(a)?G.apply(this,a):R[a]}(t.easing),t.elasticity=(1e3-Math.min(Math.max(t.elasticity,1),999))/1e3,t.isPath=E.pth(i),t.isColor=E.col(t.from.original),t.isColor&&(t.round=1),e=t})}function M(a,n,e,t){var i="delay"===a;return n.length?(i?Math.min:Math.max).apply(Math,n.map(function(n){return n[a]})):i?t.delay:e.offset+t.delay+t.duration}function B(a){var t,i=o(P,a),r=o(k,a),s=function(a){var n=v(a);return n.map(function(a,e){return{target:a,id:e,total:n.length}})}(a.targets),c=[],p=l(i,r);for(t in a)p.hasOwnProperty(t)||"targets"===t||c.push({name:t,offset:p.offset,tweens:A(a[t],r)});return a=function(a,t){return n(e(a.map(function(a){return t.map(function(n){var e=m(a.target,n.name);if(e){var t=S(n,a);n={type:e,property:n.name,animatable:a,tweens:t,duration:t[t.length-1].end,delay:t[0].delay}}else n=void 0;return n})})),function(a){return!E.und(a)})}(s,c),l(i,{children:[],animatables:s,animations:a,duration:M("duration",a,i,r),delay:M("delay",a,i,r)})}function T(a){function e(){return window.Promise&&new Promise(function(a){return m=a})}function t(a){return h.reversed?h.duration-a:a}function i(a){for(var e=0,t={},i=h.animations,r=i.length;e<r;){var o=i[e],s=o.animatable,l=(c=o.tweens)[d=c.length-1];d&&(l=n(c,function(n){return a<n.end})[0]||l);for(var c=Math.min(Math.max(a-l.start-l.delay,0),l.duration)/l.duration,p=isNaN(c)?1:l.easing(c,l.elasticity),m=(c=l.to.strings,l.round),d=[],g=void 0,b=(g=l.to.numbers.length,0);b<g;b++){var y=void 0,C=(y=l.to.numbers[b],l.from.numbers[b]);y=l.isPath?f(l.value,p*y):C+p*(y-C);m&&(l.isColor&&2<b||(y=Math.round(y*m)/m)),d.push(y)}if(l=c.length)for(g=c[0],p=0;p<l;p++)m=c[p+1],b=d[p],isNaN(b)||(g=m?g+(b+m):g+(b+" "));else g=d[0];L[o.type](s.target,o.property,g,t,s.id),o.currentValue=g,e++}if(e=Object.keys(t).length)for(i=0;i<e;i++)I||(I=u(document.body,"transform")?"transform":"-webkit-transform"),h.animatables[i].target.style[I]=t[i].join(" ");h.currentTime=a,h.progress=a/h.duration*100}function r(a){h[a]&&h[a](h)}function o(){h.remaining&&!0!==h.remaining&&h.remaining--}function s(a){var n=h.duration,s=h.offset,u=s+h.delay,g=h.currentTime,b=h.reversed,y=t(a);if(h.children.length){var f=h.children,C=f.length;if(y>=h.currentTime)for(var v=0;v<C;v++)f[v].seek(y);else for(;C--;)f[C].seek(y)}(y>=u||!n)&&(h.began||(h.began=!0,r("begin")),r("run")),y>s&&y<n?i(y):(y<=s&&0!==g&&(i(0),b&&o()),(y>=n&&g!==n||!n)&&(i(n),b||o())),r("update"),a>=n&&(h.remaining?(c=l,"alternate"===h.direction&&(h.reversed=!h.reversed)):(h.pause(),h.completed||(h.completed=!0,r("complete"),"Promise"in window&&(m(),d=e()))),p=0)}a=void 0===a?{}:a;var l,c,p=0,m=null,d=e(),h=B(a);return h.reset=function(){var a=h.direction,n=h.loop;for(h.currentTime=0,h.progress=0,h.paused=!0,h.began=!1,h.completed=!1,h.reversed="reverse"===a,h.remaining="alternate"===a&&1===n?2:n,i(0),a=h.children.length;a--;)h.children[a].reset()},h.tick=function(a){l=a,c||(c=l),s((p+l-c)*T.speed)},h.seek=function(a){s(t(a))},h.pause=function(){var a=D.indexOf(h);-1<a&&D.splice(a,1),h.paused=!0},h.play=function(){h.paused&&(h.paused=!1,c=0,p=t(h.currentTime),D.push(h),x||F())},h.reverse=function(){h.reversed=!h.reversed,c=0,p=t(h.currentTime)},h.restart=function(){h.pause(),h.reset(),h.play()},h.finished=d,h.reset(),h.autoplay&&h.play(),h}var I,P={update:void 0,begin:void 0,run:void 0,complete:void 0,loop:1,direction:"normal",autoplay:!0,offset:0},k={duration:1e3,delay:0,easing:"easeOutElastic",elasticity:500,round:0},w="translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY perspective".split(" "),E={arr:function(a){return Array.isArray(a)},obj:function(a){return-1<Object.prototype.toString.call(a).indexOf("Object")},pth:function(a){return E.obj(a)&&a.hasOwnProperty("totalLength")},svg:function(a){return a instanceof SVGElement},dom:function(a){return a.nodeType||E.svg(a)},str:function(a){return"string"==typeof a},fnc:function(a){return"function"==typeof a},und:function(a){return void 0===a},hex:function(a){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a)},rgb:function(a){return/^rgb/.test(a)},hsl:function(a){return/^hsl/.test(a)},col:function(a){return E.hex(a)||E.rgb(a)||E.hsl(a)}},G=function(){function a(a,n,e){return(((1-3*e+3*n)*a+(3*e-6*n))*a+3*n)*a}return function(n,e,t,i){if(0<=n&&1>=n&&0<=t&&1>=t){var r=new Float32Array(11);if(n!==e||t!==i)for(var o=0;11>o;++o)r[o]=a(.1*o,n,t);return function(o){if(n===e&&t===i)return o;if(0===o)return 0;if(1===o)return 1;for(var s=0,l=1;10!==l&&r[l]<=o;++l)s+=.1;l=s+(o-r[--l])/(r[l+1]-r[l])*.1;var c=3*(1-3*t+3*n)*l*l+2*(3*t-6*n)*l+3*n;if(.001<=c){for(s=0;4>s&&0!==(c=3*(1-3*t+3*n)*l*l+2*(3*t-6*n)*l+3*n);++s){var p=a(l,n,t)-o;l=l-p/c}o=l}else if(0===c)o=l;else{l=s,s=s+.1;var u=0;do{0<(c=a(p=l+(s-l)/2,n,t)-o)?s=p:l=p}while(1e-7<Math.abs(c)&&10>++u);o=p}return a(o,e,i)}}}}(),R=function(){function a(a,n){return 0===a||1===a?a:-Math.pow(2,10*(a-1))*Math.sin(2*(a-1-n/(2*Math.PI)*Math.asin(1))*Math.PI/n)}var n,e="Quad Cubic Quart Quint Sine Expo Circ Back Elastic".split(" "),t={In:[[.55,.085,.68,.53],[.55,.055,.675,.19],[.895,.03,.685,.22],[.755,.05,.855,.06],[.47,0,.745,.715],[.95,.05,.795,.035],[.6,.04,.98,.335],[.6,-.28,.735,.045],a],Out:[[.25,.46,.45,.94],[.215,.61,.355,1],[.165,.84,.44,1],[.23,1,.32,1],[.39,.575,.565,1],[.19,1,.22,1],[.075,.82,.165,1],[.175,.885,.32,1.275],function(n,e){return 1-a(1-n,e)}],InOut:[[.455,.03,.515,.955],[.645,.045,.355,1],[.77,0,.175,1],[.86,0,.07,1],[.445,.05,.55,.95],[1,0,0,1],[.785,.135,.15,.86],[.68,-.55,.265,1.55],function(n,e){return.5>n?a(2*n,e)/2:1-a(-2*n+2,e)/2}]},i={linear:G(.25,.25,.75,.75)},r={};for(n in t)r.type=n,t[r.type].forEach(function(a){return function(n,t){i["ease"+a.type+e[t]]=E.fnc(n)?n:G.apply(s,n)}}(r)),r={type:r.type};return i}(),L={css:function(a,n,e){return a.style[n]=e},attribute:function(a,n,e){return a.setAttribute(n,e)},object:function(a,n,e){return a[n]=e},transform:function(a,n,e,t,i){t[i]||(t[i]=[]),t[i].push(n+"("+e+")")}},D=[],x=0,F=function(){function a(){x=requestAnimationFrame(n)}function n(n){var e=D.length;if(e){for(var t=0;t<e;)D[t]&&D[t].tick(n),t++;a()}else cancelAnimationFrame(x),x=0}return a}();return T.version="2.2.0",T.speed=1,T.running=D,T.remove=function(a){a=v(a);for(var n=D.length;n--;)for(var e=D[n],t=e.animations,r=t.length;r--;)i(a,t[r].animatable.target)&&(t.splice(r,1),t.length||e.pause())},T.getValue=d,T.path=function(n,e){var t=E.str(n)?a(n)[0]:n,i=e||100;return function(a){return{el:t,property:a,totalLength:y(t)*(i/100)}}},T.setDashoffset=function(a){var n=y(a);return a.setAttribute("stroke-dasharray",n),n},T.bezier=G,T.easings=R,T.timeline=function(a){var n=T(a);return n.pause(),n.duration=0,n.add=function(e){return n.children.forEach(function(a){a.began=!0,a.completed=!0}),t(e).forEach(function(e){var t=l(e,o(k,a||{}));t.targets=t.targets||a.targets,e=n.duration;var i=t.offset;t.autoplay=!1,t.direction=n.direction,t.offset=E.und(i)?e:h(i,e),n.began=!0,n.completed=!0,n.seek(t.offset),(t=T(t)).began=!0,t.completed=!0,t.duration>e&&(n.duration=t.duration),n.children.push(t)}),n.seek(0),n.reset(),n.autoplay&&n.restart(),n},n},T.random=function(a,n){return Math.floor(Math.random()*(n-a+1))+a},T})}).call(n,e("DuR2"))},AYZ9:function(a,n,e){var t=e("SKwt");"string"==typeof t&&(t=[[a.i,t,""]]),t.locals&&(a.exports=t.locals);e("rjj0")("11261171",t,!1,{sourceMap:!1})},D3GB:function(a,n,e){"use strict";var t=e("A5qe"),i=e.n(t),r=e("asHx"),o=e.n(r),s=e("qDZa"),l=e("FX87"),c=e("QRzS"),p=e("Wibt"),u=e("IreM"),m=new o.a;n.a={layout:"empty",components:{AdditionalPresentations:u.a,LeadershipExperience:c.a,ProfessionalExperience:l.a,PersonalProjects:p.a,ProfileSidebar:s.a},data:function(){return{showResume:!1}},mounted:function(){var a=this,n=i.a.timeline({targets:"#face-path polygon",easing:"easeInOutQuad",elasticity:1e3,direction:"reverse"});n.add({strokeDashoffset:[i.a.setDashoffset,0],delay:function(a,n){return n*m.floating({min:0,max:3})},duration:1e3}).add({targets:"#face-path polygon","stroke-width":2,delay:function(a,n){return 10*n},duration:50,offset:"-=2000"}).add({targets:"#face-path polygon",points:function(a){var n=a.points;return Array(n.length).fill().map(function(a,e){return[.67*n[e].x,.67*n[e].y].join(",")}).join(" ")},delay:function(a,n){return n*m.floating({min:0,max:3})},duration:1e3,offset:"-=3500"}).add({targets:"#face-path polygon",rotate:function(a){return m.natural({max:360})},delay:function(a,n){return n*m.floating({min:0,max:3})},duration:1e3,offset:"-=3500"}),n.complete=function(){return a.showResume=!0}}}},EKta:function(a,n,e){"use strict";n.byteLength=function(a){var n=c(a),e=n[0],t=n[1];return 3*(e+t)/4-t},n.toByteArray=function(a){for(var n,e=c(a),t=e[0],o=e[1],s=new r(function(a,n,e){return 3*(n+e)/4-e}(0,t,o)),l=0,p=o>0?t-4:t,u=0;u<p;u+=4)n=i[a.charCodeAt(u)]<<18|i[a.charCodeAt(u+1)]<<12|i[a.charCodeAt(u+2)]<<6|i[a.charCodeAt(u+3)],s[l++]=n>>16&255,s[l++]=n>>8&255,s[l++]=255&n;2===o&&(n=i[a.charCodeAt(u)]<<2|i[a.charCodeAt(u+1)]>>4,s[l++]=255&n);1===o&&(n=i[a.charCodeAt(u)]<<10|i[a.charCodeAt(u+1)]<<4|i[a.charCodeAt(u+2)]>>2,s[l++]=n>>8&255,s[l++]=255&n);return s},n.fromByteArray=function(a){for(var n,e=a.length,i=e%3,r=[],o=0,s=e-i;o<s;o+=16383)r.push(u(a,o,o+16383>s?s:o+16383));1===i?(n=a[e-1],r.push(t[n>>2]+t[n<<4&63]+"==")):2===i&&(n=(a[e-2]<<8)+a[e-1],r.push(t[n>>10]+t[n>>4&63]+t[n<<2&63]+"="));return r.join("")};for(var t=[],i=[],r="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,l=o.length;s<l;++s)t[s]=o[s],i[o.charCodeAt(s)]=s;function c(a){var n=a.length;if(n%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=a.indexOf("=");return-1===e&&(e=n),[e,e===n?0:4-e%4]}function p(a){return t[a>>18&63]+t[a>>12&63]+t[a>>6&63]+t[63&a]}function u(a,n,e){for(var t,i=[],r=n;r<e;r+=3)t=(a[r]<<16&16711680)+(a[r+1]<<8&65280)+(255&a[r+2]),i.push(p(t));return i.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},EuP9:function(a,n,e){"use strict";(function(a){var t=e("EKta"),i=e("ujcs"),r=e("sOR5");function o(){return l.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(a,n){if(o()<n)throw new RangeError("Invalid typed array length");return l.TYPED_ARRAY_SUPPORT?(a=new Uint8Array(n)).__proto__=l.prototype:(null===a&&(a=new l(n)),a.length=n),a}function l(a,n,e){if(!(l.TYPED_ARRAY_SUPPORT||this instanceof l))return new l(a,n,e);if("number"==typeof a){if("string"==typeof n)throw new Error("If encoding is specified then the first argument must be a string");return u(this,a)}return c(this,a,n,e)}function c(a,n,e,t){if("number"==typeof n)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&n instanceof ArrayBuffer?function(a,n,e,t){if(n.byteLength,e<0||n.byteLength<e)throw new RangeError("'offset' is out of bounds");if(n.byteLength<e+(t||0))throw new RangeError("'length' is out of bounds");n=void 0===e&&void 0===t?new Uint8Array(n):void 0===t?new Uint8Array(n,e):new Uint8Array(n,e,t);l.TYPED_ARRAY_SUPPORT?(a=n).__proto__=l.prototype:a=m(a,n);return a}(a,n,e,t):"string"==typeof n?function(a,n,e){"string"==typeof e&&""!==e||(e="utf8");if(!l.isEncoding(e))throw new TypeError('"encoding" must be a valid string encoding');var t=0|h(n,e),i=(a=s(a,t)).write(n,e);i!==t&&(a=a.slice(0,i));return a}(a,n,e):function(a,n){if(l.isBuffer(n)){var e=0|d(n.length);return 0===(a=s(a,e)).length?a:(n.copy(a,0,0,e),a)}if(n){if("undefined"!=typeof ArrayBuffer&&n.buffer instanceof ArrayBuffer||"length"in n)return"number"!=typeof n.length||function(a){return a!=a}(n.length)?s(a,0):m(a,n);if("Buffer"===n.type&&r(n.data))return m(a,n.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(a,n)}function p(a){if("number"!=typeof a)throw new TypeError('"size" argument must be a number');if(a<0)throw new RangeError('"size" argument must not be negative')}function u(a,n){if(p(n),a=s(a,n<0?0:0|d(n)),!l.TYPED_ARRAY_SUPPORT)for(var e=0;e<n;++e)a[e]=0;return a}function m(a,n){var e=n.length<0?0:0|d(n.length);a=s(a,e);for(var t=0;t<e;t+=1)a[t]=255&n[t];return a}function d(a){if(a>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|a}function h(a,n){if(l.isBuffer(a))return a.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(a)||a instanceof ArrayBuffer))return a.byteLength;"string"!=typeof a&&(a=""+a);var e=a.length;if(0===e)return 0;for(var t=!1;;)switch(n){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":case void 0:return z(a).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return U(a).length;default:if(t)return z(a).length;n=(""+n).toLowerCase(),t=!0}}function g(a,n,e){var t=a[n];a[n]=a[e],a[e]=t}function b(a,n,e,t,i){if(0===a.length)return-1;if("string"==typeof e?(t=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=i?0:a.length-1),e<0&&(e=a.length+e),e>=a.length){if(i)return-1;e=a.length-1}else if(e<0){if(!i)return-1;e=0}if("string"==typeof n&&(n=l.from(n,t)),l.isBuffer(n))return 0===n.length?-1:y(a,n,e,t,i);if("number"==typeof n)return n&=255,l.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(a,n,e):Uint8Array.prototype.lastIndexOf.call(a,n,e):y(a,[n],e,t,i);throw new TypeError("val must be string, number or Buffer")}function y(a,n,e,t,i){var r,o=1,s=a.length,l=n.length;if(void 0!==t&&("ucs2"===(t=String(t).toLowerCase())||"ucs-2"===t||"utf16le"===t||"utf-16le"===t)){if(a.length<2||n.length<2)return-1;o=2,s/=2,l/=2,e/=2}function c(a,n){return 1===o?a[n]:a.readUInt16BE(n*o)}if(i){var p=-1;for(r=e;r<s;r++)if(c(a,r)===c(n,-1===p?0:r-p)){if(-1===p&&(p=r),r-p+1===l)return p*o}else-1!==p&&(r-=r-p),p=-1}else for(e+l>s&&(e=s-l),r=e;r>=0;r--){for(var u=!0,m=0;m<l;m++)if(c(a,r+m)!==c(n,m)){u=!1;break}if(u)return r}return-1}function f(a,n,e,t){e=Number(e)||0;var i=a.length-e;t?(t=Number(t))>i&&(t=i):t=i;var r=n.length;if(r%2!=0)throw new TypeError("Invalid hex string");t>r/2&&(t=r/2);for(var o=0;o<t;++o){var s=parseInt(n.substr(2*o,2),16);if(isNaN(s))return o;a[e+o]=s}return o}function C(a,n,e,t){return O(z(n,a.length-e),a,e,t)}function v(a,n,e,t){return O(function(a){for(var n=[],e=0;e<a.length;++e)n.push(255&a.charCodeAt(e));return n}(n),a,e,t)}function A(a,n,e,t){return v(a,n,e,t)}function S(a,n,e,t){return O(U(n),a,e,t)}function M(a,n,e,t){return O(function(a,n){for(var e,t,i,r=[],o=0;o<a.length&&!((n-=2)<0);++o)e=a.charCodeAt(o),t=e>>8,i=e%256,r.push(i),r.push(t);return r}(n,a.length-e),a,e,t)}function B(a,n,e){return 0===n&&e===a.length?t.fromByteArray(a):t.fromByteArray(a.slice(n,e))}function T(a,n,e){e=Math.min(a.length,e);for(var t=[],i=n;i<e;){var r,o,s,l,c=a[i],p=null,u=c>239?4:c>223?3:c>191?2:1;if(i+u<=e)switch(u){case 1:c<128&&(p=c);break;case 2:128==(192&(r=a[i+1]))&&(l=(31&c)<<6|63&r)>127&&(p=l);break;case 3:r=a[i+1],o=a[i+2],128==(192&r)&&128==(192&o)&&(l=(15&c)<<12|(63&r)<<6|63&o)>2047&&(l<55296||l>57343)&&(p=l);break;case 4:r=a[i+1],o=a[i+2],s=a[i+3],128==(192&r)&&128==(192&o)&&128==(192&s)&&(l=(15&c)<<18|(63&r)<<12|(63&o)<<6|63&s)>65535&&l<1114112&&(p=l)}null===p?(p=65533,u=1):p>65535&&(p-=65536,t.push(p>>>10&1023|55296),p=56320|1023&p),t.push(p),i+=u}return function(a){var n=a.length;if(n<=I)return String.fromCharCode.apply(String,a);var e="",t=0;for(;t<n;)e+=String.fromCharCode.apply(String,a.slice(t,t+=I));return e}(t)}n.Buffer=l,n.SlowBuffer=function(a){+a!=a&&(a=0);return l.alloc(+a)},n.INSPECT_MAX_BYTES=50,l.TYPED_ARRAY_SUPPORT=void 0!==a.TYPED_ARRAY_SUPPORT?a.TYPED_ARRAY_SUPPORT:function(){try{var a=new Uint8Array(1);return a.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===a.foo()&&"function"==typeof a.subarray&&0===a.subarray(1,1).byteLength}catch(a){return!1}}(),n.kMaxLength=o(),l.poolSize=8192,l._augment=function(a){return a.__proto__=l.prototype,a},l.from=function(a,n,e){return c(null,a,n,e)},l.TYPED_ARRAY_SUPPORT&&(l.prototype.__proto__=Uint8Array.prototype,l.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&l[Symbol.species]===l&&Object.defineProperty(l,Symbol.species,{value:null,configurable:!0})),l.alloc=function(a,n,e){return function(a,n,e,t){return p(n),n<=0?s(a,n):void 0!==e?"string"==typeof t?s(a,n).fill(e,t):s(a,n).fill(e):s(a,n)}(null,a,n,e)},l.allocUnsafe=function(a){return u(null,a)},l.allocUnsafeSlow=function(a){return u(null,a)},l.isBuffer=function(a){return!(null==a||!a._isBuffer)},l.compare=function(a,n){if(!l.isBuffer(a)||!l.isBuffer(n))throw new TypeError("Arguments must be Buffers");if(a===n)return 0;for(var e=a.length,t=n.length,i=0,r=Math.min(e,t);i<r;++i)if(a[i]!==n[i]){e=a[i],t=n[i];break}return e<t?-1:t<e?1:0},l.isEncoding=function(a){switch(String(a).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(a,n){if(!r(a))throw new TypeError('"list" argument must be an Array of Buffers');if(0===a.length)return l.alloc(0);var e;if(void 0===n)for(n=0,e=0;e<a.length;++e)n+=a[e].length;var t=l.allocUnsafe(n),i=0;for(e=0;e<a.length;++e){var o=a[e];if(!l.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(t,i),i+=o.length}return t},l.byteLength=h,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var a=this.length;if(a%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var n=0;n<a;n+=2)g(this,n,n+1);return this},l.prototype.swap32=function(){var a=this.length;if(a%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var n=0;n<a;n+=4)g(this,n,n+3),g(this,n+1,n+2);return this},l.prototype.swap64=function(){var a=this.length;if(a%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var n=0;n<a;n+=8)g(this,n,n+7),g(this,n+1,n+6),g(this,n+2,n+5),g(this,n+3,n+4);return this},l.prototype.toString=function(){var a=0|this.length;return 0===a?"":0===arguments.length?T(this,0,a):function(a,n,e){var t=!1;if((void 0===n||n<0)&&(n=0),n>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(n>>>=0))return"";for(a||(a="utf8");;)switch(a){case"hex":return w(this,n,e);case"utf8":case"utf-8":return T(this,n,e);case"ascii":return P(this,n,e);case"latin1":case"binary":return k(this,n,e);case"base64":return B(this,n,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,n,e);default:if(t)throw new TypeError("Unknown encoding: "+a);a=(a+"").toLowerCase(),t=!0}}.apply(this,arguments)},l.prototype.equals=function(a){if(!l.isBuffer(a))throw new TypeError("Argument must be a Buffer");return this===a||0===l.compare(this,a)},l.prototype.inspect=function(){var a="",e=n.INSPECT_MAX_BYTES;return this.length>0&&(a=this.toString("hex",0,e).match(/.{2}/g).join(" "),this.length>e&&(a+=" ... ")),"<Buffer "+a+">"},l.prototype.compare=function(a,n,e,t,i){if(!l.isBuffer(a))throw new TypeError("Argument must be a Buffer");if(void 0===n&&(n=0),void 0===e&&(e=a?a.length:0),void 0===t&&(t=0),void 0===i&&(i=this.length),n<0||e>a.length||t<0||i>this.length)throw new RangeError("out of range index");if(t>=i&&n>=e)return 0;if(t>=i)return-1;if(n>=e)return 1;if(n>>>=0,e>>>=0,t>>>=0,i>>>=0,this===a)return 0;for(var r=i-t,o=e-n,s=Math.min(r,o),c=this.slice(t,i),p=a.slice(n,e),u=0;u<s;++u)if(c[u]!==p[u]){r=c[u],o=p[u];break}return r<o?-1:o<r?1:0},l.prototype.includes=function(a,n,e){return-1!==this.indexOf(a,n,e)},l.prototype.indexOf=function(a,n,e){return b(this,a,n,e,!0)},l.prototype.lastIndexOf=function(a,n,e){return b(this,a,n,e,!1)},l.prototype.write=function(a,n,e,t){if(void 0===n)t="utf8",e=this.length,n=0;else if(void 0===e&&"string"==typeof n)t=n,e=this.length,n=0;else{if(!isFinite(n))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");n|=0,isFinite(e)?(e|=0,void 0===t&&(t="utf8")):(t=e,e=void 0)}var i=this.length-n;if((void 0===e||e>i)&&(e=i),a.length>0&&(e<0||n<0)||n>this.length)throw new RangeError("Attempt to write outside buffer bounds");t||(t="utf8");for(var r=!1;;)switch(t){case"hex":return f(this,a,n,e);case"utf8":case"utf-8":return C(this,a,n,e);case"ascii":return v(this,a,n,e);case"latin1":case"binary":return A(this,a,n,e);case"base64":return S(this,a,n,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return M(this,a,n,e);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(""+t).toLowerCase(),r=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var I=4096;function P(a,n,e){var t="";e=Math.min(a.length,e);for(var i=n;i<e;++i)t+=String.fromCharCode(127&a[i]);return t}function k(a,n,e){var t="";e=Math.min(a.length,e);for(var i=n;i<e;++i)t+=String.fromCharCode(a[i]);return t}function w(a,n,e){var t=a.length;(!n||n<0)&&(n=0),(!e||e<0||e>t)&&(e=t);for(var i="",r=n;r<e;++r)i+=H(a[r]);return i}function E(a,n,e){for(var t=a.slice(n,e),i="",r=0;r<t.length;r+=2)i+=String.fromCharCode(t[r]+256*t[r+1]);return i}function G(a,n,e){if(a%1!=0||a<0)throw new RangeError("offset is not uint");if(a+n>e)throw new RangeError("Trying to access beyond buffer length")}function R(a,n,e,t,i,r){if(!l.isBuffer(a))throw new TypeError('"buffer" argument must be a Buffer instance');if(n>i||n<r)throw new RangeError('"value" argument is out of bounds');if(e+t>a.length)throw new RangeError("Index out of range")}function L(a,n,e,t){n<0&&(n=65535+n+1);for(var i=0,r=Math.min(a.length-e,2);i<r;++i)a[e+i]=(n&255<<8*(t?i:1-i))>>>8*(t?i:1-i)}function D(a,n,e,t){n<0&&(n=4294967295+n+1);for(var i=0,r=Math.min(a.length-e,4);i<r;++i)a[e+i]=n>>>8*(t?i:3-i)&255}function x(a,n,e,t,i,r){if(e+t>a.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function F(a,n,e,t,r){return r||x(a,0,e,4),i.write(a,n,e,t,23,4),e+4}function N(a,n,e,t,r){return r||x(a,0,e,8),i.write(a,n,e,t,52,8),e+8}l.prototype.slice=function(a,n){var e,t=this.length;if(a=~~a,n=void 0===n?t:~~n,a<0?(a+=t)<0&&(a=0):a>t&&(a=t),n<0?(n+=t)<0&&(n=0):n>t&&(n=t),n<a&&(n=a),l.TYPED_ARRAY_SUPPORT)(e=this.subarray(a,n)).__proto__=l.prototype;else{var i=n-a;e=new l(i,void 0);for(var r=0;r<i;++r)e[r]=this[r+a]}return e},l.prototype.readUIntLE=function(a,n,e){a|=0,n|=0,e||G(a,n,this.length);for(var t=this[a],i=1,r=0;++r<n&&(i*=256);)t+=this[a+r]*i;return t},l.prototype.readUIntBE=function(a,n,e){a|=0,n|=0,e||G(a,n,this.length);for(var t=this[a+--n],i=1;n>0&&(i*=256);)t+=this[a+--n]*i;return t},l.prototype.readUInt8=function(a,n){return n||G(a,1,this.length),this[a]},l.prototype.readUInt16LE=function(a,n){return n||G(a,2,this.length),this[a]|this[a+1]<<8},l.prototype.readUInt16BE=function(a,n){return n||G(a,2,this.length),this[a]<<8|this[a+1]},l.prototype.readUInt32LE=function(a,n){return n||G(a,4,this.length),(this[a]|this[a+1]<<8|this[a+2]<<16)+16777216*this[a+3]},l.prototype.readUInt32BE=function(a,n){return n||G(a,4,this.length),16777216*this[a]+(this[a+1]<<16|this[a+2]<<8|this[a+3])},l.prototype.readIntLE=function(a,n,e){a|=0,n|=0,e||G(a,n,this.length);for(var t=this[a],i=1,r=0;++r<n&&(i*=256);)t+=this[a+r]*i;return t>=(i*=128)&&(t-=Math.pow(2,8*n)),t},l.prototype.readIntBE=function(a,n,e){a|=0,n|=0,e||G(a,n,this.length);for(var t=n,i=1,r=this[a+--t];t>0&&(i*=256);)r+=this[a+--t]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*n)),r},l.prototype.readInt8=function(a,n){return n||G(a,1,this.length),128&this[a]?-1*(255-this[a]+1):this[a]},l.prototype.readInt16LE=function(a,n){n||G(a,2,this.length);var e=this[a]|this[a+1]<<8;return 32768&e?4294901760|e:e},l.prototype.readInt16BE=function(a,n){n||G(a,2,this.length);var e=this[a+1]|this[a]<<8;return 32768&e?4294901760|e:e},l.prototype.readInt32LE=function(a,n){return n||G(a,4,this.length),this[a]|this[a+1]<<8|this[a+2]<<16|this[a+3]<<24},l.prototype.readInt32BE=function(a,n){return n||G(a,4,this.length),this[a]<<24|this[a+1]<<16|this[a+2]<<8|this[a+3]},l.prototype.readFloatLE=function(a,n){return n||G(a,4,this.length),i.read(this,a,!0,23,4)},l.prototype.readFloatBE=function(a,n){return n||G(a,4,this.length),i.read(this,a,!1,23,4)},l.prototype.readDoubleLE=function(a,n){return n||G(a,8,this.length),i.read(this,a,!0,52,8)},l.prototype.readDoubleBE=function(a,n){return n||G(a,8,this.length),i.read(this,a,!1,52,8)},l.prototype.writeUIntLE=function(a,n,e,t){(a=+a,n|=0,e|=0,t)||R(this,a,n,e,Math.pow(2,8*e)-1,0);var i=1,r=0;for(this[n]=255&a;++r<e&&(i*=256);)this[n+r]=a/i&255;return n+e},l.prototype.writeUIntBE=function(a,n,e,t){(a=+a,n|=0,e|=0,t)||R(this,a,n,e,Math.pow(2,8*e)-1,0);var i=e-1,r=1;for(this[n+i]=255&a;--i>=0&&(r*=256);)this[n+i]=a/r&255;return n+e},l.prototype.writeUInt8=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,1,255,0),l.TYPED_ARRAY_SUPPORT||(a=Math.floor(a)),this[n]=255&a,n+1},l.prototype.writeUInt16LE=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[n]=255&a,this[n+1]=a>>>8):L(this,a,n,!0),n+2},l.prototype.writeUInt16BE=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[n]=a>>>8,this[n+1]=255&a):L(this,a,n,!1),n+2},l.prototype.writeUInt32LE=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[n+3]=a>>>24,this[n+2]=a>>>16,this[n+1]=a>>>8,this[n]=255&a):D(this,a,n,!0),n+4},l.prototype.writeUInt32BE=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[n]=a>>>24,this[n+1]=a>>>16,this[n+2]=a>>>8,this[n+3]=255&a):D(this,a,n,!1),n+4},l.prototype.writeIntLE=function(a,n,e,t){if(a=+a,n|=0,!t){var i=Math.pow(2,8*e-1);R(this,a,n,e,i-1,-i)}var r=0,o=1,s=0;for(this[n]=255&a;++r<e&&(o*=256);)a<0&&0===s&&0!==this[n+r-1]&&(s=1),this[n+r]=(a/o>>0)-s&255;return n+e},l.prototype.writeIntBE=function(a,n,e,t){if(a=+a,n|=0,!t){var i=Math.pow(2,8*e-1);R(this,a,n,e,i-1,-i)}var r=e-1,o=1,s=0;for(this[n+r]=255&a;--r>=0&&(o*=256);)a<0&&0===s&&0!==this[n+r+1]&&(s=1),this[n+r]=(a/o>>0)-s&255;return n+e},l.prototype.writeInt8=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,1,127,-128),l.TYPED_ARRAY_SUPPORT||(a=Math.floor(a)),a<0&&(a=255+a+1),this[n]=255&a,n+1},l.prototype.writeInt16LE=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[n]=255&a,this[n+1]=a>>>8):L(this,a,n,!0),n+2},l.prototype.writeInt16BE=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[n]=a>>>8,this[n+1]=255&a):L(this,a,n,!1),n+2},l.prototype.writeInt32LE=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,4,2147483647,-2147483648),l.TYPED_ARRAY_SUPPORT?(this[n]=255&a,this[n+1]=a>>>8,this[n+2]=a>>>16,this[n+3]=a>>>24):D(this,a,n,!0),n+4},l.prototype.writeInt32BE=function(a,n,e){return a=+a,n|=0,e||R(this,a,n,4,2147483647,-2147483648),a<0&&(a=4294967295+a+1),l.TYPED_ARRAY_SUPPORT?(this[n]=a>>>24,this[n+1]=a>>>16,this[n+2]=a>>>8,this[n+3]=255&a):D(this,a,n,!1),n+4},l.prototype.writeFloatLE=function(a,n,e){return F(this,a,n,!0,e)},l.prototype.writeFloatBE=function(a,n,e){return F(this,a,n,!1,e)},l.prototype.writeDoubleLE=function(a,n,e){return N(this,a,n,!0,e)},l.prototype.writeDoubleBE=function(a,n,e){return N(this,a,n,!1,e)},l.prototype.copy=function(a,n,e,t){if(e||(e=0),t||0===t||(t=this.length),n>=a.length&&(n=a.length),n||(n=0),t>0&&t<e&&(t=e),t===e)return 0;if(0===a.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("sourceStart out of bounds");if(t<0)throw new RangeError("sourceEnd out of bounds");t>this.length&&(t=this.length),a.length-n<t-e&&(t=a.length-n+e);var i,r=t-e;if(this===a&&e<n&&n<t)for(i=r-1;i>=0;--i)a[i+n]=this[i+e];else if(r<1e3||!l.TYPED_ARRAY_SUPPORT)for(i=0;i<r;++i)a[i+n]=this[i+e];else Uint8Array.prototype.set.call(a,this.subarray(e,e+r),n);return r},l.prototype.fill=function(a,n,e,t){if("string"==typeof a){if("string"==typeof n?(t=n,n=0,e=this.length):"string"==typeof e&&(t=e,e=this.length),1===a.length){var i=a.charCodeAt(0);i<256&&(a=i)}if(void 0!==t&&"string"!=typeof t)throw new TypeError("encoding must be a string");if("string"==typeof t&&!l.isEncoding(t))throw new TypeError("Unknown encoding: "+t)}else"number"==typeof a&&(a&=255);if(n<0||this.length<n||this.length<e)throw new RangeError("Out of range index");if(e<=n)return this;var r;if(n>>>=0,e=void 0===e?this.length:e>>>0,a||(a=0),"number"==typeof a)for(r=n;r<e;++r)this[r]=a;else{var o=l.isBuffer(a)?a:z(new l(a,t).toString()),s=o.length;for(r=0;r<e-n;++r)this[r+n]=o[r%s]}return this};var _=/[^+\/0-9A-Za-z-_]/g;function H(a){return a<16?"0"+a.toString(16):a.toString(16)}function z(a,n){var e;n=n||1/0;for(var t=a.length,i=null,r=[],o=0;o<t;++o){if((e=a.charCodeAt(o))>55295&&e<57344){if(!i){if(e>56319){(n-=3)>-1&&r.push(239,191,189);continue}if(o+1===t){(n-=3)>-1&&r.push(239,191,189);continue}i=e;continue}if(e<56320){(n-=3)>-1&&r.push(239,191,189),i=e;continue}e=65536+(i-55296<<10|e-56320)}else i&&(n-=3)>-1&&r.push(239,191,189);if(i=null,e<128){if((n-=1)<0)break;r.push(e)}else if(e<2048){if((n-=2)<0)break;r.push(e>>6|192,63&e|128)}else if(e<65536){if((n-=3)<0)break;r.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((n-=4)<0)break;r.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return r}function U(a){return t.toByteArray(function(a){if((a=function(a){return a.trim?a.trim():a.replace(/^\s+|\s+$/g,"")}(a).replace(_,"")).length<2)return"";for(;a.length%4!=0;)a+="=";return a}(a))}function O(a,n,e,t){for(var i=0;i<t&&!(i+e>=n.length||i>=a.length);++i)n[i+e]=a[i];return i}}).call(n,e("DuR2"))},FX87:function(a,n,e){"use strict";var t=e("FgKJ"),i=e("rPTM"),r=!1;var o=function(a){r||e("wMJB")},s=e("VU/8")(t.a,i.a,!1,o,"data-v-2095258c",null);s.options.__file="components/ProfessionalExperience.vue",n.a=s.exports},FgKJ:function(a,n,e){"use strict";var t=e("0HUM");n.a={components:{ExperienceBlock:t.a}}},HYCx:function(a,n,e){(a.exports=e("FZ+f")(!1)).push([a.i,".video-content[data-v-2db9adb2]{border-top:1px solid #bdbdbd}",""])},IreM:function(a,n,e){"use strict";var t=e("15sF"),i=e("/m0K"),r=!1;var o=function(a){r||e("NAwW")},s=e("VU/8")(t.a,i.a,!1,o,"data-v-2db9adb2",null);s.options.__file="components/AdditionalPresentations.vue",n.a=s.exports},"MX+U":function(a,n,e){"use strict";var t=function(){var a=this,n=a.$createElement,e=a._self._c||n;return e("div",{staticClass:"content"},[e("h3",{staticClass:"title is-4"},[a._v("\n    Leadership Experience\n  ")]),e("ExperienceBlock",{attrs:{"company-name":"Pertubuhan Kebajikan Projek Ihsan - President","job-title":"President",period:"January 2017 - December 2017"}},[e("ul",[e("li",[a._v("\n        In charge of overseeing both Students Development and Strategic Development\n        departments\n      ")])])]),e("ExperienceBlock",{attrs:{"company-name":"Pertubuhan Kebajikan Projek Ihsan - President","job-title":"Vice-President (Students' Development Portfolio)",period:"June 2016 - December 2016"}},[e("ul",[e("li",[a._v("\n        Worked together with the Students' Development team to make Tuisyen\n        Sayang runs more effectively and smoothly\n      ")]),e("li",[a._v("\n        Restructured and replanned the execution of Tuisyen Sayang by:\n      ")]),e("ul",[e("li",[a._v("\n          Introducing preplanned materials and books to cater for the lack of\n          volunteers\n        ")])])])]),e("ExperienceBlock",{attrs:{"company-name":"Pertubuhan Kebajikan Projek Ihsan - President","job-title":"Multimedia Committee",period:"February 2016 - May 2016"}},[e("ul",[e("li",[a._v("\n        Designed posters, banners, or any other marketing items that require\n        graphic designs.\n      ")]),e("li",[a._v("\n        Built and ran the organization’s main website.\n      ")]),e("li",[a._v("\n        Programmed an internal system for Projek Ihsan for its internal use,\n        such as students’ attendance system, review system, and volunteer\n        registration.\n      ")])])])],1)};t._withStripped=!0;var i={render:t,staticRenderFns:[]};n.a=i},NAwW:function(a,n,e){var t=e("HYCx");"string"==typeof t&&(t=[[a.i,t,""]]),t.locals&&(a.exports=t.locals);e("rjj0")("1e460e4b",t,!1,{sourceMap:!1})},OnPC:function(a,n,e){"use strict";var t=function(){var a=this,n=a.$createElement,e=a._self._c||n;return e("div",{staticClass:"experience-block"},[e("h4",{staticClass:"title is-5 is-marginless"},[a._v(a._s(a.companyName))]),e("h5",{staticClass:"subtitle is-6 is-marginless"},[a._v(a._s(a.jobTitle))]),e("em",[a._v(a._s(a.period))]),a._t("default")],2)};t._withStripped=!0;var i={render:t,staticRenderFns:[]};n.a=i},P0Ia:function(a,n,e){var t=e("pqxp");"string"==typeof t&&(t=[[a.i,t,""]]),t.locals&&(a.exports=t.locals);e("rjj0")("70e50688",t,!1,{sourceMap:!1})},QRzS:function(a,n,e){"use strict";var t=e("xTwx"),i=e("MX+U"),r=e("VU/8")(t.a,i.a,!1,null,null,null);r.options.__file="components/LeadershipExperience.vue",n.a=r.exports},RCEK:function(a,n,e){(a.exports=e("FZ+f")(!1)).push([a.i,"aside>div[data-v-2e5e520e]:not(:first-child){margin-top:1rem}",""])},SKwt:function(a,n,e){(a.exports=e("FZ+f")(!1)).push([a.i,".experience-block+.experience-block:not(.is-marginless){margin-top:1.5rem}em{display:block;margin-bottom:.75rem}.experience-block{border-radius:6px;border:1px solid #bdbdbd;border-bottom-width:3px;padding:1rem;background:hsla(0,0%,100%,.43)}",""])},Tan9:function(a,n,e){var t=e("VEj5");"string"==typeof t&&(t=[[a.i,t,""]]),t.locals&&(a.exports=t.locals);e("rjj0")("ebac5a46",t,!1,{sourceMap:!1})},UmI5:function(a,n,e){"use strict";var t=e("lp5i");n.a={components:{ProfileSummary:t.a}}},VEj5:function(a,n,e){(a.exports=e("FZ+f")(!1)).push([a.i,"@media only screen and (max-width:600px){.project[data-v-53923b35]:first-child{margin-top:0}}@media only screen and (min-width:600px){.project[data-v-53923b35]:nth-child(2){margin-top:0}}.is-flex[data-v-53923b35]{flex-wrap:wrap;justify-content:space-between}.is-flex .experience-block[data-v-53923b35]{width:calc(50% - 1rem)}@media only screen and (max-width:600px){.is-flex .experience-block[data-v-53923b35]{width:100%}}.url[data-v-53923b35]{display:block;margin-bottom:.75rem}",""])},Wibt:function(a,n,e){"use strict";var t=e("vw5F"),i=e("goBd"),r=!1;var o=function(a){r||e("Tan9")},s=e("VU/8")(t.a,i.a,!1,o,"data-v-53923b35",null);s.options.__file="components/PersonalProjects.vue",n.a=s.exports},asHx:function(a,n,e){(function(e){var t;!function(){var i=9007199254740992,r="abcdefghijklmnopqrstuvwxyz",o=r.toUpperCase(),s="0123456789abcdef";function l(a){this.name="UnsupportedError",this.message=a||"This feature is not supported on this platform"}l.prototype=new Error,l.prototype.constructor=l;var c=Array.prototype.slice;function p(a){if(!(this instanceof p))return a||(a=null),null===a?new p:new p(a);if("function"==typeof a)return this.random=a,this;arguments.length&&(this.seed=0);for(var n=0;n<arguments.length;n++){var e=0;if("[object String]"===Object.prototype.toString.call(arguments[n]))for(var t=0;t<arguments[n].length;t++){for(var i=0,r=0;r<arguments[n].length;r++)i=arguments[n].charCodeAt(r)+(i<<6)+(i<<16)-i;e+=i}else e=arguments[n];this.seed+=(arguments.length-n)*e}return this.mt=this.mersenne_twister(this.seed),this.bimd5=this.blueimp_md5(),this.random=function(){return this.mt.random(this.seed)},this}function u(a,n){if(a=a||{},n)for(var e in n)void 0===a[e]&&(a[e]=n[e]);return a}function m(a,n){if(a)throw new RangeError(n)}p.prototype.VERSION="1.0.16";var d=function(){throw new Error("No Base64 encoder available.")};function h(a){return function(){return this.natural(a)}}"function"==typeof btoa?d=btoa:"function"==typeof e&&(d=function(a){return new e(a).toString("base64")}),p.prototype.bool=function(a){return m((a=u(a,{likelihood:50})).likelihood<0||a.likelihood>100,"Chance: Likelihood accepts values from 0 to 100."),100*this.random()<a.likelihood},p.prototype.animal=function(a){return void 0!==(a=u(a)).type?(m(!this.get("animals")[a.type.toLowerCase()],"Please pick from desert, ocean, grassland, forest, zoo, pets, farm."),this.pick(this.get("animals")[a.type.toLowerCase()])):(animalTypeArray=["desert","forest","ocean","zoo","farm","pet","grassland"],this.pick(this.get("animals")[this.pick(animalTypeArray)]))},p.prototype.character=function(a){m((a=u(a)).alpha&&a.symbols,"Chance: Cannot specify both alpha and symbols.");var n,e;return n="lower"===a.casing?r:"upper"===a.casing?o:r+o,(e=a.pool?a.pool:a.alpha?n:a.symbols?"!@#$%^&*()[]":n+"0123456789!@#$%^&*()[]").charAt(this.natural({max:e.length-1}))},p.prototype.floating=function(a){m((a=u(a,{fixed:4})).fixed&&a.precision,"Chance: Cannot specify both fixed and precision.");var n=Math.pow(10,a.fixed),e=i/n,t=-e;m(a.min&&a.fixed&&a.min<t,"Chance: Min specified is out of range with fixed. Min should be, at least, "+t),m(a.max&&a.fixed&&a.max>e,"Chance: Max specified is out of range with fixed. Max should be, at most, "+e),a=u(a,{min:t,max:e});var r=(this.integer({min:a.min*n,max:a.max*n})/n).toFixed(a.fixed);return parseFloat(r)},p.prototype.integer=function(a){return m((a=u(a,{min:-9007199254740992,max:i})).min>a.max,"Chance: Min cannot be greater than Max."),Math.floor(this.random()*(a.max-a.min+1)+a.min)},p.prototype.natural=function(a){return"number"==typeof(a=u(a,{min:0,max:i})).numerals&&(m(a.numerals<1,"Chance: Numerals cannot be less than one."),a.min=Math.pow(10,a.numerals-1),a.max=Math.pow(10,a.numerals)-1),m(a.min<0,"Chance: Min cannot be less than zero."),this.integer(a)},p.prototype.hex=function(a){m((a=u(a,{min:0,max:i,casing:"lower"})).min<0,"Chance: Min cannot be less than zero.");var n=this.natural({min:a.min,max:a.max});return"upper"===a.casing?n.toString(16).toUpperCase():n.toString(16)},p.prototype.letter=function(a){a=u(a,{casing:"lower"});var n=this.character({pool:"abcdefghijklmnopqrstuvwxyz"});return"upper"===a.casing&&(n=n.toUpperCase()),n},p.prototype.string=function(a){m((a=u(a,{length:this.natural({min:5,max:20})})).length<0,"Chance: Length cannot be less than zero.");var n=a.length;return this.n(this.character,n,a).join("")},p.prototype.buffer=function(a){if(void 0===e)throw new l("Sorry, the buffer() function is not supported on your platform");m((a=u(a,{length:this.natural({min:5,max:20})})).length<0,"Chance: Length cannot be less than zero.");var n=a.length,t=this.n(this.character,n,a);return e.from(t)},p.prototype.capitalize=function(a){return a.charAt(0).toUpperCase()+a.substr(1)},p.prototype.mixin=function(a){for(var n in a)p.prototype[n]=a[n];return this},p.prototype.unique=function(a,n,e){m("function"!=typeof a,"Chance: The first argument must be a function.");var t=function(a,n){return-1!==a.indexOf(n)};e&&(t=e.comparator||t);for(var i,r=[],o=0,s=50*n,l=c.call(arguments,2);r.length<n;){var p=JSON.parse(JSON.stringify(l));if(t(r,i=a.apply(this,p))||(r.push(i),o=0),++o>s)throw new RangeError("Chance: num is likely too large for sample set")}return r},p.prototype.n=function(a,n){m("function"!=typeof a,"Chance: The first argument must be a function."),void 0===n&&(n=1);var e=n,t=[],i=c.call(arguments,2);for(e=Math.max(0,e);e--;null)t.push(a.apply(this,i));return t},p.prototype.pad=function(a,n,e){return e=e||"0",(a+="").length>=n?a:new Array(n-a.length+1).join(e)+a},p.prototype.pick=function(a,n){if(0===a.length)throw new RangeError("Chance: Cannot pick() from an empty array");return n&&1!==n?this.shuffle(a).slice(0,n):a[this.natural({max:a.length-1})]},p.prototype.pickone=function(a){if(0===a.length)throw new RangeError("Chance: Cannot pickone() from an empty array");return a[this.natural({max:a.length-1})]},p.prototype.pickset=function(a,n){if(0===n)return[];if(0===a.length)throw new RangeError("Chance: Cannot pickset() from an empty array");if(n<0)throw new RangeError("Chance: Count must be a positive number");return n&&1!==n?this.shuffle(a).slice(0,n):[this.pickone(a)]},p.prototype.shuffle=function(a){for(var n,e=[],t=0,i=Number(a.length),r=function(a){return Array.apply(null,Array(a)).map(function(a,n){return n})}(i),o=i-1,s=0;s<i;s++)t=r[n=this.natural({max:o})],e[s]=a[t],r[n]=r[o],o-=1;return e},p.prototype.weighted=function(a,n,e){if(a.length!==n.length)throw new RangeError("Chance: Length of array and weights must match");for(var t,i=0,r=0;r<n.length;++r){if(t=n[r],isNaN(t))throw new RangeError("Chance: All weights must be numbers");t>0&&(i+=t)}if(0===i)throw new RangeError("Chance: No valid entries in array weights");var o,s=this.random()*i,l=0,c=-1;for(r=0;r<n.length;++r){if(l+=t=n[r],t>0){if(s<=l){o=r;break}c=r}r===n.length-1&&(o=c)}var p=a[o];return(e=void 0!==e&&e)&&(a.splice(o,1),n.splice(o,1)),p},p.prototype.paragraph=function(a){var n=(a=u(a)).sentences||this.natural({min:3,max:7});return this.n(this.sentence,n).join(" ")},p.prototype.sentence=function(a){var n,e=(a=u(a)).words||this.natural({min:12,max:18}),t=a.punctuation;return n=this.n(this.word,e).join(" "),n=this.capitalize(n),!1===t||/^[\.\?;!:]$/.test(t)||(t="."),t&&(n+=t),n},p.prototype.syllable=function(a){for(var n,e=(a=u(a)).length||this.natural({min:2,max:3}),t="",i=0;i<e;i++)t+=n=0===i?this.character({pool:"bcdfghjklmnprstvwzaeiou"}):-1==="bcdfghjklmnprstvwz".indexOf(n)?this.character({pool:"bcdfghjklmnprstvwz"}):this.character({pool:"aeiou"});return a.capitalize&&(t=this.capitalize(t)),t},p.prototype.word=function(a){m((a=u(a)).syllables&&a.length,"Chance: Cannot specify both syllables AND length.");var n=a.syllables||this.natural({min:1,max:3}),e="";if(a.length){do{e+=this.syllable()}while(e.length<a.length);e=e.substring(0,a.length)}else for(var t=0;t<n;t++)e+=this.syllable();return a.capitalize&&(e=this.capitalize(e)),e},p.prototype.age=function(a){var n;switch((a=u(a)).type){case"child":n={min:0,max:12};break;case"teen":n={min:13,max:19};break;case"adult":n={min:18,max:65};break;case"senior":n={min:65,max:100};break;case"all":n={min:0,max:100};break;default:n={min:18,max:65}}return this.natural(n)},p.prototype.birthday=function(a){var n=this.age(a),e=(new Date).getFullYear();if(a&&a.type){var t=new Date,i=new Date;t.setFullYear(e-n-1),i.setFullYear(e-n),a=u(a,{min:t,max:i})}else a=u(a,{year:e-n});return this.date(a)},p.prototype.cpf=function(a){a=u(a,{formatted:!0});var n=this.n(this.natural,9,{max:9}),e=2*n[8]+3*n[7]+4*n[6]+5*n[5]+6*n[4]+7*n[3]+8*n[2]+9*n[1]+10*n[0];(e=11-e%11)>=10&&(e=0);var t=2*e+3*n[8]+4*n[7]+5*n[6]+6*n[5]+7*n[4]+8*n[3]+9*n[2]+10*n[1]+11*n[0];(t=11-t%11)>=10&&(t=0);var i=""+n[0]+n[1]+n[2]+"."+n[3]+n[4]+n[5]+"."+n[6]+n[7]+n[8]+"-"+e+t;return a.formatted?i:i.replace(/\D/g,"")},p.prototype.cnpj=function(a){a=u(a,{formatted:!0});var n=this.n(this.natural,12,{max:12}),e=2*n[11]+3*n[10]+4*n[9]+5*n[8]+6*n[7]+7*n[6]+8*n[5]+9*n[4]+2*n[3]+3*n[2]+4*n[1]+5*n[0];(e=11-e%11)<2&&(e=0);var t=2*e+3*n[11]+4*n[10]+5*n[9]+6*n[8]+7*n[7]+8*n[6]+9*n[5]+2*n[4]+3*n[3]+4*n[2]+5*n[1]+6*n[0];(t=11-t%11)<2&&(t=0);var i=""+n[0]+n[1]+"."+n[2]+n[3]+n[4]+"."+n[5]+n[6]+n[7]+"/"+n[8]+n[9]+n[10]+n[11]+"-"+e+t;return a.formatted?i:i.replace(/\D/g,"")},p.prototype.first=function(a){return a=u(a,{gender:this.gender(),nationality:"en"}),this.pick(this.get("firstNames")[a.gender.toLowerCase()][a.nationality.toLowerCase()])},p.prototype.profession=function(a){return(a=u(a)).rank?this.pick(["Apprentice ","Junior ","Senior ","Lead "])+this.pick(this.get("profession")):this.pick(this.get("profession"))},p.prototype.company=function(){return this.pick(this.get("company"))},p.prototype.gender=function(a){return a=u(a,{extraGenders:[]}),this.pick(["Male","Female"].concat(a.extraGenders))},p.prototype.last=function(a){if("*"===(a=u(a,{nationality:"*"})).nationality){var n=[],e=this.get("lastNames");return Object.keys(e).forEach(function(a,t){n=n.concat(e[a])}),this.pick(n)}return this.pick(this.get("lastNames")[a.nationality.toLowerCase()])},p.prototype.israelId=function(){for(var a=this.string({pool:"0123456789",length:8}),n=0,e=0;e<a.length;e++){var t=a[e]*(e/2===parseInt(e/2)?1:2);t=this.pad(t,2).toString(),n+=t=parseInt(t[0])+parseInt(t[1])}return a+=(10-parseInt(n.toString().slice(-1))).toString().slice(-1)},p.prototype.mrz=function(a){var n=function(a){var n="<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),e=[7,3,1],t=0;return"string"!=typeof a&&(a=a.toString()),a.split("").forEach(function(a,i){var r=n.indexOf(a);a=-1!==r?0===r?0:r+9:parseInt(a,10),t+=a*=e[i%e.length]}),t%10},e=this;return function(a){var e=function(a){return new Array(a+1).join("<")},t=["P<",a.issuer,a.last.toUpperCase(),"<<",a.first.toUpperCase(),e(39-(a.last.length+a.first.length+2)),a.passportNumber,n(a.passportNumber),a.nationality,a.dob,n(a.dob),a.gender,a.expiry,n(a.expiry),e(14),n(e(14))].join("");return t+n(t.substr(44,10)+t.substr(57,7)+t.substr(65,7))}(a=u(a,{first:this.first(),last:this.last(),passportNumber:this.integer({min:1e8,max:999999999}),dob:function(){var a=e.birthday({type:"adult"});return[a.getFullYear().toString().substr(2),e.pad(a.getMonth()+1,2),e.pad(a.getDate(),2)].join("")}(),expiry:function(){var a=new Date;return[(a.getFullYear()+5).toString().substr(2),e.pad(a.getMonth()+1,2),e.pad(a.getDate(),2)].join("")}(),gender:"Female"===this.gender()?"F":"M",issuer:"GBR",nationality:"GBR"}))},p.prototype.name=function(a){a=u(a);var n,e=this.first(a),t=this.last(a);return n=a.middle?e+" "+this.first(a)+" "+t:a.middle_initial?e+" "+this.character({alpha:!0,casing:"upper"})+". "+t:e+" "+t,a.prefix&&(n=this.prefix(a)+" "+n),a.suffix&&(n=n+" "+this.suffix(a)),n},p.prototype.name_prefixes=function(a){var n=[{name:"Doctor",abbreviation:"Dr."}];return"male"!==(a=(a=a||"all").toLowerCase())&&"all"!==a||n.push({name:"Mister",abbreviation:"Mr."}),"female"!==a&&"all"!==a||(n.push({name:"Miss",abbreviation:"Miss"}),n.push({name:"Misses",abbreviation:"Mrs."})),n},p.prototype.prefix=function(a){return this.name_prefix(a)},p.prototype.name_prefix=function(a){return(a=u(a,{gender:"all"})).full?this.pick(this.name_prefixes(a.gender)).name:this.pick(this.name_prefixes(a.gender)).abbreviation},p.prototype.HIDN=function(){var a="";return a+=this.string({pool:"0123456789",length:6}),a+=this.string({pool:"ABCDEFGHIJKLMNOPQRSTUVWXYXZ",length:2})},p.prototype.ssn=function(a){var n=(a=u(a,{ssnFour:!1,dashes:!0})).dashes?"-":"";return a.ssnFour?this.string({pool:"1234567890",length:4}):this.string({pool:"1234567890",length:3})+n+this.string({pool:"1234567890",length:2})+n+this.string({pool:"1234567890",length:4})},p.prototype.aadhar=function(a){var n=(a=u(a,{onlyLastFour:!1,separatedByWhiteSpace:!0})).separatedByWhiteSpace?" ":"";return a.onlyLastFour?this.string({pool:"1234567890",length:4}):this.string({pool:"1234567890",length:4})+n+this.string({pool:"1234567890",length:4})+n+this.string({pool:"1234567890",length:4})},p.prototype.name_suffixes=function(){return[{name:"Doctor of Osteopathic Medicine",abbreviation:"D.O."},{name:"Doctor of Philosophy",abbreviation:"Ph.D."},{name:"Esquire",abbreviation:"Esq."},{name:"Junior",abbreviation:"Jr."},{name:"Juris Doctor",abbreviation:"J.D."},{name:"Master of Arts",abbreviation:"M.A."},{name:"Master of Business Administration",abbreviation:"M.B.A."},{name:"Master of Science",abbreviation:"M.S."},{name:"Medical Doctor",abbreviation:"M.D."},{name:"Senior",abbreviation:"Sr."},{name:"The Third",abbreviation:"III"},{name:"The Fourth",abbreviation:"IV"},{name:"Bachelor of Engineering",abbreviation:"B.E"},{name:"Bachelor of Technology",abbreviation:"B.TECH"}]},p.prototype.suffix=function(a){return this.name_suffix(a)},p.prototype.name_suffix=function(a){return(a=u(a)).full?this.pick(this.name_suffixes()).name:this.pick(this.name_suffixes()).abbreviation},p.prototype.nationalities=function(){return this.get("nationalities")},p.prototype.nationality=function(){return this.pick(this.nationalities()).name},p.prototype.android_id=function(){return"APA91"+this.string({pool:"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",length:178})},p.prototype.apple_token=function(){return this.string({pool:"abcdef1234567890",length:64})},p.prototype.wp8_anid2=function(){return d(this.hash({length:32}))},p.prototype.wp7_anid=function(){return"A="+this.guid().replace(/-/g,"").toUpperCase()+"&E="+this.hash({length:3})+"&W="+this.integer({min:0,max:9})},p.prototype.bb_pin=function(){return this.hash({length:8})},p.prototype.avatar=function(a){var n={protocol:null,email:null,fileExtension:null,size:null,fallback:null,rating:null};if(a)if("string"==typeof a)n.email=a,a={};else{if("object"!=typeof a)return null;if("Array"===a.constructor)return null}else n.email=this.email(),a={};return(n=u(a,n)).email||(n.email=this.email()),n.protocol={http:"http",https:"https"}[n.protocol]?n.protocol+":":"",n.size=parseInt(n.size,0)?n.size:"",n.rating={g:"g",pg:"pg",r:"r",x:"x"}[n.rating]?n.rating:"",n.fallback={404:"404",mm:"mm",identicon:"identicon",monsterid:"monsterid",wavatar:"wavatar",retro:"retro",blank:"blank"}[n.fallback]?n.fallback:"",n.fileExtension={bmp:"bmp",gif:"gif",jpg:"jpg",png:"png"}[n.fileExtension]?n.fileExtension:"",n.protocol+"//www.gravatar.com/avatar/"+this.bimd5.md5(n.email)+(n.fileExtension?"."+n.fileExtension:"")+(n.size||n.rating||n.fallback?"?":"")+(n.size?"&s="+n.size.toString():"")+(n.rating?"&r="+n.rating:"")+(n.fallback?"&d="+n.fallback:"")},p.prototype.color=function(a){function n(a,n){return[a,a,a].join(n||"")}function e(a){var e=a?"rgba":"rgb",t=a?","+this.floating({min:g,max:b}):"";return e+"("+(r?n(this.natural({min:o,max:s}),","):this.natural({min:p,max:m})+","+this.natural({min:d,max:h})+","+this.natural({max:255}))+t+")"}function t(e,t,i){var u=i?"#":"",g="";return r?(g=n(this.pad(this.hex({min:o,max:s}),2)),"shorthex"===a.format&&(g=n(this.hex({min:0,max:15})))):g="shorthex"===a.format?this.pad(this.hex({min:Math.floor(l/16),max:Math.floor(c/16)}),1)+this.pad(this.hex({min:Math.floor(p/16),max:Math.floor(m/16)}),1)+this.pad(this.hex({min:Math.floor(d/16),max:Math.floor(h/16)}),1):void 0!==l||void 0!==c||void 0!==p||void 0!==m||void 0!==d||void 0!==h?this.pad(this.hex({min:l,max:c}),2)+this.pad(this.hex({min:p,max:m}),2)+this.pad(this.hex({min:d,max:h}),2):this.pad(this.hex({min:o,max:s}),2)+this.pad(this.hex({min:o,max:s}),2)+this.pad(this.hex({min:o,max:s}),2),u+g}var i,r=(a=u(a,{format:this.pick(["hex","shorthex","rgb","rgba","0x","name"]),grayscale:!1,casing:"lower",min:0,max:255,min_red:void 0,max_red:void 0,min_green:void 0,max_green:void 0,min_blue:void 0,max_blue:void 0,min_alpha:0,max_alpha:1})).grayscale,o=a.min,s=a.max,l=a.min_red,c=a.max_red,p=a.min_green,m=a.max_green,d=a.min_blue,h=a.max_blue,g=a.min_alpha,b=a.max_alpha;if(void 0===a.min_red&&(l=o),void 0===a.max_red&&(c=s),void 0===a.min_green&&(p=o),void 0===a.max_green&&(m=s),void 0===a.min_blue&&(d=o),void 0===a.max_blue&&(h=s),void 0===a.min_alpha&&(g=0),void 0===a.max_alpha&&(b=1),r&&0===o&&255===s&&void 0!==l&&void 0!==c&&(o=(l+p+d)/3,s=(c+m+h)/3),"hex"===a.format)i=t.call(this,2,6,!0);else if("shorthex"===a.format)i=t.call(this,1,3,!0);else if("rgb"===a.format)i=e.call(this,!1);else if("rgba"===a.format)i=e.call(this,!0);else{if("0x"!==a.format){if("name"===a.format)return this.pick(this.get("colorNames"));throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".')}i="0x"+t.call(this,2,6)}return"upper"===a.casing&&(i=i.toUpperCase()),i},p.prototype.domain=function(a){return a=u(a),this.word()+"."+(a.tld||this.tld())},p.prototype.email=function(a){return a=u(a),this.word({length:a.length})+"@"+(a.domain||this.domain())},p.prototype.fbid=function(){return"10000"+this.string({pool:"1234567890",length:11})},p.prototype.google_analytics=function(){return"UA-"+this.pad(this.natural({max:999999}),6)+"-"+this.pad(this.natural({max:99}),2)},p.prototype.hashtag=function(){return"#"+this.word()},p.prototype.ip=function(){return this.natural({min:1,max:254})+"."+this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({min:1,max:254})},p.prototype.ipv6=function(){return this.n(this.hash,8,{length:4}).join(":")},p.prototype.klout=function(){return this.natural({min:1,max:99})},p.prototype.semver=function(a){a=u(a,{include_prerelease:!0});var n=this.pickone(["^","~","<",">","<=",">=","="]);a.range&&(n=a.range);var e="";return a.include_prerelease&&(e=this.weighted(["","-dev","-beta","-alpha"],[50,10,5,1])),n+this.rpg("3d10").join(".")+e},p.prototype.tlds=function(){return["com","org","edu","gov","co.uk","net","io","ac","ad","ae","af","ag","ai","al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"]},p.prototype.tld=function(){return this.pick(this.tlds())},p.prototype.twitter=function(){return"@"+this.word()},p.prototype.url=function(a){var n=(a=u(a,{protocol:"http",domain:this.domain(a),domain_prefix:"",path:this.word(),extensions:[]})).extensions.length>0?"."+this.pick(a.extensions):"",e=a.domain_prefix?a.domain_prefix+"."+a.domain:a.domain;return a.protocol+"://"+e+"/"+a.path+n},p.prototype.port=function(){return this.integer({min:0,max:65535})},p.prototype.locale=function(a){return(a=u(a)).region?this.pick(this.get("locale_regions")):this.pick(this.get("locale_languages"))},p.prototype.locales=function(a){return(a=u(a)).region?this.get("locale_regions"):this.get("locale_languages")},p.prototype.loremPicsum=function(a){var n=(a=u(a,{width:500,height:500,greyscale:!1,blurred:!1})).greyscale?"g/":"",e=a.blurred?"/?blur":"/?random";return"https://picsum.photos/"+n+a.width+"/"+a.height+e},p.prototype.address=function(a){return a=u(a),this.natural({min:5,max:2e3})+" "+this.street(a)},p.prototype.altitude=function(a){return a=u(a,{fixed:5,min:0,max:8848}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},p.prototype.areacode=function(a){a=u(a,{parens:!0});var n=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return a.parens?"("+n+")":n},p.prototype.city=function(){return this.capitalize(this.word({syllables:3}))},p.prototype.coordinates=function(a){return this.latitude(a)+", "+this.longitude(a)},p.prototype.countries=function(){return this.get("countries")},p.prototype.country=function(a){a=u(a);var n=this.pick(this.countries());return a.raw?n:a.full?n.name:n.abbreviation},p.prototype.depth=function(a){return a=u(a,{fixed:5,min:-10994,max:0}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},p.prototype.geohash=function(a){return a=u(a,{length:7}),this.string({length:a.length,pool:"0123456789bcdefghjkmnpqrstuvwxyz"})},p.prototype.geojson=function(a){return this.latitude(a)+", "+this.longitude(a)+", "+this.altitude(a)},p.prototype.latitude=function(a){return a=u(a,{fixed:5,min:-90,max:90}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},p.prototype.longitude=function(a){return a=u(a,{fixed:5,min:-180,max:180}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},p.prototype.phone=function(a){var n,e,t=this,i=function(a){var n=[];return a.sections.forEach(function(a){n.push(t.string({pool:"0123456789",length:a}))}),a.area+n.join(" ")};switch((a=u(a,{formatted:!0,country:"us",mobile:!1})).formatted||(a.parens=!1),a.country){case"fr":a.mobile?(n=this.pick(["06","07"])+t.string({pool:"0123456789",length:8}),e=a.formatted?n.match(/../g).join(" "):n):(n=this.pick(["01"+this.pick(["30","34","39","40","41","42","43","44","45","46","47","48","49","53","55","56","58","60","64","69","70","72","73","74","75","76","77","78","79","80","81","82","83"])+t.string({pool:"0123456789",length:6}),"02"+this.pick(["14","18","22","23","28","29","30","31","32","33","34","35","36","37","38","40","41","43","44","45","46","47","48","49","50","51","52","53","54","56","57","61","62","69","72","76","77","78","85","90","96","97","98","99"])+t.string({pool:"0123456789",length:6}),"03"+this.pick(["10","20","21","22","23","24","25","26","27","28","29","39","44","45","51","52","54","55","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","80","81","82","83","84","85","86","87","88","89","90"])+t.string({pool:"0123456789",length:6}),"04"+this.pick(["11","13","15","20","22","26","27","30","32","34","37","42","43","44","50","56","57","63","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","88","89","90","91","92","93","94","95","97","98"])+t.string({pool:"0123456789",length:6}),"05"+this.pick(["08","16","17","19","24","31","32","33","34","35","40","45","46","47","49","53","55","56","57","58","59","61","62","63","64","65","67","79","81","82","86","87","90","94"])+t.string({pool:"0123456789",length:6}),"09"+t.string({pool:"0123456789",length:8})]),e=a.formatted?n.match(/../g).join(" "):n);break;case"uk":a.mobile?(n=this.pick([{area:"07"+this.pick(["4","5","7","8","9"]),sections:[2,6]},{area:"07624 ",sections:[6]}]),e=a.formatted?i(n):i(n).replace(" ","")):(n=this.pick([{area:"01"+this.character({pool:"234569"})+"1 ",sections:[3,4]},{area:"020 "+this.character({pool:"378"}),sections:[3,4]},{area:"023 "+this.character({pool:"89"}),sections:[3,4]},{area:"024 7",sections:[3,4]},{area:"028 "+this.pick(["25","28","37","71","82","90","92","95"]),sections:[2,4]},{area:"012"+this.pick(["04","08","54","76","97","98"])+" ",sections:[6]},{area:"013"+this.pick(["63","64","84","86"])+" ",sections:[6]},{area:"014"+this.pick(["04","20","60","61","80","88"])+" ",sections:[6]},{area:"015"+this.pick(["24","27","62","66"])+" ",sections:[6]},{area:"016"+this.pick(["06","29","35","47","59","95"])+" ",sections:[6]},{area:"017"+this.pick(["26","44","50","68"])+" ",sections:[6]},{area:"018"+this.pick(["27","37","84","97"])+" ",sections:[6]},{area:"019"+this.pick(["00","05","35","46","49","63","95"])+" ",sections:[6]}]),e=a.formatted?i(n):i(n).replace(" ","","g"));break;case"za":a.mobile?(n=this.pick(["060"+this.pick(["3","4","5","6","7","8","9"])+t.string({pool:"0123456789",length:6}),"061"+this.pick(["0","1","2","3","4","5","8"])+t.string({pool:"0123456789",length:6}),"06"+t.string({pool:"0123456789",length:7}),"071"+this.pick(["0","1","2","3","4","5","6","7","8","9"])+t.string({pool:"0123456789",length:6}),"07"+this.pick(["2","3","4","6","7","8","9"])+t.string({pool:"0123456789",length:7}),"08"+this.pick(["0","1","2","3","4","5"])+t.string({pool:"0123456789",length:7})]),e=a.formatted||n):(n=this.pick(["01"+this.pick(["0","1","2","3","4","5","6","7","8"])+t.string({pool:"0123456789",length:7}),"02"+this.pick(["1","2","3","4","7","8"])+t.string({pool:"0123456789",length:7}),"03"+this.pick(["1","2","3","5","6","9"])+t.string({pool:"0123456789",length:7}),"04"+this.pick(["1","2","3","4","5","6","7","8","9"])+t.string({pool:"0123456789",length:7}),"05"+this.pick(["1","3","4","6","7","8"])+t.string({pool:"0123456789",length:7})]),e=a.formatted||n);break;case"us":var r=this.areacode(a).toString(),o=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString(),s=this.natural({min:1e3,max:9999}).toString();e=a.formatted?r+" "+o+"-"+s:r+o+s;break;case"br":var l,c=this.pick(["11","12","13","14","15","16","17","18","19","21","22","24","27","28","31","32","33","34","35","37","38","41","42","43","44","45","46","47","48","49","51","53","54","55","61","62","63","64","65","66","67","68","69","71","73","74","75","77","79","81","82","83","84","85","86","87","88","89","91","92","93","94","95","96","97","98","99"]);l=a.mobile?"9"+t.string({pool:"0123456789",length:4}):this.natural({min:2e3,max:5999}).toString();var p=t.string({pool:"0123456789",length:4});e=a.formatted?"("+c+") "+l+"-"+p:c+l+p}return e},p.prototype.postal=function(){return this.character({pool:"XVTSRPNKLMHJGECBA"})+this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+" "+(this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+this.natural({max:9}))},p.prototype.counties=function(a){return a=u(a,{country:"uk"}),this.get("counties")[a.country.toLowerCase()]},p.prototype.county=function(a){return this.pick(this.counties(a)).name},p.prototype.provinces=function(a){return a=u(a,{country:"ca"}),this.get("provinces")[a.country.toLowerCase()]},p.prototype.province=function(a){return a&&a.full?this.pick(this.provinces(a)).name:this.pick(this.provinces(a)).abbreviation},p.prototype.state=function(a){return a&&a.full?this.pick(this.states(a)).name:this.pick(this.states(a)).abbreviation},p.prototype.states=function(a){var n;switch((a=u(a,{country:"us",us_states_and_dc:!0})).country.toLowerCase()){case"us":var e=this.get("us_states_and_dc"),t=this.get("territories"),i=this.get("armed_forces");n=[],a.us_states_and_dc&&(n=n.concat(e)),a.territories&&(n=n.concat(t)),a.armed_forces&&(n=n.concat(i));break;case"it":n=this.get("country_regions")[a.country.toLowerCase()];break;case"uk":n=this.get("counties")[a.country.toLowerCase()]}return n},p.prototype.street=function(a){var n;switch((a=u(a,{country:"us",syllables:2})).country.toLowerCase()){case"us":n=this.word({syllables:a.syllables}),n=this.capitalize(n),n+=" ",n+=a.short_suffix?this.street_suffix(a).abbreviation:this.street_suffix(a).name;break;case"it":n=this.word({syllables:a.syllables}),n=this.capitalize(n),n=(a.short_suffix?this.street_suffix(a).abbreviation:this.street_suffix(a).name)+" "+n}return n},p.prototype.street_suffix=function(a){return a=u(a,{country:"us"}),this.pick(this.street_suffixes(a))},p.prototype.street_suffixes=function(a){return a=u(a,{country:"us"}),this.get("street_suffixes")[a.country.toLowerCase()]},p.prototype.zip=function(a){var n=this.n(this.natural,5,{max:9});return a&&!0===a.plusfour&&(n.push("-"),n=n.concat(this.n(this.natural,4,{max:9}))),n.join("")},p.prototype.ampm=function(){return this.bool()?"am":"pm"},p.prototype.date=function(a){var n,e;if(a&&(a.min||a.max)){var t=void 0!==(a=u(a,{american:!0,string:!1})).min?a.min.getTime():1,i=void 0!==a.max?a.max.getTime():864e13;e=new Date(this.integer({min:t,max:i}))}else{var r=this.month({raw:!0}),o=r.days;a&&a.month&&(o=this.get("months")[(a.month%12+12)%12].days),a=u(a,{year:parseInt(this.year(),10),month:r.numeric-1,day:this.natural({min:1,max:o}),hour:this.hour({twentyfour:!0}),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:!0,string:!1}),e=new Date(a.year,a.month,a.day,a.hour,a.minute,a.second,a.millisecond)}return n=a.american?e.getMonth()+1+"/"+e.getDate()+"/"+e.getFullYear():e.getDate()+"/"+(e.getMonth()+1)+"/"+e.getFullYear(),a.string?n:e},p.prototype.hammertime=function(a){return this.date(a).getTime()},p.prototype.hour=function(a){return m((a=u(a,{min:a&&a.twentyfour?0:1,max:a&&a.twentyfour?23:12})).min<0,"Chance: Min cannot be less than 0."),m(a.twentyfour&&a.max>23,"Chance: Max cannot be greater than 23 for twentyfour option."),m(!a.twentyfour&&a.max>12,"Chance: Max cannot be greater than 12."),m(a.min>a.max,"Chance: Min cannot be greater than Max."),this.natural({min:a.min,max:a.max})},p.prototype.millisecond=function(){return this.natural({max:999})},p.prototype.minute=p.prototype.second=function(a){return m((a=u(a,{min:0,max:59})).min<0,"Chance: Min cannot be less than 0."),m(a.max>59,"Chance: Max cannot be greater than 59."),m(a.min>a.max,"Chance: Min cannot be greater than Max."),this.natural({min:a.min,max:a.max})},p.prototype.month=function(a){m((a=u(a,{min:1,max:12})).min<1,"Chance: Min cannot be less than 1."),m(a.max>12,"Chance: Max cannot be greater than 12."),m(a.min>a.max,"Chance: Min cannot be greater than Max.");var n=this.pick(this.months().slice(a.min-1,a.max));return a.raw?n:n.name},p.prototype.months=function(){return this.get("months")},p.prototype.second=function(){return this.natural({max:59})},p.prototype.timestamp=function(){return this.natural({min:1,max:parseInt((new Date).getTime()/1e3,10)})},p.prototype.weekday=function(a){var n=["Monday","Tuesday","Wednesday","Thursday","Friday"];return(a=u(a,{weekday_only:!1})).weekday_only||(n.push("Saturday"),n.push("Sunday")),this.pickone(n)},p.prototype.year=function(a){return(a=u(a,{min:(new Date).getFullYear()})).max=void 0!==a.max?a.max:a.min+100,this.natural(a).toString()},p.prototype.cc=function(a){var n,e,t;return e=(n=(a=u(a)).type?this.cc_type({name:a.type,raw:!0}):this.cc_type({raw:!0})).prefix.split(""),t=n.length-n.prefix.length-1,(e=e.concat(this.n(this.integer,t,{min:0,max:9}))).push(this.luhn_calculate(e.join(""))),e.join("")},p.prototype.cc_types=function(){return this.get("cc_types")},p.prototype.cc_type=function(a){a=u(a);var n=this.cc_types(),e=null;if(a.name){for(var t=0;t<n.length;t++)if(n[t].name===a.name||n[t].short_name===a.name){e=n[t];break}if(null===e)throw new RangeError("Chance: Credit card type '"+a.name+"' is not supported")}else e=this.pick(n);return a.raw?e:e.name},p.prototype.currency_types=function(){return this.get("currency_types")},p.prototype.currency=function(){return this.pick(this.currency_types())},p.prototype.timezones=function(){return this.get("timezones")},p.prototype.timezone=function(){return this.pick(this.timezones())},p.prototype.currency_pair=function(a){var n=this.unique(this.currency,2,{comparator:function(a,n){return a.reduce(function(a,e){return a||e.code===n.code},!1)}});return a?n[0].code+"/"+n[1].code:n},p.prototype.dollar=function(a){a=u(a,{max:1e4,min:0});var n=this.floating({min:a.min,max:a.max,fixed:2}).toString(),e=n.split(".")[1];return void 0===e?n+=".00":e.length<2&&(n+="0"),n<0?"-$"+n.replace("-",""):"$"+n},p.prototype.euro=function(a){return Number(this.dollar(a).replace("$","")).toLocaleString()+"€"},p.prototype.exp=function(a){a=u(a);var n={};return n.year=this.exp_year(),n.year===(new Date).getFullYear().toString()?n.month=this.exp_month({future:!0}):n.month=this.exp_month(),a.raw?n:n.month+"/"+n.year},p.prototype.exp_month=function(a){a=u(a);var n,e,t=(new Date).getMonth()+1;if(a.future&&12!==t)do{n=this.month({raw:!0}).numeric,e=parseInt(n,10)}while(e<=t);else n=this.month({raw:!0}).numeric;return n},p.prototype.exp_year=function(){var a=(new Date).getMonth()+1,n=(new Date).getFullYear();return this.year({min:12===a?n+1:n,max:n+10})},p.prototype.vat=function(a){switch((a=u(a,{country:"it"})).country.toLowerCase()){case"it":return this.it_vat()}},p.prototype.iban=function(){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZ";return this.string({length:2,pool:a})+this.pad(this.integer({min:0,max:99}),2)+this.string({length:4,pool:"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"})+this.pad(this.natural(),this.natural({min:6,max:26}))},p.prototype.it_vat=function(){var a=this.natural({min:1,max:18e5});return(a=this.pad(a,7)+this.pad(this.pick(this.provinces({country:"it"})).code,3))+this.luhn_calculate(a)},p.prototype.cf=function(a){var n=(a=a||{}).gender?a.gender:this.gender(),e=a.first?a.first:this.first({gender:n,nationality:"it"}),t=a.last?a.last:this.last({nationality:"it"}),i=a.birthday?a.birthday:this.birthday(),r=a.city?a.city:this.pickone(["A","B","C","D","E","F","G","H","I","L","M","Z"])+this.pad(this.natural({max:999}),3),o=[],s=function(a,n){var e,t=[];return a.length<3?t=a.split("").concat("XXX".split("")).splice(0,3):((e=a.toUpperCase().split("").map(function(a){return-1!=="BCDFGHJKLMNPRSTVWZ".indexOf(a)?a:void 0}).join("")).length>3&&(e=n?e.substr(0,3):e[0]+e.substr(2,2)),e.length<3&&(t=e,e=a.toUpperCase().split("").map(function(a){return-1!=="AEIOU".indexOf(a)?a:void 0}).join("").substr(0,3-t.length)),t+=e),t};return o=o.concat(s(t,!0),s(e),function(a,n,e){return a.getFullYear().toString().substr(2)+["A","B","C","D","E","H","L","M","P","R","S","T"][a.getMonth()]+e.pad(a.getDate()+("female"===n.toLowerCase()?40:0),2)}(i,n,this),r.toUpperCase().split("")).join(""),(o+=function(a){for(var n="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",e="ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",t="ABCDEFGHIJKLMNOPQRSTUVWXYZ",i=0,r=0;r<15;r++)i+=r%2!=0?t.indexOf(e[n.indexOf(a[r])]):"BAKPLCQDREVOSFTGUHMINJWZYX".indexOf(e[n.indexOf(a[r])]);return t[i%26]}(o.toUpperCase())).toUpperCase()},p.prototype.pl_pesel=function(){for(var a=this.natural({min:1,max:9999999999}),n=this.pad(a,10).split(""),e=0;e<n.length;e++)n[e]=parseInt(n[e]);var t=(1*n[0]+3*n[1]+7*n[2]+9*n[3]+1*n[4]+3*n[5]+7*n[6]+9*n[7]+1*n[8]+3*n[9])%10;return 0!==t&&(t=10-t),n.join("")+t},p.prototype.pl_nip=function(){for(var a=this.natural({min:1,max:999999999}),n=this.pad(a,9).split(""),e=0;e<n.length;e++)n[e]=parseInt(n[e]);var t=(6*n[0]+5*n[1]+7*n[2]+2*n[3]+3*n[4]+4*n[5]+5*n[6]+6*n[7]+7*n[8])%11;return 10===t?this.pl_nip():n.join("")+t},p.prototype.pl_regon=function(){for(var a=this.natural({min:1,max:99999999}),n=this.pad(a,8).split(""),e=0;e<n.length;e++)n[e]=parseInt(n[e]);var t=(8*n[0]+9*n[1]+2*n[2]+3*n[3]+4*n[4]+5*n[5]+6*n[6]+7*n[7])%11;return 10===t&&(t=0),n.join("")+t},p.prototype.note=function(a){a=u(a,{notes:"flatKey"});var n={naturals:["C","D","E","F","G","A","B"],flats:["D♭","E♭","G♭","A♭","B♭"],sharps:["C♯","D♯","F♯","G♯","A♯"]};return n.all=n.naturals.concat(n.flats.concat(n.sharps)),n.flatKey=n.naturals.concat(n.flats),n.sharpKey=n.naturals.concat(n.sharps),this.pickone(n[a.notes])},p.prototype.midi_note=function(a){return a=u(a,{min:0,max:127}),this.integer({min:a.min,max:a.max})},p.prototype.chord_quality=function(a){var n=["maj","min","aug","dim"];return(a=u(a,{jazz:!0})).jazz&&(n=["maj7","min7","7","sus","dim","ø"]),this.pickone(n)},p.prototype.chord=function(a){return a=u(a),this.note(a)+this.chord_quality(a)},p.prototype.tempo=function(a){return a=u(a,{min:40,max:320}),this.integer({min:a.min,max:a.max})},p.prototype.coin=function(a){return this.bool()?"heads":"tails"},p.prototype.d4=h({min:1,max:4}),p.prototype.d6=h({min:1,max:6}),p.prototype.d8=h({min:1,max:8}),p.prototype.d10=h({min:1,max:10}),p.prototype.d12=h({min:1,max:12}),p.prototype.d20=h({min:1,max:20}),p.prototype.d30=h({min:1,max:30}),p.prototype.d100=h({min:1,max:100}),p.prototype.rpg=function(a,n){if(n=u(n),a){var e=a.toLowerCase().split("d"),t=[];if(2!==e.length||!parseInt(e[0],10)||!parseInt(e[1],10))throw new Error("Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");for(var i=e[0];i>0;i--)t[i-1]=this.natural({min:1,max:e[1]});return void 0!==n.sum&&n.sum?t.reduce(function(a,n){return a+n}):t}throw new RangeError("Chance: A type of die roll must be included")},p.prototype.guid=function(a){a=u(a,{version:5});var n="abcdef1234567890";return this.string({pool:n,length:8})+"-"+this.string({pool:n,length:4})+"-"+a.version+this.string({pool:n,length:3})+"-"+this.string({pool:"ab89",length:1})+this.string({pool:n,length:3})+"-"+this.string({pool:n,length:12})},p.prototype.hash=function(a){var n="upper"===(a=u(a,{length:40,casing:"lower"})).casing?s.toUpperCase():s;return this.string({pool:n,length:a.length})},p.prototype.luhn_check=function(a){var n=a.toString();return+n.substring(n.length-1)===this.luhn_calculate(+n.substring(0,n.length-1))},p.prototype.luhn_calculate=function(a){for(var n,e=a.toString().split("").reverse(),t=0,i=0,r=e.length;r>i;++i)n=+e[i],i%2==0&&(n*=2)>9&&(n-=9),t+=n;return 9*t%10},p.prototype.md5=function(a){var n={str:"",key:null,raw:!1};if(a)if("string"==typeof a)n.str=a,a={};else{if("object"!=typeof a)return null;if("Array"===a.constructor)return null}else n.str=this.string(),a={};if(!(n=u(a,n)).str)throw new Error("A parameter is required to return an md5 hash.");return this.bimd5.md5(n.str,n.key,n.raw)},p.prototype.file=function(a){var n,e=a||{},t=Object.keys(this.get("fileExtension"));if(n=this.word({length:e.length}),e.extension)return n+"."+e.extension;if(e.extensions){if(Array.isArray(e.extensions))return n+"."+this.pickone(e.extensions);if(e.extensions.constructor===Object){var i=e.extensions,r=Object.keys(i);return n+"."+this.pickone(i[this.pickone(r)])}throw new Error("Chance: Extensions must be an Array or Object")}if(e.fileType){var o=e.fileType;if(-1!==t.indexOf(o))return n+"."+this.pickone(this.get("fileExtension")[o]);throw new RangeError("Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'")}return n+"."+this.pickone(this.get("fileExtension")[this.pickone(t)])};var g={firstNames:{male:{en:["James","John","Robert","Michael","William","David","Richard","Joseph","Charles","Thomas","Christopher","Daniel","Matthew","George","Donald","Anthony","Paul","Mark","Edward","Steven","Kenneth","Andrew","Brian","Joshua","Kevin","Ronald","Timothy","Jason","Jeffrey","Frank","Gary","Ryan","Nicholas","Eric","Stephen","Jacob","Larry","Jonathan","Scott","Raymond","Justin","Brandon","Gregory","Samuel","Benjamin","Patrick","Jack","Henry","Walter","Dennis","Jerry","Alexander","Peter","Tyler","Douglas","Harold","Aaron","Jose","Adam","Arthur","Zachary","Carl","Nathan","Albert","Kyle","Lawrence","Joe","Willie","Gerald","Roger","Keith","Jeremy","Terry","Harry","Ralph","Sean","Jesse","Roy","Louis","Billy","Austin","Bruce","Eugene","Christian","Bryan","Wayne","Russell","Howard","Fred","Ethan","Jordan","Philip","Alan","Juan","Randy","Vincent","Bobby","Dylan","Johnny","Phillip","Victor","Clarence","Ernest","Martin","Craig","Stanley","Shawn","Travis","Bradley","Leonard","Earl","Gabriel","Jimmy","Francis","Todd","Noah","Danny","Dale","Cody","Carlos","Allen","Frederick","Logan","Curtis","Alex","Joel","Luis","Norman","Marvin","Glenn","Tony","Nathaniel","Rodney","Melvin","Alfred","Steve","Cameron","Chad","Edwin","Caleb","Evan","Antonio","Lee","Herbert","Jeffery","Isaac","Derek","Ricky","Marcus","Theodore","Elijah","Luke","Jesus","Eddie","Troy","Mike","Dustin","Ray","Adrian","Bernard","Leroy","Angel","Randall","Wesley","Ian","Jared","Mason","Hunter","Calvin","Oscar","Clifford","Jay","Shane","Ronnie","Barry","Lucas","Corey","Manuel","Leo","Tommy","Warren","Jackson","Isaiah","Connor","Don","Dean","Jon","Julian","Miguel","Bill","Lloyd","Charlie","Mitchell","Leon","Jerome","Darrell","Jeremiah","Alvin","Brett","Seth","Floyd","Jim","Blake","Micheal","Gordon","Trevor","Lewis","Erik","Edgar","Vernon","Devin","Gavin","Jayden","Chris","Clyde","Tom","Derrick","Mario","Brent","Marc","Herman","Chase","Dominic","Ricardo","Franklin","Maurice","Max","Aiden","Owen","Lester","Gilbert","Elmer","Gene","Francisco","Glen","Cory","Garrett","Clayton","Sam","Jorge","Chester","Alejandro","Jeff","Harvey","Milton","Cole","Ivan","Andre","Duane","Landon"],it:["Adolfo","Alberto","Aldo","Alessandro","Alessio","Alfredo","Alvaro","Andrea","Angelo","Angiolo","Antonino","Antonio","Attilio","Benito","Bernardo","Bruno","Carlo","Cesare","Christian","Claudio","Corrado","Cosimo","Cristian","Cristiano","Daniele","Dario","David","Davide","Diego","Dino","Domenico","Duccio","Edoardo","Elia","Elio","Emanuele","Emiliano","Emilio","Enrico","Enzo","Ettore","Fabio","Fabrizio","Federico","Ferdinando","Fernando","Filippo","Francesco","Franco","Gabriele","Giacomo","Giampaolo","Giampiero","Giancarlo","Gianfranco","Gianluca","Gianmarco","Gianni","Gino","Giorgio","Giovanni","Giuliano","Giulio","Giuseppe","Graziano","Gregorio","Guido","Iacopo","Jacopo","Lapo","Leonardo","Lorenzo","Luca","Luciano","Luigi","Manuel","Marcello","Marco","Marino","Mario","Massimiliano","Massimo","Matteo","Mattia","Maurizio","Mauro","Michele","Mirko","Mohamed","Nello","Neri","Niccolò","Nicola","Osvaldo","Otello","Paolo","Pier Luigi","Piero","Pietro","Raffaele","Remo","Renato","Renzo","Riccardo","Roberto","Rolando","Romano","Salvatore","Samuele","Sandro","Sergio","Silvano","Simone","Stefano","Thomas","Tommaso","Ubaldo","Ugo","Umberto","Valerio","Valter","Vasco","Vincenzo","Vittorio"],nl:["Aaron","Abel","Adam","Adriaan","Albert","Alexander","Ali","Arjen","Arno","Bart","Bas","Bastiaan","Benjamin","Bob","Boris","Bram","Brent","Cas","Casper","Chris","Christiaan","Cornelis","Daan","Daley","Damian","Dani","Daniel","Daniël","David","Dean","Dirk","Dylan","Egbert","Elijah","Erik","Erwin","Evert","Ezra","Fabian","Fedde","Finn","Florian","Floris","Frank","Frans","Frederik","Freek","Geert","Gerard","Gerben","Gerrit","Gijs","Guus","Hans","Hendrik","Henk","Herman","Hidde","Hugo","Jaap","Jan Jaap","Jan-Willem","Jack","Jacob","Jan","Jason","Jasper","Jayden","Jelle","Jelte","Jens","Jeroen","Jesse","Jim","Job","Joep","Johannes","John","Jonathan","Joris","Joshua","Joël","Julian","Kees","Kevin","Koen","Lars","Laurens","Leendert","Lennard","Lodewijk","Luc","Luca","Lucas","Lukas","Luuk","Maarten","Marcus","Martijn","Martin","Matthijs","Maurits","Max","Mees","Melle","Mick","Mika","Milan","Mohamed","Mohammed","Morris","Muhammed","Nathan","Nick","Nico","Niek","Niels","Noah","Noud","Olivier","Oscar","Owen","Paul","Pepijn","Peter","Pieter","Pim","Quinten","Reinier","Rens","Robin","Ruben","Sam","Samuel","Sander","Sebastiaan","Sem","Sep","Sepp","Siem","Simon","Stan","Stef","Steven","Stijn","Sven","Teun","Thijmen","Thijs","Thomas","Tijn","Tim","Timo","Tobias","Tom","Victor","Vince","Willem","Wim","Wouter","Yusuf"],fr:["Aaron","Abdon","Abel","Abélard","Abelin","Abondance","Abraham","Absalon","Acace","Achaire","Achille","Adalard","Adalbald","Adalbéron","Adalbert","Adalric","Adam","Adegrin","Adel","Adelin","Andelin","Adelphe","Adam","Adéodat","Adhémar","Adjutor","Adolphe","Adonis","Adon","Adrien","Agapet","Agathange","Agathon","Agilbert","Agénor","Agnan","Aignan","Agrippin","Aimable","Aimé","Alain","Alban","Albin","Aubin","Albéric","Albert","Albertet","Alcibiade","Alcide","Alcée","Alcime","Aldonce","Aldric","Aldéric","Aleaume","Alexandre","Alexis","Alix","Alliaume","Aleaume","Almine","Almire","Aloïs","Alphée","Alphonse","Alpinien","Alverède","Amalric","Amaury","Amandin","Amant","Ambroise","Amédée","Amélien","Amiel","Amour","Anaël","Anastase","Anatole","Ancelin","Andéol","Andoche","André","Andoche","Ange","Angelin","Angilbe","Anglebert","Angoustan","Anicet","Anne","Annibal","Ansbert","Anselme","Anthelme","Antheaume","Anthime","Antide","Antoine","Antonius","Antonin","Apollinaire","Apollon","Aquilin","Arcade","Archambaud","Archambeau","Archange","Archibald","Arian","Ariel","Ariste","Aristide","Armand","Armel","Armin","Arnould","Arnaud","Arolde","Arsène","Arsinoé","Arthaud","Arthème","Arthur","Ascelin","Athanase","Aubry","Audebert","Audouin","Audran","Audric","Auguste","Augustin","Aurèle","Aurélien","Aurian","Auxence","Axel","Aymard","Aymeric","Aymon","Aymond","Balthazar","Baptiste","Barnabé","Barthélemy","Bartimée","Basile","Bastien","Baudouin","Bénigne","Benjamin","Benoît","Bérenger","Bérard","Bernard","Bertrand","Blaise","Bon","Boniface","Bouchard","Brice","Brieuc","Bruno","Brunon","Calixte","Calliste","Camélien","Camille","Camillien","Candide","Caribert","Carloman","Cassandre","Cassien","Cédric","Céleste","Célestin","Célien","Césaire","César","Charles","Charlemagne","Childebert","Chilpéric","Chrétien","Christian","Christodule","Christophe","Chrysostome","Clarence","Claude","Claudien","Cléandre","Clément","Clotaire","Côme","Constance","Constant","Constantin","Corentin","Cyprien","Cyriaque","Cyrille","Cyril","Damien","Daniel","David","Delphin","Denis","Désiré","Didier","Dieudonné","Dimitri","Dominique","Dorian","Dorothée","Edgard","Edmond","Édouard","Éleuthère","Élie","Élisée","Émeric","Émile","Émilien","Emmanuel","Enguerrand","Épiphane","Éric","Esprit","Ernest","Étienne","Eubert","Eudes","Eudoxe","Eugène","Eusèbe","Eustache","Évariste","Évrard","Fabien","Fabrice","Falba","Félicité","Félix","Ferdinand","Fiacre","Fidèle","Firmin","Flavien","Flodoard","Florent","Florentin","Florestan","Florian","Fortuné","Foulques","Francisque","François","Français","Franciscus","Francs","Frédéric","Fulbert","Fulcran","Fulgence","Gabin","Gabriel","Gaël","Garnier","Gaston","Gaspard","Gatien","Gaud","Gautier","Gédéon","Geoffroy","Georges","Géraud","Gérard","Gerbert","Germain","Gervais","Ghislain","Gilbert","Gilles","Girart","Gislebert","Gondebaud","Gonthier","Gontran","Gonzague","Grégoire","Guérin","Gui","Guillaume","Gustave","Guy","Guyot","Hardouin","Hector","Hédelin","Hélier","Henri","Herbert","Herluin","Hervé","Hilaire","Hildebert","Hincmar","Hippolyte","Honoré","Hubert","Hugues","Innocent","Isabeau","Isidore","Jacques","Japhet","Jason","Jean","Jeannel","Jeannot","Jérémie","Jérôme","Joachim","Joanny","Job","Jocelyn","Joël","Johan","Jonas","Jonathan","Joseph","Josse","Josselin","Jourdain","Jude","Judicaël","Jules","Julien","Juste","Justin","Lambert","Landry","Laurent","Lazare","Léandre","Léon","Léonard","Léopold","Leu","Loup","Leufroy","Libère","Liétald","Lionel","Loïc","Longin","Lorrain","Lorraine","Lothaire","Louis","Loup","Luc","Lucas","Lucien","Ludolphe","Ludovic","Macaire","Malo","Mamert","Manassé","Marc","Marceau","Marcel","Marcelin","Marius","Marseille","Martial","Martin","Mathurin","Matthias","Mathias","Matthieu","Maugis","Maurice","Mauricet","Maxence","Maxime","Maximilien","Mayeul","Médéric","Melchior","Mence","Merlin","Mérovée","Michaël","Michel","Moïse","Morgan","Nathan","Nathanaël","Narcisse","Néhémie","Nestor","Nestor","Nicéphore","Nicolas","Noé","Noël","Norbert","Normand","Normands","Octave","Odilon","Odon","Oger","Olivier","Oury","Pacôme","Palémon","Parfait","Pascal","Paterne","Patrice","Paul","Pépin","Perceval","Philémon","Philibert","Philippe","Philothée","Pie","Pierre","Pierrick","Prosper","Quentin","Raoul","Raphaël","Raymond","Régis","Réjean","Rémi","Renaud","René","Reybaud","Richard","Robert","Roch","Rodolphe","Rodrigue","Roger","Roland","Romain","Romuald","Roméo","Rome","Ronan","Roselin","Salomon","Samuel","Savin","Savinien","Scholastique","Sébastien","Séraphin","Serge","Séverin","Sidoine","Sigebert","Sigismond","Silvère","Simon","Siméon","Sixte","Stanislas","Stéphane","Stephan","Sylvain","Sylvestre","Tancrède","Tanguy","Taurin","Théodore","Théodose","Théophile","Théophraste","Thibault","Thibert","Thierry","Thomas","Timoléon","Timothée","Titien","Tonnin","Toussaint","Trajan","Tristan","Turold","Tim","Ulysse","Urbain","Valentin","Valère","Valéry","Venance","Venant","Venceslas","Vianney","Victor","Victorien","Victorin","Vigile","Vincent","Vital","Vitalien","Vivien","Waleran","Wandrille","Xavier","Xénophon","Yves","Zacharie","Zaché","Zéphirin"]},female:{en:["Mary","Emma","Elizabeth","Minnie","Margaret","Ida","Alice","Bertha","Sarah","Annie","Clara","Ella","Florence","Cora","Martha","Laura","Nellie","Grace","Carrie","Maude","Mabel","Bessie","Jennie","Gertrude","Julia","Hattie","Edith","Mattie","Rose","Catherine","Lillian","Ada","Lillie","Helen","Jessie","Louise","Ethel","Lula","Myrtle","Eva","Frances","Lena","Lucy","Edna","Maggie","Pearl","Daisy","Fannie","Josephine","Dora","Rosa","Katherine","Agnes","Marie","Nora","May","Mamie","Blanche","Stella","Ellen","Nancy","Effie","Sallie","Nettie","Della","Lizzie","Flora","Susie","Maud","Mae","Etta","Harriet","Sadie","Caroline","Katie","Lydia","Elsie","Kate","Susan","Mollie","Alma","Addie","Georgia","Eliza","Lulu","Nannie","Lottie","Amanda","Belle","Charlotte","Rebecca","Ruth","Viola","Olive","Amelia","Hannah","Jane","Virginia","Emily","Matilda","Irene","Kathryn","Esther","Willie","Henrietta","Ollie","Amy","Rachel","Sara","Estella","Theresa","Augusta","Ora","Pauline","Josie","Lola","Sophia","Leona","Anne","Mildred","Ann","Beulah","Callie","Lou","Delia","Eleanor","Barbara","Iva","Louisa","Maria","Mayme","Evelyn","Estelle","Nina","Betty","Marion","Bettie","Dorothy","Luella","Inez","Lela","Rosie","Allie","Millie","Janie","Cornelia","Victoria","Ruby","Winifred","Alta","Celia","Christine","Beatrice","Birdie","Harriett","Mable","Myra","Sophie","Tillie","Isabel","Sylvia","Carolyn","Isabelle","Leila","Sally","Ina","Essie","Bertie","Nell","Alberta","Katharine","Lora","Rena","Mina","Rhoda","Mathilda","Abbie","Eula","Dollie","Hettie","Eunice","Fanny","Ola","Lenora","Adelaide","Christina","Lelia","Nelle","Sue","Johanna","Lilly","Lucinda","Minerva","Lettie","Roxie","Cynthia","Helena","Hilda","Hulda","Bernice","Genevieve","Jean","Cordelia","Marian","Francis","Jeanette","Adeline","Gussie","Leah","Lois","Lura","Mittie","Hallie","Isabella","Olga","Phoebe","Teresa","Hester","Lida","Lina","Winnie","Claudia","Marguerite","Vera","Cecelia","Bess","Emilie","Rosetta","Verna","Myrtie","Cecilia","Elva","Olivia","Ophelia","Georgie","Elnora","Violet","Adele","Lily","Linnie","Loretta","Madge","Polly","Virgie","Eugenia","Lucile","Lucille","Mabelle","Rosalie"],it:["Ada","Adriana","Alessandra","Alessia","Alice","Angela","Anna","Anna Maria","Annalisa","Annita","Annunziata","Antonella","Arianna","Asia","Assunta","Aurora","Barbara","Beatrice","Benedetta","Bianca","Bruna","Camilla","Carla","Carlotta","Carmela","Carolina","Caterina","Catia","Cecilia","Chiara","Cinzia","Clara","Claudia","Costanza","Cristina","Daniela","Debora","Diletta","Dina","Donatella","Elena","Eleonora","Elisa","Elisabetta","Emanuela","Emma","Eva","Federica","Fernanda","Fiorella","Fiorenza","Flora","Franca","Francesca","Gabriella","Gaia","Gemma","Giada","Gianna","Gina","Ginevra","Giorgia","Giovanna","Giulia","Giuliana","Giuseppa","Giuseppina","Grazia","Graziella","Greta","Ida","Ilaria","Ines","Iolanda","Irene","Irma","Isabella","Jessica","Laura","Lea","Letizia","Licia","Lidia","Liliana","Lina","Linda","Lisa","Livia","Loretta","Luana","Lucia","Luciana","Lucrezia","Luisa","Manuela","Mara","Marcella","Margherita","Maria","Maria Cristina","Maria Grazia","Maria Luisa","Maria Pia","Maria Teresa","Marina","Marisa","Marta","Martina","Marzia","Matilde","Melissa","Michela","Milena","Mirella","Monica","Natalina","Nella","Nicoletta","Noemi","Olga","Paola","Patrizia","Piera","Pierina","Raffaella","Rebecca","Renata","Rina","Rita","Roberta","Rosa","Rosanna","Rossana","Rossella","Sabrina","Sandra","Sara","Serena","Silvana","Silvia","Simona","Simonetta","Sofia","Sonia","Stefania","Susanna","Teresa","Tina","Tiziana","Tosca","Valentina","Valeria","Vanda","Vanessa","Vanna","Vera","Veronica","Vilma","Viola","Virginia","Vittoria"],nl:["Ada","Arianne","Afke","Amanda","Amber","Amy","Aniek","Anita","Anja","Anna","Anne","Annelies","Annemarie","Annette","Anouk","Astrid","Aukje","Barbara","Bianca","Carla","Carlijn","Carolien","Chantal","Charlotte","Claudia","Daniëlle","Debora","Diane","Dora","Eline","Elise","Ella","Ellen","Emma","Esmee","Evelien","Esther","Erica","Eva","Femke","Fleur","Floor","Froukje","Gea","Gerda","Hanna","Hanneke","Heleen","Hilde","Ilona","Ina","Inge","Ingrid","Iris","Isabel","Isabelle","Janneke","Jasmijn","Jeanine","Jennifer","Jessica","Johanna","Joke","Julia","Julie","Karen","Karin","Katja","Kim","Lara","Laura","Lena","Lianne","Lieke","Lilian","Linda","Lisa","Lisanne","Lotte","Louise","Maaike","Manon","Marga","Maria","Marissa","Marit","Marjolein","Martine","Marleen","Melissa","Merel","Miranda","Michelle","Mirjam","Mirthe","Naomi","Natalie","Nienke","Nina","Noortje","Olivia","Patricia","Paula","Paulien","Ramona","Ria","Rianne","Roos","Rosanne","Ruth","Sabrina","Sandra","Sanne","Sara","Saskia","Silvia","Sofia","Sophie","Sonja","Suzanne","Tamara","Tess","Tessa","Tineke","Valerie","Vanessa","Veerle","Vera","Victoria","Wendy","Willeke","Yvonne","Zoë"],fr:["Abdon","Abel","Abigaëlle","Abigaïl","Acacius","Acanthe","Adalbert","Adalsinde","Adegrine","Adélaïde","Adèle","Adélie","Adeline","Adeltrude","Adolphe","Adonis","Adrastée","Adrehilde","Adrienne","Agathe","Agilbert","Aglaé","Aignan","Agneflète","Agnès","Agrippine","Aimé","Alaine","Alaïs","Albane","Albérade","Alberte","Alcide","Alcine","Alcyone","Aldegonde","Aleth","Alexandrine","Alexine","Alice","Aliénor","Aliette","Aline","Alix","Alizé","Aloïse","Aloyse","Alphonsine","Althée","Amaliane","Amalthée","Amande","Amandine","Amant","Amarande","Amaranthe","Amaryllis","Ambre","Ambroisie","Amélie","Améthyste","Aminte","Anaël","Anaïs","Anastasie","Anatole","Ancelin","Andrée","Anémone","Angadrême","Angèle","Angeline","Angélique","Angilbert","Anicet","Annabelle","Anne","Annette","Annick","Annie","Annonciade","Ansbert","Anstrudie","Anthelme","Antigone","Antoinette","Antonine","Aphélie","Apolline","Apollonie","Aquiline","Arabelle","Arcadie","Archange","Argine","Ariane","Aricie","Ariel","Arielle","Arlette","Armance","Armande","Armandine","Armelle","Armide","Armelle","Armin","Arnaud","Arsène","Arsinoé","Artémis","Arthur","Ascelin","Ascension","Assomption","Astarté","Astérie","Astrée","Astrid","Athalie","Athanasie","Athina","Aube","Albert","Aude","Audrey","Augustine","Aure","Aurélie","Aurélien","Aurèle","Aurore","Auxence","Aveline","Abigaëlle","Avoye","Axelle","Aymard","Azalée","Adèle","Adeline","Barbe","Basilisse","Bathilde","Béatrice","Béatrix","Bénédicte","Bérengère","Bernadette","Berthe","Bertille","Beuve","Blanche","Blanc","Blandine","Brigitte","Brune","Brunehilde","Callista","Camille","Capucine","Carine","Caroline","Cassandre","Catherine","Cécile","Céleste","Célestine","Céline","Chantal","Charlène","Charline","Charlotte","Chloé","Christelle","Christiane","Christine","Claire","Clara","Claude","Claudine","Clarisse","Clémence","Clémentine","Cléo","Clio","Clotilde","Coline","Conception","Constance","Coralie","Coraline","Corentine","Corinne","Cyrielle","Daniel","Daniel","Daphné","Débora","Delphine","Denise","Diane","Dieudonné","Dominique","Doriane","Dorothée","Douce","Édith","Edmée","Éléonore","Éliane","Élia","Éliette","Élisabeth","Élise","Ella","Élodie","Éloïse","Elsa","Émeline","Émérance","Émérentienne","Émérencie","Émilie","Emma","Emmanuelle","Emmelie","Ernestine","Esther","Estelle","Eudoxie","Eugénie","Eulalie","Euphrasie","Eusébie","Évangéline","Eva","Ève","Évelyne","Fanny","Fantine","Faustine","Félicie","Fernande","Flavie","Fleur","Flore","Florence","Florie","Fortuné","France","Francia","Françoise","Francine","Gabrielle","Gaëlle","Garance","Geneviève","Georgette","Gerberge","Germaine","Gertrude","Gisèle","Guenièvre","Guilhemine","Guillemette","Gustave","Gwenael","Hélène","Héloïse","Henriette","Hermine","Hermione","Hippolyte","Honorine","Hortense","Huguette","Ines","Irène","Irina","Iris","Isabeau","Isabelle","Iseult","Isolde","Ismérie","Jacinthe","Jacqueline","Jade","Janine","Jeanne","Jocelyne","Joëlle","Joséphine","Judith","Julia","Julie","Jules","Juliette","Justine","Katy","Kathy","Katie","Laura","Laure","Laureline","Laurence","Laurene","Lauriane","Laurianne","Laurine","Léa","Léna","Léonie","Léon","Léontine","Lorraine","Lucie","Lucienne","Lucille","Ludivine","Lydie","Lydie","Megane","Madeleine","Magali","Maguelone","Mallaury","Manon","Marceline","Margot","Marguerite","Marianne","Marie","Myriam","Marie","Marine","Marion","Marlène","Marthe","Martine","Mathilde","Maud","Maureen","Mauricette","Maxime","Mélanie","Melissa","Mélissandre","Mélisande","Mélodie","Michel","Micheline","Mireille","Miriam","Moïse","Monique","Morgane","Muriel","Mylène","Nadège","Nadine","Nathalie","Nicole","Nicolette","Nine","Noël","Noémie","Océane","Odette","Odile","Olive","Olivia","Olympe","Ombline","Ombeline","Ophélie","Oriande","Oriane","Ozanne","Pascale","Pascaline","Paule","Paulette","Pauline","Priscille","Prisca","Prisque","Pécine","Pélagie","Pénélope","Perrine","Pétronille","Philippine","Philomène","Philothée","Primerose","Prudence","Pulchérie","Quentine","Quiéta","Quintia","Quintilla","Rachel","Raphaëlle","Raymonde","Rebecca","Régine","Réjeanne","René","Rita","Rita","Rolande","Romane","Rosalie","Rose","Roseline","Sabine","Salomé","Sandra","Sandrine","Sarah","Ségolène","Séverine","Sibylle","Simone","Sixt","Solange","Soline","Solène","Sophie","Stéphanie","Suzanne","Sylvain","Sylvie","Tatiana","Thaïs","Théodora","Thérèse","Tiphaine","Ursule","Valentine","Valérie","Véronique","Victoire","Victorine","Vinciane","Violette","Virginie","Viviane","Xavière","Yolande","Ysaline","Yvette","Yvonne","Zélie","Zita","Zoé"]}},lastNames:{en:["Smith","Johnson","Williams","Jones","Brown","Davis","Miller","Wilson","Moore","Taylor","Anderson","Thomas","Jackson","White","Harris","Martin","Thompson","Garcia","Martinez","Robinson","Clark","Rodriguez","Lewis","Lee","Walker","Hall","Allen","Young","Hernandez","King","Wright","Lopez","Hill","Scott","Green","Adams","Baker","Gonzalez","Nelson","Carter","Mitchell","Perez","Roberts","Turner","Phillips","Campbell","Parker","Evans","Edwards","Collins","Stewart","Sanchez","Morris","Rogers","Reed","Cook","Morgan","Bell","Murphy","Bailey","Rivera","Cooper","Richardson","Cox","Howard","Ward","Torres","Peterson","Gray","Ramirez","James","Watson","Brooks","Kelly","Sanders","Price","Bennett","Wood","Barnes","Ross","Henderson","Coleman","Jenkins","Perry","Powell","Long","Patterson","Hughes","Flores","Washington","Butler","Simmons","Foster","Gonzales","Bryant","Alexander","Russell","Griffin","Diaz","Hayes","Myers","Ford","Hamilton","Graham","Sullivan","Wallace","Woods","Cole","West","Jordan","Owens","Reynolds","Fisher","Ellis","Harrison","Gibson","McDonald","Cruz","Marshall","Ortiz","Gomez","Murray","Freeman","Wells","Webb","Simpson","Stevens","Tucker","Porter","Hunter","Hicks","Crawford","Henry","Boyd","Mason","Morales","Kennedy","Warren","Dixon","Ramos","Reyes","Burns","Gordon","Shaw","Holmes","Rice","Robertson","Hunt","Black","Daniels","Palmer","Mills","Nichols","Grant","Knight","Ferguson","Rose","Stone","Hawkins","Dunn","Perkins","Hudson","Spencer","Gardner","Stephens","Payne","Pierce","Berry","Matthews","Arnold","Wagner","Willis","Ray","Watkins","Olson","Carroll","Duncan","Snyder","Hart","Cunningham","Bradley","Lane","Andrews","Ruiz","Harper","Fox","Riley","Armstrong","Carpenter","Weaver","Greene","Lawrence","Elliott","Chavez","Sims","Austin","Peters","Kelley","Franklin","Lawson","Fields","Gutierrez","Ryan","Schmidt","Carr","Vasquez","Castillo","Wheeler","Chapman","Oliver","Montgomery","Richards","Williamson","Johnston","Banks","Meyer","Bishop","McCoy","Howell","Alvarez","Morrison","Hansen","Fernandez","Garza","Harvey","Little","Burton","Stanley","Nguyen","George","Jacobs","Reid","Kim","Fuller","Lynch","Dean","Gilbert","Garrett","Romero","Welch","Larson","Frazier","Burke","Hanson","Day","Mendoza","Moreno","Bowman","Medina","Fowler","Brewer","Hoffman","Carlson","Silva","Pearson","Holland","Douglas","Fleming","Jensen","Vargas","Byrd","Davidson","Hopkins","May","Terry","Herrera","Wade","Soto","Walters","Curtis","Neal","Caldwell","Lowe","Jennings","Barnett","Graves","Jimenez","Horton","Shelton","Barrett","Obrien","Castro","Sutton","Gregory","McKinney","Lucas","Miles","Craig","Rodriquez","Chambers","Holt","Lambert","Fletcher","Watts","Bates","Hale","Rhodes","Pena","Beck","Newman","Haynes","McDaniel","Mendez","Bush","Vaughn","Parks","Dawson","Santiago","Norris","Hardy","Love","Steele","Curry","Powers","Schultz","Barker","Guzman","Page","Munoz","Ball","Keller","Chandler","Weber","Leonard","Walsh","Lyons","Ramsey","Wolfe","Schneider","Mullins","Benson","Sharp","Bowen","Daniel","Barber","Cummings","Hines","Baldwin","Griffith","Valdez","Hubbard","Salazar","Reeves","Warner","Stevenson","Burgess","Santos","Tate","Cross","Garner","Mann","Mack","Moss","Thornton","Dennis","McGee","Farmer","Delgado","Aguilar","Vega","Glover","Manning","Cohen","Harmon","Rodgers","Robbins","Newton","Todd","Blair","Higgins","Ingram","Reese","Cannon","Strickland","Townsend","Potter","Goodwin","Walton","Rowe","Hampton","Ortega","Patton","Swanson","Joseph","Francis","Goodman","Maldonado","Yates","Becker","Erickson","Hodges","Rios","Conner","Adkins","Webster","Norman","Malone","Hammond","Flowers","Cobb","Moody","Quinn","Blake","Maxwell","Pope","Floyd","Osborne","Paul","McCarthy","Guerrero","Lindsey","Estrada","Sandoval","Gibbs","Tyler","Gross","Fitzgerald","Stokes","Doyle","Sherman","Saunders","Wise","Colon","Gill","Alvarado","Greer","Padilla","Simon","Waters","Nunez","Ballard","Schwartz","McBride","Houston","Christensen","Klein","Pratt","Briggs","Parsons","McLaughlin","Zimmerman","French","Buchanan","Moran","Copeland","Roy","Pittman","Brady","McCormick","Holloway","Brock","Poole","Frank","Logan","Owen","Bass","Marsh","Drake","Wong","Jefferson","Park","Morton","Abbott","Sparks","Patrick","Norton","Huff","Clayton","Massey","Lloyd","Figueroa","Carson","Bowers","Roberson","Barton","Tran","Lamb","Harrington","Casey","Boone","Cortez","Clarke","Mathis","Singleton","Wilkins","Cain","Bryan","Underwood","Hogan","McKenzie","Collier","Luna","Phelps","McGuire","Allison","Bridges","Wilkerson","Nash","Summers","Atkins"],it:["Acciai","Aglietti","Agostini","Agresti","Ahmed","Aiazzi","Albanese","Alberti","Alessi","Alfani","Alinari","Alterini","Amato","Ammannati","Ancillotti","Andrei","Andreini","Andreoni","Angeli","Anichini","Antonelli","Antonini","Arena","Ariani","Arnetoli","Arrighi","Baccani","Baccetti","Bacci","Bacherini","Badii","Baggiani","Baglioni","Bagni","Bagnoli","Baldassini","Baldi","Baldini","Ballerini","Balli","Ballini","Balloni","Bambi","Banchi","Bandinelli","Bandini","Bani","Barbetti","Barbieri","Barchielli","Bardazzi","Bardelli","Bardi","Barducci","Bargellini","Bargiacchi","Barni","Baroncelli","Baroncini","Barone","Baroni","Baronti","Bartalesi","Bartoletti","Bartoli","Bartolini","Bartoloni","Bartolozzi","Basagni","Basile","Bassi","Batacchi","Battaglia","Battaglini","Bausi","Becagli","Becattini","Becchi","Becucci","Bellandi","Bellesi","Belli","Bellini","Bellucci","Bencini","Benedetti","Benelli","Beni","Benini","Bensi","Benucci","Benvenuti","Berlincioni","Bernacchioni","Bernardi","Bernardini","Berni","Bernini","Bertelli","Berti","Bertini","Bessi","Betti","Bettini","Biagi","Biagini","Biagioni","Biagiotti","Biancalani","Bianchi","Bianchini","Bianco","Biffoli","Bigazzi","Bigi","Biliotti","Billi","Binazzi","Bindi","Bini","Biondi","Bizzarri","Bocci","Bogani","Bolognesi","Bonaiuti","Bonanni","Bonciani","Boncinelli","Bondi","Bonechi","Bongini","Boni","Bonini","Borchi","Boretti","Borghi","Borghini","Borgioli","Borri","Borselli","Boschi","Bottai","Bracci","Braccini","Brandi","Braschi","Bravi","Brazzini","Breschi","Brilli","Brizzi","Brogelli","Brogi","Brogioni","Brunelli","Brunetti","Bruni","Bruno","Brunori","Bruschi","Bucci","Bucciarelli","Buccioni","Bucelli","Bulli","Burberi","Burchi","Burgassi","Burroni","Bussotti","Buti","Caciolli","Caiani","Calabrese","Calamai","Calamandrei","Caldini","Calo'","Calonaci","Calosi","Calvelli","Cambi","Camiciottoli","Cammelli","Cammilli","Campolmi","Cantini","Capanni","Capecchi","Caponi","Cappelletti","Cappelli","Cappellini","Cappugi","Capretti","Caputo","Carbone","Carboni","Cardini","Carlesi","Carletti","Carli","Caroti","Carotti","Carrai","Carraresi","Carta","Caruso","Casalini","Casati","Caselli","Casini","Castagnoli","Castellani","Castelli","Castellucci","Catalano","Catarzi","Catelani","Cavaciocchi","Cavallaro","Cavallini","Cavicchi","Cavini","Ceccarelli","Ceccatelli","Ceccherelli","Ceccherini","Cecchi","Cecchini","Cecconi","Cei","Cellai","Celli","Cellini","Cencetti","Ceni","Cenni","Cerbai","Cesari","Ceseri","Checcacci","Checchi","Checcucci","Cheli","Chellini","Chen","Cheng","Cherici","Cherubini","Chiaramonti","Chiarantini","Chiarelli","Chiari","Chiarini","Chiarugi","Chiavacci","Chiesi","Chimenti","Chini","Chirici","Chiti","Ciabatti","Ciampi","Cianchi","Cianfanelli","Cianferoni","Ciani","Ciapetti","Ciappi","Ciardi","Ciatti","Cicali","Ciccone","Cinelli","Cini","Ciobanu","Ciolli","Cioni","Cipriani","Cirillo","Cirri","Ciucchi","Ciuffi","Ciulli","Ciullini","Clemente","Cocchi","Cognome","Coli","Collini","Colombo","Colzi","Comparini","Conforti","Consigli","Conte","Conti","Contini","Coppini","Coppola","Corsi","Corsini","Corti","Cortini","Cosi","Costa","Costantini","Costantino","Cozzi","Cresci","Crescioli","Cresti","Crini","Curradi","D'Agostino","D'Alessandro","D'Amico","D'Angelo","Daddi","Dainelli","Dallai","Danti","Davitti","De Angelis","De Luca","De Marco","De Rosa","De Santis","De Simone","De Vita","Degl'Innocenti","Degli Innocenti","Dei","Del Lungo","Del Re","Di Marco","Di Stefano","Dini","Diop","Dobre","Dolfi","Donati","Dondoli","Dong","Donnini","Ducci","Dumitru","Ermini","Esposito","Evangelisti","Fabbri","Fabbrini","Fabbrizzi","Fabbroni","Fabbrucci","Fabiani","Facchini","Faggi","Fagioli","Failli","Faini","Falciani","Falcini","Falcone","Fallani","Falorni","Falsini","Falugiani","Fancelli","Fanelli","Fanetti","Fanfani","Fani","Fantappie'","Fantechi","Fanti","Fantini","Fantoni","Farina","Fattori","Favilli","Fedi","Fei","Ferrante","Ferrara","Ferrari","Ferraro","Ferretti","Ferri","Ferrini","Ferroni","Fiaschi","Fibbi","Fiesoli","Filippi","Filippini","Fini","Fioravanti","Fiore","Fiorentini","Fiorini","Fissi","Focardi","Foggi","Fontana","Fontanelli","Fontani","Forconi","Formigli","Forte","Forti","Fortini","Fossati","Fossi","Francalanci","Franceschi","Franceschini","Franchi","Franchini","Franci","Francini","Francioni","Franco","Frassineti","Frati","Fratini","Frilli","Frizzi","Frosali","Frosini","Frullini","Fusco","Fusi","Gabbrielli","Gabellini","Gagliardi","Galanti","Galardi","Galeotti","Galletti","Galli","Gallo","Gallori","Gambacciani","Gargani","Garofalo","Garuglieri","Gashi","Gasperini","Gatti","Gelli","Gensini","Gentile","Gentili","Geri","Gerini","Gheri","Ghini","Giachetti","Giachi","Giacomelli","Gianassi","Giani","Giannelli","Giannetti","Gianni","Giannini","Giannoni","Giannotti","Giannozzi","Gigli","Giordano","Giorgetti","Giorgi","Giovacchini","Giovannelli","Giovannetti","Giovannini","Giovannoni","Giuliani","Giunti","Giuntini","Giusti","Gonnelli","Goretti","Gori","Gradi","Gramigni","Grassi","Grasso","Graziani","Grazzini","Greco","Grifoni","Grillo","Grimaldi","Grossi","Gualtieri","Guarducci","Guarino","Guarnieri","Guasti","Guerra","Guerri","Guerrini","Guidi","Guidotti","He","Hoxha","Hu","Huang","Iandelli","Ignesti","Innocenti","Jin","La Rosa","Lai","Landi","Landini","Lanini","Lapi","Lapini","Lari","Lascialfari","Lastrucci","Latini","Lazzeri","Lazzerini","Lelli","Lenzi","Leonardi","Leoncini","Leone","Leoni","Lepri","Li","Liao","Lin","Linari","Lippi","Lisi","Livi","Lombardi","Lombardini","Lombardo","Longo","Lopez","Lorenzi","Lorenzini","Lorini","Lotti","Lu","Lucchesi","Lucherini","Lunghi","Lupi","Madiai","Maestrini","Maffei","Maggi","Maggini","Magherini","Magini","Magnani","Magnelli","Magni","Magnolfi","Magrini","Malavolti","Malevolti","Manca","Mancini","Manetti","Manfredi","Mangani","Mannelli","Manni","Mannini","Mannucci","Manuelli","Manzini","Marcelli","Marchese","Marchetti","Marchi","Marchiani","Marchionni","Marconi","Marcucci","Margheri","Mari","Mariani","Marilli","Marinai","Marinari","Marinelli","Marini","Marino","Mariotti","Marsili","Martelli","Martinelli","Martini","Martino","Marzi","Masi","Masini","Masoni","Massai","Materassi","Mattei","Matteini","Matteucci","Matteuzzi","Mattioli","Mattolini","Matucci","Mauro","Mazzanti","Mazzei","Mazzetti","Mazzi","Mazzini","Mazzocchi","Mazzoli","Mazzoni","Mazzuoli","Meacci","Mecocci","Meini","Melani","Mele","Meli","Mengoni","Menichetti","Meoni","Merlini","Messeri","Messina","Meucci","Miccinesi","Miceli","Micheli","Michelini","Michelozzi","Migliori","Migliorini","Milani","Miniati","Misuri","Monaco","Montagnani","Montagni","Montanari","Montelatici","Monti","Montigiani","Montini","Morandi","Morandini","Morelli","Moretti","Morganti","Mori","Morini","Moroni","Morozzi","Mugnai","Mugnaini","Mustafa","Naldi","Naldini","Nannelli","Nanni","Nannini","Nannucci","Nardi","Nardini","Nardoni","Natali","Ndiaye","Nencetti","Nencini","Nencioni","Neri","Nesi","Nesti","Niccolai","Niccoli","Niccolini","Nigi","Nistri","Nocentini","Noferini","Novelli","Nucci","Nuti","Nutini","Oliva","Olivieri","Olmi","Orlandi","Orlandini","Orlando","Orsini","Ortolani","Ottanelli","Pacciani","Pace","Paci","Pacini","Pagani","Pagano","Paggetti","Pagliai","Pagni","Pagnini","Paladini","Palagi","Palchetti","Palloni","Palmieri","Palumbo","Pampaloni","Pancani","Pandolfi","Pandolfini","Panerai","Panichi","Paoletti","Paoli","Paolini","Papi","Papini","Papucci","Parenti","Parigi","Parisi","Parri","Parrini","Pasquini","Passeri","Pecchioli","Pecorini","Pellegrini","Pepi","Perini","Perrone","Peruzzi","Pesci","Pestelli","Petri","Petrini","Petrucci","Pettini","Pezzati","Pezzatini","Piani","Piazza","Piazzesi","Piazzini","Piccardi","Picchi","Piccini","Piccioli","Pieraccini","Pieraccioni","Pieralli","Pierattini","Pieri","Pierini","Pieroni","Pietrini","Pini","Pinna","Pinto","Pinzani","Pinzauti","Piras","Pisani","Pistolesi","Poggesi","Poggi","Poggiali","Poggiolini","Poli","Pollastri","Porciani","Pozzi","Pratellesi","Pratesi","Prosperi","Pruneti","Pucci","Puccini","Puccioni","Pugi","Pugliese","Puliti","Querci","Quercioli","Raddi","Radu","Raffaelli","Ragazzini","Ranfagni","Ranieri","Rastrelli","Raugei","Raveggi","Renai","Renzi","Rettori","Ricci","Ricciardi","Ridi","Ridolfi","Rigacci","Righi","Righini","Rinaldi","Risaliti","Ristori","Rizzo","Rocchi","Rocchini","Rogai","Romagnoli","Romanelli","Romani","Romano","Romei","Romeo","Romiti","Romoli","Romolini","Rontini","Rosati","Roselli","Rosi","Rossetti","Rossi","Rossini","Rovai","Ruggeri","Ruggiero","Russo","Sabatini","Saccardi","Sacchetti","Sacchi","Sacco","Salerno","Salimbeni","Salucci","Salvadori","Salvestrini","Salvi","Salvini","Sanesi","Sani","Sanna","Santi","Santini","Santoni","Santoro","Santucci","Sardi","Sarri","Sarti","Sassi","Sbolci","Scali","Scarpelli","Scarselli","Scopetani","Secci","Selvi","Senatori","Senesi","Serafini","Sereni","Serra","Sestini","Sguanci","Sieni","Signorini","Silvestri","Simoncini","Simonetti","Simoni","Singh","Sodi","Soldi","Somigli","Sorbi","Sorelli","Sorrentino","Sottili","Spina","Spinelli","Staccioli","Staderini","Stefanelli","Stefani","Stefanini","Stella","Susini","Tacchi","Tacconi","Taddei","Tagliaferri","Tamburini","Tanganelli","Tani","Tanini","Tapinassi","Tarchi","Tarchiani","Targioni","Tassi","Tassini","Tempesti","Terzani","Tesi","Testa","Testi","Tilli","Tinti","Tirinnanzi","Toccafondi","Tofanari","Tofani","Tognaccini","Tonelli","Tonini","Torelli","Torrini","Tosi","Toti","Tozzi","Trambusti","Trapani","Tucci","Turchi","Ugolini","Ulivi","Valente","Valenti","Valentini","Vangelisti","Vanni","Vannini","Vannoni","Vannozzi","Vannucchi","Vannucci","Ventura","Venturi","Venturini","Vestri","Vettori","Vichi","Viciani","Vieri","Vigiani","Vignoli","Vignolini","Vignozzi","Villani","Vinci","Visani","Vitale","Vitali","Viti","Viviani","Vivoli","Volpe","Volpi","Wang","Wu","Xu","Yang","Ye","Zagli","Zani","Zanieri","Zanobini","Zecchi","Zetti","Zhang","Zheng","Zhou","Zhu","Zingoni","Zini","Zoppi"],nl:["Albers","Alblas","Appelman","Baars","Baas","Bakker","Blank","Bleeker","Blok","Blom","Boer","Boers","Boldewijn","Boon","Boot","Bos","Bosch","Bosma","Bosman","Bouma","Bouman","Bouwman","Brands","Brouwer","Burger","Buijs","Buitenhuis","Ceder","Cohen","Dekker","Dekkers","Dijkman","Dijkstra","Driessen","Drost","Engel","Evers","Faber","Franke","Gerritsen","Goedhart","Goossens","Groen","Groenenberg","Groot","Haan","Hart","Heemskerk","Hendriks","Hermans","Hoekstra","Hofman","Hopman","Huisman","Jacobs","Jansen","Janssen","Jonker","Jaspers","Keijzer","Klaassen","Klein","Koek","Koenders","Kok","Kool","Koopman","Koopmans","Koning","Koster","Kramer","Kroon","Kuijpers","Kuiper","Kuipers","Kurt","Koster","Kwakman","Los","Lubbers","Maas","Markus","Martens","Meijer","Mol","Molenaar","Mulder","Nieuwenhuis","Peeters","Peters","Pengel","Pieters","Pool","Post","Postma","Prins","Pronk","Reijnders","Rietveld","Roest","Roos","Sanders","Schaap","Scheffer","Schenk","Schilder","Schipper","Schmidt","Scholten","Schouten","Schut","Schutte","Schuurman","Simons","Smeets","Smit","Smits","Snel","Swinkels","Tas","Terpstra","Timmermans","Tol","Tromp","Troost","Valk","Veenstra","Veldkamp","Verbeek","Verheul","Verhoeven","Vermeer","Vermeulen","Verweij","Vink","Visser","Voorn","Vos","Wagenaar","Wiersema","Willems","Willemsen","Witteveen","Wolff","Wolters","Zijlstra","Zwart","de Beer","de Boer","de Bruijn","de Bruin","de Graaf","de Groot","de Haan","de Haas","de Jager","de Jong","de Jonge","de Koning","de Lange","de Leeuw","de Ridder","de Rooij","de Ruiter","de Vos","de Vries","de Waal","de Wit","de Zwart","van Beek","van Boven","van Dam","van Dijk","van Dongen","van Doorn","van Egmond","van Eijk","van Es","van Gelder","van Gelderen","van Houten","van Hulst","van Kempen","van Kesteren","van Leeuwen","van Loon","van Mill","van Noord","van Ommen","van Ommeren","van Oosten","van Oostveen","van Rijn","van Schaik","van Veen","van Vliet","van Wijk","van Wijngaarden","van den Poel","van de Pol","van den Ploeg","van de Ven","van den Berg","van den Bosch","van den Brink","van den Broek","van den Heuvel","van der Heijden","van der Horst","van der Hulst","van der Kroon","van der Laan","van der Linden","van der Meer","van der Meij","van der Meulen","van der Molen","van der Sluis","van der Spek","van der Veen","van der Velde","van der Velden","van der Vliet","van der Wal"],uk:["Smith","Jones","Williams","Taylor","Brown","Davies","Evans","Wilson","Thomas","Johnson","Roberts","Robinson","Thompson","Wright","Walker","White","Edwards","Hughes","Green","Hall","Lewis","Harris","Clarke","Patel","Jackson","Wood","Turner","Martin","Cooper","Hill","Ward","Morris","Moore","Clark","Lee","King","Baker","Harrison","Morgan","Allen","James","Scott","Phillips","Watson","Davis","Parker","Price","Bennett","Young","Griffiths","Mitchell","Kelly","Cook","Carter","Richardson","Bailey","Collins","Bell","Shaw","Murphy","Miller","Cox","Richards","Khan","Marshall","Anderson","Simpson","Ellis","Adams","Singh","Begum","Wilkinson","Foster","Chapman","Powell","Webb","Rogers","Gray","Mason","Ali","Hunt","Hussain","Campbell","Matthews","Owen","Palmer","Holmes","Mills","Barnes","Knight","Lloyd","Butler","Russell","Barker","Fisher","Stevens","Jenkins","Murray","Dixon","Harvey","Graham","Pearson","Ahmed","Fletcher","Walsh","Kaur","Gibson","Howard","Andrews","Stewart","Elliott","Reynolds","Saunders","Payne","Fox","Ford","Pearce","Day","Brooks","West","Lawrence","Cole","Atkinson","Bradley","Spencer","Gill","Dawson","Ball","Burton","O'brien","Watts","Rose","Booth","Perry","Ryan","Grant","Wells","Armstrong","Francis","Rees","Hayes","Hart","Hudson","Newman","Barrett","Webster","Hunter","Gregory","Carr","Lowe","Page","Marsh","Riley","Dunn","Woods","Parsons","Berry","Stone","Reid","Holland","Hawkins","Harding","Porter","Robertson","Newton","Oliver","Reed","Kennedy","Williamson","Bird","Gardner","Shah","Dean","Lane","Cooke","Bates","Henderson","Parry","Burgess","Bishop","Walton","Burns","Nicholson","Shepherd","Ross","Cross","Long","Freeman","Warren","Nicholls","Hamilton","Byrne","Sutton","Mcdonald","Yates","Hodgson","Robson","Curtis","Hopkins","O'connor","Harper","Coleman","Watkins","Moss","Mccarthy","Chambers","O'neill","Griffin","Sharp","Hardy","Wheeler","Potter","Osborne","Johnston","Gordon","Doyle","Wallace","George","Jordan","Hutchinson","Rowe","Burke","May","Pritchard","Gilbert","Willis","Higgins","Read","Miles","Stevenson","Stephenson","Hammond","Arnold","Buckley","Walters","Hewitt","Barber","Nelson","Slater","Austin","Sullivan","Whitehead","Mann","Frost","Lambert","Stephens","Blake","Akhtar","Lynch","Goodwin","Barton","Woodward","Thomson","Cunningham","Quinn","Barnett","Baxter","Bibi","Clayton","Nash","Greenwood","Jennings","Holt","Kemp","Poole","Gallagher","Bond","Stokes","Tucker","Davidson","Fowler","Heath","Norman","Middleton","Lawson","Banks","French","Stanley","Jarvis","Gibbs","Ferguson","Hayward","Carroll","Douglas","Dickinson","Todd","Barlow","Peters","Lucas","Knowles","Hartley","Miah","Simmons","Morton","Alexander","Field","Morrison","Norris","Townsend","Preston","Hancock","Thornton","Baldwin","Burrows","Briggs","Parkinson","Reeves","Macdonald","Lamb","Black","Abbott","Sanders","Thorpe","Holden","Tomlinson","Perkins","Ashton","Rhodes","Fuller","Howe","Bryant","Vaughan","Dale","Davey","Weston","Bartlett","Whittaker","Davison","Kent","Skinner","Birch","Morley","Daniels","Glover","Howell","Cartwright","Pugh","Humphreys","Goddard","Brennan","Wall","Kirby","Bowen","Savage","Bull","Wong","Dobson","Smart","Wilkins","Kirk","Fraser","Duffy","Hicks","Patterson","Bradshaw","Little","Archer","Warner","Waters","O'sullivan","Farrell","Brookes","Atkins","Kay","Dodd","Bentley","Flynn","John","Schofield","Short","Haynes","Wade","Butcher","Henry","Sanderson","Crawford","Sheppard","Bolton","Coates","Giles","Gould","Houghton","Gibbons","Pratt","Manning","Law","Hooper","Noble","Dyer","Rahman","Clements","Moran","Sykes","Chan","Doherty","Connolly","Joyce","Franklin","Hobbs","Coles","Herbert","Steele","Kerr","Leach","Winter","Owens","Duncan","Naylor","Fleming","Horton","Finch","Fitzgerald","Randall","Carpenter","Marsden","Browne","Garner","Pickering","Hale","Dennis","Vincent","Chadwick","Chandler","Sharpe","Nolan","Lyons","Hurst","Collier","Peacock","Howarth","Faulkner","Rice","Pollard","Welch","Norton","Gough","Sinclair","Blackburn","Bryan","Conway","Power","Cameron","Daly","Allan","Hanson","Gardiner","Boyle","Myers","Turnbull","Wallis","Mahmood","Sims","Swift","Iqbal","Pope","Brady","Chamberlain","Rowley","Tyler","Farmer","Metcalfe","Hilton","Godfrey","Holloway","Parkin","Bray","Talbot","Donnelly","Nixon","Charlton","Benson","Whitehouse","Barry","Hope","Lord","North","Storey","Connor","Potts","Bevan","Hargreaves","Mclean","Mistry","Bruce","Howells","Hyde","Parkes","Wyatt","Fry","Lees","O'donnell","Craig","Forster","Mckenzie","Humphries","Mellor","Carey","Ingram","Summers","Leonard"],de:["Müller","Schmidt","Schneider","Fischer","Weber","Meyer","Wagner","Becker","Schulz","Hoffmann","Schäfer","Koch","Bauer","Richter","Klein","Wolf","Schröder","Neumann","Schwarz","Zimmermann","Braun","Krüger","Hofmann","Hartmann","Lange","Schmitt","Werner","Schmitz","Krause","Meier","Lehmann","Schmid","Schulze","Maier","Köhler","Herrmann","König","Walter","Mayer","Huber","Kaiser","Fuchs","Peters","Lang","Scholz","Möller","Weiß","Jung","Hahn","Schubert","Vogel","Friedrich","Keller","Günther","Frank","Berger","Winkler","Roth","Beck","Lorenz","Baumann","Franke","Albrecht","Schuster","Simon","Ludwig","Böhm","Winter","Kraus","Martin","Schumacher","Krämer","Vogt","Stein","Jäger","Otto","Sommer","Groß","Seidel","Heinrich","Brandt","Haas","Schreiber","Graf","Schulte","Dietrich","Ziegler","Kuhn","Kühn","Pohl","Engel","Horn","Busch","Bergmann","Thomas","Voigt","Sauer","Arnold","Wolff","Pfeiffer"],jp:["Sato","Suzuki","Takahashi","Tanaka","Watanabe","Ito","Yamamoto","Nakamura","Kobayashi","Kato","Yoshida","Yamada","Sasaki","Yamaguchi","Saito","Matsumoto","Inoue","Kimura","Hayashi","Shimizu","Yamazaki","Mori","Abe","Ikeda","Hashimoto","Yamashita","Ishikawa","Nakajima","Maeda","Fujita","Ogawa","Goto","Okada","Hasegawa","Murakami","Kondo","Ishii","Saito","Sakamoto","Endo","Aoki","Fujii","Nishimura","Fukuda","Ota","Miura","Fujiwara","Okamoto","Matsuda","Nakagawa","Nakano","Harada","Ono","Tamura","Takeuchi","Kaneko","Wada","Nakayama","Ishida","Ueda","Morita","Hara","Shibata","Sakai","Kudo","Yokoyama","Miyazaki","Miyamoto","Uchida","Takagi","Ando","Taniguchi","Ohno","Maruyama","Imai","Takada","Fujimoto","Takeda","Murata","Ueno","Sugiyama","Masuda","Sugawara","Hirano","Kojima","Otsuka","Chiba","Kubo","Matsui","Iwasaki","Sakurai","Kinoshita","Noguchi","Matsuo","Nomura","Kikuchi","Sano","Onishi","Sugimoto","Arai"],es:["Garcia","Fernandez","Lopez","Martinez","Gonzalez","Rodriguez","Sanchez","Perez","Martin","Gomez","Ruiz","Diaz","Hernandez","Alvarez","Jimenez","Moreno","Munoz","Alonso","Romero","Navarro","Gutierrez","Torres","Dominguez","Gil","Vazquez","Blanco","Serrano","Ramos","Castro","Suarez","Sanz","Rubio","Ortega","Molina","Delgado","Ortiz","Morales","Ramirez","Marin","Iglesias","Santos","Castillo","Garrido","Calvo","Pena","Cruz","Cano","Nunez","Prieto","Diez","Lozano","Vidal","Pascual","Ferrer","Medina","Vega","Leon","Herrero","Vicente","Mendez","Guerrero","Fuentes","Campos","Nieto","Cortes","Caballero","Ibanez","Lorenzo","Pastor","Gimenez","Saez","Soler","Marquez","Carrasco","Herrera","Montero","Arias","Crespo","Flores","Andres","Aguilar","Hidalgo","Cabrera","Mora","Duran","Velasco","Rey","Pardo","Roman","Vila","Bravo","Merino","Moya","Soto","Izquierdo","Reyes","Redondo","Marcos","Carmona","Menendez"],fr:["Martin","Bernard","Thomas","Petit","Robert","Richard","Durand","Dubois","Moreau","Laurent","Simon","Michel","Lefèvre","Leroy","Roux","David","Bertrand","Morel","Fournier","Girard","Bonnet","Dupont","Lambert","Fontaine","Rousseau","Vincent","Müller","Lefèvre","Faure","André","Mercier","Blanc","Guérin","Boyer","Garnier","Chevalier","François","Legrand","Gauthier","Garcia","Perrin","Robin","Clément","Morin","Nicolas","Henry","Roussel","Matthieu","Gautier","Masson","Marchand","Duval","Denis","Dumont","Marie","Lemaire","Noël","Meyer","Dufour","Meunier","Brun","Blanchard","Giraud","Joly","Rivière","Lucas","Brunet","Gaillard","Barbier","Arnaud","Martínez","Gérard","Roche","Renard","Schmitt","Roy","Leroux","Colin","Vidal","Caron","Picard","Roger","Fabre","Aubert","Lemoine","Renaud","Dumas","Lacroix","Olivier","Philippe","Bourgeois","Pierre","Benoît","Rey","Leclerc","Payet","Rolland","Leclercq","Guillaume","Lecomte","López","Jean","Dupuy","Guillot","Hubert","Berger","Carpentier","Sánchez","Dupuis","Moulin","Louis","Deschamps","Huet","Vasseur","Perez","Boucher","Fleury","Royer","Klein","Jacquet","Adam","Paris","Poirier","Marty","Aubry","Guyot","Carré","Charles","Renault","Charpentier","Ménard","Maillard","Baron","Bertin","Bailly","Hervé","Schneider","Fernández","Le GallGall","Collet","Léger","Bouvier","Julien","Prévost","Millet","Perrot","Daniel","Le RouxRoux","Cousin","Germain","Breton","Besson","Langlois","Rémi","Le GoffGoff","Pelletier","Lévêque","Perrier","Leblanc","Barré","Lebrun","Marchal","Weber","Mallet","Hamon","Boulanger","Jacob","Monnier","Michaud","Rodríguez","Guichard","Gillet","Étienne","Grondin","Poulain","Tessier","Chevallier","Collin","Chauvin","Da SilvaSilva","Bouchet","Gay","Lemaître","Bénard","Maréchal","Humbert","Reynaud","Antoine","Hoarau","Perret","Barthélemy","Cordier","Pichon","Lejeune","Gilbert","Lamy","Delaunay","Pasquier","Carlier","LaporteLaporte"]},countries:[{name:"Afghanistan",abbreviation:"AF"},{name:"Åland Islands",abbreviation:"AX"},{name:"Albania",abbreviation:"AL"},{name:"Algeria",abbreviation:"DZ"},{name:"American Samoa",abbreviation:"AS"},{name:"Andorra",abbreviation:"AD"},{name:"Angola",abbreviation:"AO"},{name:"Anguilla",abbreviation:"AI"},{name:"Antarctica",abbreviation:"AQ"},{name:"Antigua & Barbuda",abbreviation:"AG"},{name:"Argentina",abbreviation:"AR"},{name:"Armenia",abbreviation:"AM"},{name:"Aruba",abbreviation:"AW"},{name:"Ascension Island",abbreviation:"AC"},{name:"Australia",abbreviation:"AU"},{name:"Austria",abbreviation:"AT"},{name:"Azerbaijan",abbreviation:"AZ"},{name:"Bahamas",abbreviation:"BS"},{name:"Bahrain",abbreviation:"BH"},{name:"Bangladesh",abbreviation:"BD"},{name:"Barbados",abbreviation:"BB"},{name:"Belarus",abbreviation:"BY"},{name:"Belgium",abbreviation:"BE"},{name:"Belize",abbreviation:"BZ"},{name:"Benin",abbreviation:"BJ"},{name:"Bermuda",abbreviation:"BM"},{name:"Bhutan",abbreviation:"BT"},{name:"Bolivia",abbreviation:"BO"},{name:"Bosnia & Herzegovina",abbreviation:"BA"},{name:"Botswana",abbreviation:"BW"},{name:"Brazil",abbreviation:"BR"},{name:"British Indian Ocean Territory",abbreviation:"IO"},{name:"British Virgin Islands",abbreviation:"VG"},{name:"Brunei",abbreviation:"BN"},{name:"Bulgaria",abbreviation:"BG"},{name:"Burkina Faso",abbreviation:"BF"},{name:"Burundi",abbreviation:"BI"},{name:"Cambodia",abbreviation:"KH"},{name:"Cameroon",abbreviation:"CM"},{name:"Canada",abbreviation:"CA"},{name:"Canary Islands",abbreviation:"IC"},{name:"Cape Verde",abbreviation:"CV"},{name:"Caribbean Netherlands",abbreviation:"BQ"},{name:"Cayman Islands",abbreviation:"KY"},{name:"Central African Republic",abbreviation:"CF"},{name:"Ceuta & Melilla",abbreviation:"EA"},{name:"Chad",abbreviation:"TD"},{name:"Chile",abbreviation:"CL"},{name:"China",abbreviation:"CN"},{name:"Christmas Island",abbreviation:"CX"},{name:"Cocos (Keeling) Islands",abbreviation:"CC"},{name:"Colombia",abbreviation:"CO"},{name:"Comoros",abbreviation:"KM"},{name:"Congo - Brazzaville",abbreviation:"CG"},{name:"Congo - Kinshasa",abbreviation:"CD"},{name:"Cook Islands",abbreviation:"CK"},{name:"Costa Rica",abbreviation:"CR"},{name:"Côte d'Ivoire",abbreviation:"CI"},{name:"Croatia",abbreviation:"HR"},{name:"Cuba",abbreviation:"CU"},{name:"Curaçao",abbreviation:"CW"},{name:"Cyprus",abbreviation:"CY"},{name:"Czech Republic",abbreviation:"CZ"},{name:"Denmark",abbreviation:"DK"},{name:"Diego Garcia",abbreviation:"DG"},{name:"Djibouti",abbreviation:"DJ"},{name:"Dominica",abbreviation:"DM"},{name:"Dominican Republic",abbreviation:"DO"},{name:"Ecuador",abbreviation:"EC"},{name:"Egypt",abbreviation:"EG"},{name:"El Salvador",abbreviation:"SV"},{name:"Equatorial Guinea",abbreviation:"GQ"},{name:"Eritrea",abbreviation:"ER"},{name:"Estonia",abbreviation:"EE"},{name:"Ethiopia",abbreviation:"ET"},{name:"Falkland Islands",abbreviation:"FK"},{name:"Faroe Islands",abbreviation:"FO"},{name:"Fiji",abbreviation:"FJ"},{name:"Finland",abbreviation:"FI"},{name:"France",abbreviation:"FR"},{name:"French Guiana",abbreviation:"GF"},{name:"French Polynesia",abbreviation:"PF"},{name:"French Southern Territories",abbreviation:"TF"},{name:"Gabon",abbreviation:"GA"},{name:"Gambia",abbreviation:"GM"},{name:"Georgia",abbreviation:"GE"},{name:"Germany",abbreviation:"DE"},{name:"Ghana",abbreviation:"GH"},{name:"Gibraltar",abbreviation:"GI"},{name:"Greece",abbreviation:"GR"},{name:"Greenland",abbreviation:"GL"},{name:"Grenada",abbreviation:"GD"},{name:"Guadeloupe",abbreviation:"GP"},{name:"Guam",abbreviation:"GU"},{name:"Guatemala",abbreviation:"GT"},{name:"Guernsey",abbreviation:"GG"},{name:"Guinea",abbreviation:"GN"},{name:"Guinea-Bissau",abbreviation:"GW"},{name:"Guyana",abbreviation:"GY"},{name:"Haiti",abbreviation:"HT"},{name:"Honduras",abbreviation:"HN"},{name:"Hong Kong SAR China",abbreviation:"HK"},{name:"Hungary",abbreviation:"HU"},{name:"Iceland",abbreviation:"IS"},{name:"India",abbreviation:"IN"},{name:"Indonesia",abbreviation:"ID"},{name:"Iran",abbreviation:"IR"},{name:"Iraq",abbreviation:"IQ"},{name:"Ireland",abbreviation:"IE"},{name:"Isle of Man",abbreviation:"IM"},{name:"Israel",abbreviation:"IL"},{name:"Italy",abbreviation:"IT"},{name:"Jamaica",abbreviation:"JM"},{name:"Japan",abbreviation:"JP"},{name:"Jersey",abbreviation:"JE"},{name:"Jordan",abbreviation:"JO"},{name:"Kazakhstan",abbreviation:"KZ"},{name:"Kenya",abbreviation:"KE"},{name:"Kiribati",abbreviation:"KI"},{name:"Kosovo",abbreviation:"XK"},{name:"Kuwait",abbreviation:"KW"},{name:"Kyrgyzstan",abbreviation:"KG"},{name:"Laos",abbreviation:"LA"},{name:"Latvia",abbreviation:"LV"},{name:"Lebanon",abbreviation:"LB"},{name:"Lesotho",abbreviation:"LS"},{name:"Liberia",abbreviation:"LR"},{name:"Libya",abbreviation:"LY"},{name:"Liechtenstein",abbreviation:"LI"},{name:"Lithuania",abbreviation:"LT"},{name:"Luxembourg",abbreviation:"LU"},{name:"Macau SAR China",abbreviation:"MO"},{name:"Macedonia",abbreviation:"MK"},{name:"Madagascar",abbreviation:"MG"},{name:"Malawi",abbreviation:"MW"},{name:"Malaysia",abbreviation:"MY"},{name:"Maldives",abbreviation:"MV"},{name:"Mali",abbreviation:"ML"},{name:"Malta",abbreviation:"MT"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Martinique",abbreviation:"MQ"},{name:"Mauritania",abbreviation:"MR"},{name:"Mauritius",abbreviation:"MU"},{name:"Mayotte",abbreviation:"YT"},{name:"Mexico",abbreviation:"MX"},{name:"Micronesia",abbreviation:"FM"},{name:"Moldova",abbreviation:"MD"},{name:"Monaco",abbreviation:"MC"},{name:"Mongolia",abbreviation:"MN"},{name:"Montenegro",abbreviation:"ME"},{name:"Montserrat",abbreviation:"MS"},{name:"Morocco",abbreviation:"MA"},{name:"Mozambique",abbreviation:"MZ"},{name:"Myanmar (Burma)",abbreviation:"MM"},{name:"Namibia",abbreviation:"NA"},{name:"Nauru",abbreviation:"NR"},{name:"Nepal",abbreviation:"NP"},{name:"Netherlands",abbreviation:"NL"},{name:"New Caledonia",abbreviation:"NC"},{name:"New Zealand",abbreviation:"NZ"},{name:"Nicaragua",abbreviation:"NI"},{name:"Niger",abbreviation:"NE"},{name:"Nigeria",abbreviation:"NG"},{name:"Niue",abbreviation:"NU"},{name:"Norfolk Island",abbreviation:"NF"},{name:"North Korea",abbreviation:"KP"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Norway",abbreviation:"NO"},{name:"Oman",abbreviation:"OM"},{name:"Pakistan",abbreviation:"PK"},{name:"Palau",abbreviation:"PW"},{name:"Palestinian Territories",abbreviation:"PS"},{name:"Panama",abbreviation:"PA"},{name:"Papua New Guinea",abbreviation:"PG"},{name:"Paraguay",abbreviation:"PY"},{name:"Peru",abbreviation:"PE"},{name:"Philippines",abbreviation:"PH"},{name:"Pitcairn Islands",abbreviation:"PN"},{name:"Poland",abbreviation:"PL"},{name:"Portugal",abbreviation:"PT"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Qatar",abbreviation:"QA"},{name:"Réunion",abbreviation:"RE"},{name:"Romania",abbreviation:"RO"},{name:"Russia",abbreviation:"RU"},{name:"Rwanda",abbreviation:"RW"},{name:"Samoa",abbreviation:"WS"},{name:"San Marino",abbreviation:"SM"},{name:"São Tomé and Príncipe",abbreviation:"ST"},{name:"Saudi Arabia",abbreviation:"SA"},{name:"Senegal",abbreviation:"SN"},{name:"Serbia",abbreviation:"RS"},{name:"Seychelles",abbreviation:"SC"},{name:"Sierra Leone",abbreviation:"SL"},{name:"Singapore",abbreviation:"SG"},{name:"Sint Maarten",abbreviation:"SX"},{name:"Slovakia",abbreviation:"SK"},{name:"Slovenia",abbreviation:"SI"},{name:"Solomon Islands",abbreviation:"SB"},{name:"Somalia",abbreviation:"SO"},{name:"South Africa",abbreviation:"ZA"},{name:"South Georgia & South Sandwich Islands",abbreviation:"GS"},{name:"South Korea",abbreviation:"KR"},{name:"South Sudan",abbreviation:"SS"},{name:"Spain",abbreviation:"ES"},{name:"Sri Lanka",abbreviation:"LK"},{name:"St. Barthélemy",abbreviation:"BL"},{name:"St. Helena",abbreviation:"SH"},{name:"St. Kitts & Nevis",abbreviation:"KN"},{name:"St. Lucia",abbreviation:"LC"},{name:"St. Martin",abbreviation:"MF"},{name:"St. Pierre & Miquelon",abbreviation:"PM"},{name:"St. Vincent & Grenadines",abbreviation:"VC"},{name:"Sudan",abbreviation:"SD"},{name:"Suriname",abbreviation:"SR"},{name:"Svalbard & Jan Mayen",abbreviation:"SJ"},{name:"Swaziland",abbreviation:"SZ"},{name:"Sweden",abbreviation:"SE"},{name:"Switzerland",abbreviation:"CH"},{name:"Syria",abbreviation:"SY"},{name:"Taiwan",abbreviation:"TW"},{name:"Tajikistan",abbreviation:"TJ"},{name:"Tanzania",abbreviation:"TZ"},{name:"Thailand",abbreviation:"TH"},{name:"Timor-Leste",abbreviation:"TL"},{name:"Togo",abbreviation:"TG"},{name:"Tokelau",abbreviation:"TK"},{name:"Tonga",abbreviation:"TO"},{name:"Trinidad & Tobago",abbreviation:"TT"},{name:"Tristan da Cunha",abbreviation:"TA"},{name:"Tunisia",abbreviation:"TN"},{name:"Turkey",abbreviation:"TR"},{name:"Turkmenistan",abbreviation:"TM"},{name:"Turks & Caicos Islands",abbreviation:"TC"},{name:"Tuvalu",abbreviation:"TV"},{name:"U.S. Outlying Islands",abbreviation:"UM"},{name:"U.S. Virgin Islands",abbreviation:"VI"},{name:"Uganda",abbreviation:"UG"},{name:"Ukraine",abbreviation:"UA"},{name:"United Arab Emirates",abbreviation:"AE"},{name:"United Kingdom",abbreviation:"GB"},{name:"United States",abbreviation:"US"},{name:"Uruguay",abbreviation:"UY"},{name:"Uzbekistan",abbreviation:"UZ"},{name:"Vanuatu",abbreviation:"VU"},{name:"Vatican City",abbreviation:"VA"},{name:"Venezuela",abbreviation:"VE"},{name:"Vietnam",abbreviation:"VN"},{name:"Wallis & Futuna",abbreviation:"WF"},{name:"Western Sahara",abbreviation:"EH"},{name:"Yemen",abbreviation:"YE"},{name:"Zambia",abbreviation:"ZM"},{name:"Zimbabwe",abbreviation:"ZW"}],counties:{uk:[{name:"Bath and North East Somerset"},{name:"Aberdeenshire"},{name:"Anglesey"},{name:"Angus"},{name:"Bedford"},{name:"Blackburn with Darwen"},{name:"Blackpool"},{name:"Bournemouth"},{name:"Bracknell Forest"},{name:"Brighton & Hove"},{name:"Bristol"},{name:"Buckinghamshire"},{name:"Cambridgeshire"},{name:"Carmarthenshire"},{name:"Central Bedfordshire"},{name:"Ceredigion"},{name:"Cheshire East"},{name:"Cheshire West and Chester"},{name:"Clackmannanshire"},{name:"Conwy"},{name:"Cornwall"},{name:"County Antrim"},{name:"County Armagh"},{name:"County Down"},{name:"County Durham"},{name:"County Fermanagh"},{name:"County Londonderry"},{name:"County Tyrone"},{name:"Cumbria"},{name:"Darlington"},{name:"Denbighshire"},{name:"Derby"},{name:"Derbyshire"},{name:"Devon"},{name:"Dorset"},{name:"Dumfries and Galloway"},{name:"Dundee"},{name:"East Lothian"},{name:"East Riding of Yorkshire"},{name:"East Sussex"},{name:"Edinburgh?"},{name:"Essex"},{name:"Falkirk"},{name:"Fife"},{name:"Flintshire"},{name:"Gloucestershire"},{name:"Greater London"},{name:"Greater Manchester"},{name:"Gwent"},{name:"Gwynedd"},{name:"Halton"},{name:"Hampshire"},{name:"Hartlepool"},{name:"Herefordshire"},{name:"Hertfordshire"},{name:"Highlands"},{name:"Hull"},{name:"Isle of Wight"},{name:"Isles of Scilly"},{name:"Kent"},{name:"Lancashire"},{name:"Leicester"},{name:"Leicestershire"},{name:"Lincolnshire"},{name:"Lothian"},{name:"Luton"},{name:"Medway"},{name:"Merseyside"},{name:"Mid Glamorgan"},{name:"Middlesbrough"},{name:"Milton Keynes"},{name:"Monmouthshire"},{name:"Moray"},{name:"Norfolk"},{name:"North East Lincolnshire"},{name:"North Lincolnshire"},{name:"North Somerset"},{name:"North Yorkshire"},{name:"Northamptonshire"},{name:"Northumberland"},{name:"Nottingham"},{name:"Nottinghamshire"},{name:"Oxfordshire"},{name:"Pembrokeshire"},{name:"Perth and Kinross"},{name:"Peterborough"},{name:"Plymouth"},{name:"Poole"},{name:"Portsmouth"},{name:"Powys"},{name:"Reading"},{name:"Redcar and Cleveland"},{name:"Rutland"},{name:"Scottish Borders"},{name:"Shropshire"},{name:"Slough"},{name:"Somerset"},{name:"South Glamorgan"},{name:"South Gloucestershire"},{name:"South Yorkshire"},{name:"Southampton"},{name:"Southend-on-Sea"},{name:"Staffordshire"},{name:"Stirlingshire"},{name:"Stockton-on-Tees"},{name:"Stoke-on-Trent"},{name:"Strathclyde"},{name:"Suffolk"},{name:"Surrey"},{name:"Swindon"},{name:"Telford and Wrekin"},{name:"Thurrock"},{name:"Torbay"},{name:"Tyne and Wear"},{name:"Warrington"},{name:"Warwickshire"},{name:"West Berkshire"},{name:"West Glamorgan"},{name:"West Lothian"},{name:"West Midlands"},{name:"West Sussex"},{name:"West Yorkshire"},{name:"Western Isles"},{name:"Wiltshire"},{name:"Windsor and Maidenhead"},{name:"Wokingham"},{name:"Worcestershire"},{name:"Wrexham"},{name:"York"}]},provinces:{ca:[{name:"Alberta",abbreviation:"AB"},{name:"British Columbia",abbreviation:"BC"},{name:"Manitoba",abbreviation:"MB"},{name:"New Brunswick",abbreviation:"NB"},{name:"Newfoundland and Labrador",abbreviation:"NL"},{name:"Nova Scotia",abbreviation:"NS"},{name:"Ontario",abbreviation:"ON"},{name:"Prince Edward Island",abbreviation:"PE"},{name:"Quebec",abbreviation:"QC"},{name:"Saskatchewan",abbreviation:"SK"},{name:"Northwest Territories",abbreviation:"NT"},{name:"Nunavut",abbreviation:"NU"},{name:"Yukon",abbreviation:"YT"}],it:[{name:"Agrigento",abbreviation:"AG",code:84},{name:"Alessandria",abbreviation:"AL",code:6},{name:"Ancona",abbreviation:"AN",code:42},{name:"Aosta",abbreviation:"AO",code:7},{name:"L'Aquila",abbreviation:"AQ",code:66},{name:"Arezzo",abbreviation:"AR",code:51},{name:"Ascoli-Piceno",abbreviation:"AP",code:44},{name:"Asti",abbreviation:"AT",code:5},{name:"Avellino",abbreviation:"AV",code:64},{name:"Bari",abbreviation:"BA",code:72},{name:"Barletta-Andria-Trani",abbreviation:"BT",code:72},{name:"Belluno",abbreviation:"BL",code:25},{name:"Benevento",abbreviation:"BN",code:62},{name:"Bergamo",abbreviation:"BG",code:16},{name:"Biella",abbreviation:"BI",code:96},{name:"Bologna",abbreviation:"BO",code:37},{name:"Bolzano",abbreviation:"BZ",code:21},{name:"Brescia",abbreviation:"BS",code:17},{name:"Brindisi",abbreviation:"BR",code:74},{name:"Cagliari",abbreviation:"CA",code:92},{name:"Caltanissetta",abbreviation:"CL",code:85},{name:"Campobasso",abbreviation:"CB",code:70},{name:"Carbonia Iglesias",abbreviation:"CI",code:70},{name:"Caserta",abbreviation:"CE",code:61},{name:"Catania",abbreviation:"CT",code:87},{name:"Catanzaro",abbreviation:"CZ",code:79},{name:"Chieti",abbreviation:"CH",code:69},{name:"Como",abbreviation:"CO",code:13},{name:"Cosenza",abbreviation:"CS",code:78},{name:"Cremona",abbreviation:"CR",code:19},{name:"Crotone",abbreviation:"KR",code:101},{name:"Cuneo",abbreviation:"CN",code:4},{name:"Enna",abbreviation:"EN",code:86},{name:"Fermo",abbreviation:"FM",code:86},{name:"Ferrara",abbreviation:"FE",code:38},{name:"Firenze",abbreviation:"FI",code:48},{name:"Foggia",abbreviation:"FG",code:71},{name:"Forli-Cesena",abbreviation:"FC",code:71},{name:"Frosinone",abbreviation:"FR",code:60},{name:"Genova",abbreviation:"GE",code:10},{name:"Gorizia",abbreviation:"GO",code:31},{name:"Grosseto",abbreviation:"GR",code:53},{name:"Imperia",abbreviation:"IM",code:8},{name:"Isernia",abbreviation:"IS",code:94},{name:"La-Spezia",abbreviation:"SP",code:66},{name:"Latina",abbreviation:"LT",code:59},{name:"Lecce",abbreviation:"LE",code:75},{name:"Lecco",abbreviation:"LC",code:97},{name:"Livorno",abbreviation:"LI",code:49},{name:"Lodi",abbreviation:"LO",code:98},{name:"Lucca",abbreviation:"LU",code:46},{name:"Macerata",abbreviation:"MC",code:43},{name:"Mantova",abbreviation:"MN",code:20},{name:"Massa-Carrara",abbreviation:"MS",code:45},{name:"Matera",abbreviation:"MT",code:77},{name:"Medio Campidano",abbreviation:"VS",code:77},{name:"Messina",abbreviation:"ME",code:83},{name:"Milano",abbreviation:"MI",code:15},{name:"Modena",abbreviation:"MO",code:36},{name:"Monza-Brianza",abbreviation:"MB",code:36},{name:"Napoli",abbreviation:"NA",code:63},{name:"Novara",abbreviation:"NO",code:3},{name:"Nuoro",abbreviation:"NU",code:91},{name:"Ogliastra",abbreviation:"OG",code:91},{name:"Olbia Tempio",abbreviation:"OT",code:91},{name:"Oristano",abbreviation:"OR",code:95},{name:"Padova",abbreviation:"PD",code:28},{name:"Palermo",abbreviation:"PA",code:82},{name:"Parma",abbreviation:"PR",code:34},{name:"Pavia",abbreviation:"PV",code:18},{name:"Perugia",abbreviation:"PG",code:54},{name:"Pesaro-Urbino",abbreviation:"PU",code:41},{name:"Pescara",abbreviation:"PE",code:68},{name:"Piacenza",abbreviation:"PC",code:33},{name:"Pisa",abbreviation:"PI",code:50},{name:"Pistoia",abbreviation:"PT",code:47},{name:"Pordenone",abbreviation:"PN",code:93},{name:"Potenza",abbreviation:"PZ",code:76},{name:"Prato",abbreviation:"PO",code:100},{name:"Ragusa",abbreviation:"RG",code:88},{name:"Ravenna",abbreviation:"RA",code:39},{name:"Reggio-Calabria",abbreviation:"RC",code:35},{name:"Reggio-Emilia",abbreviation:"RE",code:35},{name:"Rieti",abbreviation:"RI",code:57},{name:"Rimini",abbreviation:"RN",code:99},{name:"Roma",abbreviation:"Roma",code:58},{name:"Rovigo",abbreviation:"RO",code:29},{name:"Salerno",abbreviation:"SA",code:65},{name:"Sassari",abbreviation:"SS",code:90},{name:"Savona",abbreviation:"SV",code:9},{name:"Siena",abbreviation:"SI",code:52},{name:"Siracusa",abbreviation:"SR",code:89},{name:"Sondrio",abbreviation:"SO",code:14},{name:"Taranto",abbreviation:"TA",code:73},{name:"Teramo",abbreviation:"TE",code:67},{name:"Terni",abbreviation:"TR",code:55},{name:"Torino",abbreviation:"TO",code:1},{name:"Trapani",abbreviation:"TP",code:81},{name:"Trento",abbreviation:"TN",code:22},{name:"Treviso",abbreviation:"TV",code:26},{name:"Trieste",abbreviation:"TS",code:32},{name:"Udine",abbreviation:"UD",code:30},{name:"Varese",abbreviation:"VA",code:12},{name:"Venezia",abbreviation:"VE",code:27},{name:"Verbania",abbreviation:"VB",code:27},{name:"Vercelli",abbreviation:"VC",code:2},{name:"Verona",abbreviation:"VR",code:23},{name:"Vibo-Valentia",abbreviation:"VV",code:102},{name:"Vicenza",abbreviation:"VI",code:24},{name:"Viterbo",abbreviation:"VT",code:56}]},nationalities:[{name:"Afghan"},{name:"Albanian"},{name:"Algerian"},{name:"American"},{name:"Andorran"},{name:"Angolan"},{name:"Antiguans"},{name:"Argentinean"},{name:"Armenian"},{name:"Australian"},{name:"Austrian"},{name:"Azerbaijani"},{name:"Bahami"},{name:"Bahraini"},{name:"Bangladeshi"},{name:"Barbadian"},{name:"Barbudans"},{name:"Batswana"},{name:"Belarusian"},{name:"Belgian"},{name:"Belizean"},{name:"Beninese"},{name:"Bhutanese"},{name:"Bolivian"},{name:"Bosnian"},{name:"Brazilian"},{name:"British"},{name:"Bruneian"},{name:"Bulgarian"},{name:"Burkinabe"},{name:"Burmese"},{name:"Burundian"},{name:"Cambodian"},{name:"Cameroonian"},{name:"Canadian"},{name:"Cape Verdean"},{name:"Central African"},{name:"Chadian"},{name:"Chilean"},{name:"Chinese"},{name:"Colombian"},{name:"Comoran"},{name:"Congolese"},{name:"Costa Rican"},{name:"Croatian"},{name:"Cuban"},{name:"Cypriot"},{name:"Czech"},{name:"Danish"},{name:"Djibouti"},{name:"Dominican"},{name:"Dutch"},{name:"East Timorese"},{name:"Ecuadorean"},{name:"Egyptian"},{name:"Emirian"},{name:"Equatorial Guinean"},{name:"Eritrean"},{name:"Estonian"},{name:"Ethiopian"},{name:"Fijian"},{name:"Filipino"},{name:"Finnish"},{name:"French"},{name:"Gabonese"},{name:"Gambian"},{name:"Georgian"},{name:"German"},{name:"Ghanaian"},{name:"Greek"},{name:"Grenadian"},{name:"Guatemalan"},{name:"Guinea-Bissauan"},{name:"Guinean"},{name:"Guyanese"},{name:"Haitian"},{name:"Herzegovinian"},{name:"Honduran"},{name:"Hungarian"},{name:"I-Kiribati"},{name:"Icelander"},{name:"Indian"},{name:"Indonesian"},{name:"Iranian"},{name:"Iraqi"},{name:"Irish"},{name:"Israeli"},{name:"Italian"},{name:"Ivorian"},{name:"Jamaican"},{name:"Japanese"},{name:"Jordanian"},{name:"Kazakhstani"},{name:"Kenyan"},{name:"Kittian and Nevisian"},{name:"Kuwaiti"},{name:"Kyrgyz"},{name:"Laotian"},{name:"Latvian"},{name:"Lebanese"},{name:"Liberian"},{name:"Libyan"},{name:"Liechtensteiner"},{name:"Lithuanian"},{name:"Luxembourger"},{name:"Macedonian"},{name:"Malagasy"},{name:"Malawian"},{name:"Malaysian"},{name:"Maldivan"},{name:"Malian"},{name:"Maltese"},{name:"Marshallese"},{name:"Mauritanian"},{name:"Mauritian"},{name:"Mexican"},{name:"Micronesian"},{name:"Moldovan"},{name:"Monacan"},{name:"Mongolian"},{name:"Moroccan"},{name:"Mosotho"},{name:"Motswana"},{name:"Mozambican"},{name:"Namibian"},{name:"Nauruan"},{name:"Nepalese"},{name:"New Zealander"},{name:"Nicaraguan"},{name:"Nigerian"},{name:"Nigerien"},{name:"North Korean"},{name:"Northern Irish"},{name:"Norwegian"},{name:"Omani"},{name:"Pakistani"},{name:"Palauan"},{name:"Panamanian"},{name:"Papua New Guinean"},{name:"Paraguayan"},{name:"Peruvian"},{name:"Polish"},{name:"Portuguese"},{name:"Qatari"},{name:"Romani"},{name:"Russian"},{name:"Rwandan"},{name:"Saint Lucian"},{name:"Salvadoran"},{name:"Samoan"},{name:"San Marinese"},{name:"Sao Tomean"},{name:"Saudi"},{name:"Scottish"},{name:"Senegalese"},{name:"Serbian"},{name:"Seychellois"},{name:"Sierra Leonean"},{name:"Singaporean"},{name:"Slovakian"},{name:"Slovenian"},{name:"Solomon Islander"},{name:"Somali"},{name:"South African"},{name:"South Korean"},{name:"Spanish"},{name:"Sri Lankan"},{name:"Sudanese"},{name:"Surinamer"},{name:"Swazi"},{name:"Swedish"},{name:"Swiss"},{name:"Syrian"},{name:"Taiwanese"},{name:"Tajik"},{name:"Tanzanian"},{name:"Thai"},{name:"Togolese"},{name:"Tongan"},{name:"Trinidadian or Tobagonian"},{name:"Tunisian"},{name:"Turkish"},{name:"Tuvaluan"},{name:"Ugandan"},{name:"Ukrainian"},{name:"Uruguaya"},{name:"Uzbekistani"},{name:"Venezuela"},{name:"Vietnamese"},{name:"Wels"},{name:"Yemenit"},{name:"Zambia"},{name:"Zimbabwe"}],locale_languages:["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],locale_regions:["agq-CM","asa-TZ","ast-ES","bas-CM","bem-ZM","bez-TZ","brx-IN","cgg-UG","chr-US","dav-KE","dje-NE","dsb-DE","dua-CM","dyo-SN","ebu-KE","ewo-CM","fil-PH","fur-IT","gsw-CH","gsw-FR","gsw-LI","guz-KE","haw-US","hsb-DE","jgo-CM","jmc-TZ","kab-DZ","kam-KE","kde-TZ","kea-CV","khq-ML","kkj-CM","kln-KE","kok-IN","ksb-TZ","ksf-CM","ksh-DE","lag-TZ","lkt-US","luo-KE","luy-KE","mas-KE","mas-TZ","mer-KE","mfe-MU","mgh-MZ","mgo-CM","mua-CM","naq-NA","nmg-CM","nnh-CM","nus-SD","nyn-UG","rof-TZ","rwk-TZ","sah-RU","saq-KE","sbp-TZ","seh-MZ","ses-ML","shi-Latn","shi-Latn-MA","shi-Tfng","shi-Tfng-MA","smn-FI","teo-KE","teo-UG","twq-NE","tzm-Latn","tzm-Latn-MA","vai-Latn","vai-Latn-LR","vai-Vaii","vai-Vaii-LR","vun-TZ","wae-CH","xog-UG","yav-CM","zgh-MA","af-NA","af-ZA","ak-GH","am-ET","ar-001","ar-AE","ar-BH","ar-DJ","ar-DZ","ar-EG","ar-EH","ar-ER","ar-IL","ar-IQ","ar-JO","ar-KM","ar-KW","ar-LB","ar-LY","ar-MA","ar-MR","ar-OM","ar-PS","ar-QA","ar-SA","ar-SD","ar-SO","ar-SS","ar-SY","ar-TD","ar-TN","ar-YE","as-IN","az-Cyrl","az-Cyrl-AZ","az-Latn","az-Latn-AZ","be-BY","bg-BG","bm-Latn","bm-Latn-ML","bn-BD","bn-IN","bo-CN","bo-IN","br-FR","bs-Cyrl","bs-Cyrl-BA","bs-Latn","bs-Latn-BA","ca-AD","ca-ES","ca-ES-VALENCIA","ca-FR","ca-IT","cs-CZ","cy-GB","da-DK","da-GL","de-AT","de-BE","de-CH","de-DE","de-LI","de-LU","dz-BT","ee-GH","ee-TG","el-CY","el-GR","en-001","en-150","en-AG","en-AI","en-AS","en-AU","en-BB","en-BE","en-BM","en-BS","en-BW","en-BZ","en-CA","en-CC","en-CK","en-CM","en-CX","en-DG","en-DM","en-ER","en-FJ","en-FK","en-FM","en-GB","en-GD","en-GG","en-GH","en-GI","en-GM","en-GU","en-GY","en-HK","en-IE","en-IM","en-IN","en-IO","en-JE","en-JM","en-KE","en-KI","en-KN","en-KY","en-LC","en-LR","en-LS","en-MG","en-MH","en-MO","en-MP","en-MS","en-MT","en-MU","en-MW","en-MY","en-NA","en-NF","en-NG","en-NR","en-NU","en-NZ","en-PG","en-PH","en-PK","en-PN","en-PR","en-PW","en-RW","en-SB","en-SC","en-SD","en-SG","en-SH","en-SL","en-SS","en-SX","en-SZ","en-TC","en-TK","en-TO","en-TT","en-TV","en-TZ","en-UG","en-UM","en-US","en-US-POSIX","en-VC","en-VG","en-VI","en-VU","en-WS","en-ZA","en-ZM","en-ZW","eo-001","es-419","es-AR","es-BO","es-CL","es-CO","es-CR","es-CU","es-DO","es-EA","es-EC","es-ES","es-GQ","es-GT","es-HN","es-IC","es-MX","es-NI","es-PA","es-PE","es-PH","es-PR","es-PY","es-SV","es-US","es-UY","es-VE","et-EE","eu-ES","fa-AF","fa-IR","ff-CM","ff-GN","ff-MR","ff-SN","fi-FI","fo-FO","fr-BE","fr-BF","fr-BI","fr-BJ","fr-BL","fr-CA","fr-CD","fr-CF","fr-CG","fr-CH","fr-CI","fr-CM","fr-DJ","fr-DZ","fr-FR","fr-GA","fr-GF","fr-GN","fr-GP","fr-GQ","fr-HT","fr-KM","fr-LU","fr-MA","fr-MC","fr-MF","fr-MG","fr-ML","fr-MQ","fr-MR","fr-MU","fr-NC","fr-NE","fr-PF","fr-PM","fr-RE","fr-RW","fr-SC","fr-SN","fr-SY","fr-TD","fr-TG","fr-TN","fr-VU","fr-WF","fr-YT","fy-NL","ga-IE","gd-GB","gl-ES","gu-IN","gv-IM","ha-Latn","ha-Latn-GH","ha-Latn-NE","ha-Latn-NG","he-IL","hi-IN","hr-BA","hr-HR","hu-HU","hy-AM","id-ID","ig-NG","ii-CN","is-IS","it-CH","it-IT","it-SM","ja-JP","ka-GE","ki-KE","kk-Cyrl","kk-Cyrl-KZ","kl-GL","km-KH","kn-IN","ko-KP","ko-KR","ks-Arab","ks-Arab-IN","kw-GB","ky-Cyrl","ky-Cyrl-KG","lb-LU","lg-UG","ln-AO","ln-CD","ln-CF","ln-CG","lo-LA","lt-LT","lu-CD","lv-LV","mg-MG","mk-MK","ml-IN","mn-Cyrl","mn-Cyrl-MN","mr-IN","ms-Latn","ms-Latn-BN","ms-Latn-MY","ms-Latn-SG","mt-MT","my-MM","nb-NO","nb-SJ","nd-ZW","ne-IN","ne-NP","nl-AW","nl-BE","nl-BQ","nl-CW","nl-NL","nl-SR","nl-SX","nn-NO","om-ET","om-KE","or-IN","os-GE","os-RU","pa-Arab","pa-Arab-PK","pa-Guru","pa-Guru-IN","pl-PL","ps-AF","pt-AO","pt-BR","pt-CV","pt-GW","pt-MO","pt-MZ","pt-PT","pt-ST","pt-TL","qu-BO","qu-EC","qu-PE","rm-CH","rn-BI","ro-MD","ro-RO","ru-BY","ru-KG","ru-KZ","ru-MD","ru-RU","ru-UA","rw-RW","se-FI","se-NO","se-SE","sg-CF","si-LK","sk-SK","sl-SI","sn-ZW","so-DJ","so-ET","so-KE","so-SO","sq-AL","sq-MK","sq-XK","sr-Cyrl","sr-Cyrl-BA","sr-Cyrl-ME","sr-Cyrl-RS","sr-Cyrl-XK","sr-Latn","sr-Latn-BA","sr-Latn-ME","sr-Latn-RS","sr-Latn-XK","sv-AX","sv-FI","sv-SE","sw-CD","sw-KE","sw-TZ","sw-UG","ta-IN","ta-LK","ta-MY","ta-SG","te-IN","th-TH","ti-ER","ti-ET","to-TO","tr-CY","tr-TR","ug-Arab","ug-Arab-CN","uk-UA","ur-IN","ur-PK","uz-Arab","uz-Arab-AF","uz-Cyrl","uz-Cyrl-UZ","uz-Latn","uz-Latn-UZ","vi-VN","yi-001","yo-BJ","yo-NG","zh-Hans","zh-Hans-CN","zh-Hans-HK","zh-Hans-MO","zh-Hans-SG","zh-Hant","zh-Hant-HK","zh-Hant-MO","zh-Hant-TW","zu-ZA"],us_states_and_dc:[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],territories:[{name:"American Samoa",abbreviation:"AS"},{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Guam",abbreviation:"GU"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Virgin Islands, U.S.",abbreviation:"VI"}],armed_forces:[{name:"Armed Forces Europe",abbreviation:"AE"},{name:"Armed Forces Pacific",abbreviation:"AP"},{name:"Armed Forces the Americas",abbreviation:"AA"}],country_regions:{it:[{name:"Valle d'Aosta",abbreviation:"VDA"},{name:"Piemonte",abbreviation:"PIE"},{name:"Lombardia",abbreviation:"LOM"},{name:"Veneto",abbreviation:"VEN"},{name:"Trentino Alto Adige",abbreviation:"TAA"},{name:"Friuli Venezia Giulia",abbreviation:"FVG"},{name:"Liguria",abbreviation:"LIG"},{name:"Emilia Romagna",abbreviation:"EMR"},{name:"Toscana",abbreviation:"TOS"},{name:"Umbria",abbreviation:"UMB"},{name:"Marche",abbreviation:"MAR"},{name:"Abruzzo",abbreviation:"ABR"},{name:"Lazio",abbreviation:"LAZ"},{name:"Campania",abbreviation:"CAM"},{name:"Puglia",abbreviation:"PUG"},{name:"Basilicata",abbreviation:"BAS"},{name:"Molise",abbreviation:"MOL"},{name:"Calabria",abbreviation:"CAL"},{name:"Sicilia",abbreviation:"SIC"},{name:"Sardegna",abbreviation:"SAR"}]},street_suffixes:{us:[{name:"Avenue",abbreviation:"Ave"},{name:"Boulevard",abbreviation:"Blvd"},{name:"Center",abbreviation:"Ctr"},{name:"Circle",abbreviation:"Cir"},{name:"Court",abbreviation:"Ct"},{name:"Drive",abbreviation:"Dr"},{name:"Extension",abbreviation:"Ext"},{name:"Glen",abbreviation:"Gln"},{name:"Grove",abbreviation:"Grv"},{name:"Heights",abbreviation:"Hts"},{name:"Highway",abbreviation:"Hwy"},{name:"Junction",abbreviation:"Jct"},{name:"Key",abbreviation:"Key"},{name:"Lane",abbreviation:"Ln"},{name:"Loop",abbreviation:"Loop"},{name:"Manor",abbreviation:"Mnr"},{name:"Mill",abbreviation:"Mill"},{name:"Park",abbreviation:"Park"},{name:"Parkway",abbreviation:"Pkwy"},{name:"Pass",abbreviation:"Pass"},{name:"Path",abbreviation:"Path"},{name:"Pike",abbreviation:"Pike"},{name:"Place",abbreviation:"Pl"},{name:"Plaza",abbreviation:"Plz"},{name:"Point",abbreviation:"Pt"},{name:"Ridge",abbreviation:"Rdg"},{name:"River",abbreviation:"Riv"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Trail",abbreviation:"Trl"},{name:"Turnpike",abbreviation:"Tpke"},{name:"View",abbreviation:"Vw"},{name:"Way",abbreviation:"Way"}],it:[{name:"Accesso",abbreviation:"Acc."},{name:"Alzaia",abbreviation:"Alz."},{name:"Arco",abbreviation:"Arco"},{name:"Archivolto",abbreviation:"Acv."},{name:"Arena",abbreviation:"Arena"},{name:"Argine",abbreviation:"Argine"},{name:"Bacino",abbreviation:"Bacino"},{name:"Banchi",abbreviation:"Banchi"},{name:"Banchina",abbreviation:"Ban."},{name:"Bastioni",abbreviation:"Bas."},{name:"Belvedere",abbreviation:"Belv."},{name:"Borgata",abbreviation:"B.ta"},{name:"Borgo",abbreviation:"B.go"},{name:"Calata",abbreviation:"Cal."},{name:"Calle",abbreviation:"Calle"},{name:"Campiello",abbreviation:"Cam."},{name:"Campo",abbreviation:"Cam."},{name:"Canale",abbreviation:"Can."},{name:"Carraia",abbreviation:"Carr."},{name:"Cascina",abbreviation:"Cascina"},{name:"Case sparse",abbreviation:"c.s."},{name:"Cavalcavia",abbreviation:"Cv."},{name:"Circonvallazione",abbreviation:"Cv."},{name:"Complanare",abbreviation:"C.re"},{name:"Contrada",abbreviation:"C.da"},{name:"Corso",abbreviation:"C.so"},{name:"Corte",abbreviation:"C.te"},{name:"Cortile",abbreviation:"C.le"},{name:"Diramazione",abbreviation:"Dir."},{name:"Fondaco",abbreviation:"F.co"},{name:"Fondamenta",abbreviation:"F.ta"},{name:"Fondo",abbreviation:"F.do"},{name:"Frazione",abbreviation:"Fr."},{name:"Isola",abbreviation:"Is."},{name:"Largo",abbreviation:"L.go"},{name:"Litoranea",abbreviation:"Lit."},{name:"Lungolago",abbreviation:"L.go lago"},{name:"Lungo Po",abbreviation:"l.go Po"},{name:"Molo",abbreviation:"Molo"},{name:"Mura",abbreviation:"Mura"},{name:"Passaggio privato",abbreviation:"pass. priv."},{name:"Passeggiata",abbreviation:"Pass."},{name:"Piazza",abbreviation:"P.zza"},{name:"Piazzale",abbreviation:"P.le"},{name:"Ponte",abbreviation:"P.te"},{name:"Portico",abbreviation:"P.co"},{name:"Rampa",abbreviation:"Rampa"},{name:"Regione",abbreviation:"Reg."},{name:"Rione",abbreviation:"R.ne"},{name:"Rio",abbreviation:"Rio"},{name:"Ripa",abbreviation:"Ripa"},{name:"Riva",abbreviation:"Riva"},{name:"Rondò",abbreviation:"Rondò"},{name:"Rotonda",abbreviation:"Rot."},{name:"Sagrato",abbreviation:"Sagr."},{name:"Salita",abbreviation:"Sal."},{name:"Scalinata",abbreviation:"Scal."},{name:"Scalone",abbreviation:"Scal."},{name:"Slargo",abbreviation:"Sl."},{name:"Sottoportico",abbreviation:"Sott."},{name:"Strada",abbreviation:"Str."},{name:"Stradale",abbreviation:"Str.le"},{name:"Strettoia",abbreviation:"Strett."},{name:"Traversa",abbreviation:"Trav."},{name:"Via",abbreviation:"V."},{name:"Viale",abbreviation:"V.le"},{name:"Vicinale",abbreviation:"Vic.le"},{name:"Vicolo",abbreviation:"Vic."}],uk:[{name:"Avenue",abbreviation:"Ave"},{name:"Close",abbreviation:"Cl"},{name:"Court",abbreviation:"Ct"},{name:"Crescent",abbreviation:"Cr"},{name:"Drive",abbreviation:"Dr"},{name:"Garden",abbreviation:"Gdn"},{name:"Gardens",abbreviation:"Gdns"},{name:"Green",abbreviation:"Gn"},{name:"Grove",abbreviation:"Gr"},{name:"Lane",abbreviation:"Ln"},{name:"Mount",abbreviation:"Mt"},{name:"Place",abbreviation:"Pl"},{name:"Park",abbreviation:"Pk"},{name:"Ridge",abbreviation:"Rdg"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Valley",abbreviation:"Val"}]},months:[{name:"January",short_name:"Jan",numeric:"01",days:31},{name:"February",short_name:"Feb",numeric:"02",days:28},{name:"March",short_name:"Mar",numeric:"03",days:31},{name:"April",short_name:"Apr",numeric:"04",days:30},{name:"May",short_name:"May",numeric:"05",days:31},{name:"June",short_name:"Jun",numeric:"06",days:30},{name:"July",short_name:"Jul",numeric:"07",days:31},{name:"August",short_name:"Aug",numeric:"08",days:31},{name:"September",short_name:"Sep",numeric:"09",days:30},{name:"October",short_name:"Oct",numeric:"10",days:31},{name:"November",short_name:"Nov",numeric:"11",days:30},{name:"December",short_name:"Dec",numeric:"12",days:31}],cc_types:[{name:"American Express",short_name:"amex",prefix:"34",length:15},{name:"Bankcard",short_name:"bankcard",prefix:"5610",length:16},{name:"China UnionPay",short_name:"chinaunion",prefix:"62",length:16},{name:"Diners Club Carte Blanche",short_name:"dccarte",prefix:"300",length:14},{name:"Diners Club enRoute",short_name:"dcenroute",prefix:"2014",length:15},{name:"Diners Club International",short_name:"dcintl",prefix:"36",length:14},{name:"Diners Club United States & Canada",short_name:"dcusc",prefix:"54",length:16},{name:"Discover Card",short_name:"discover",prefix:"6011",length:16},{name:"InstaPayment",short_name:"instapay",prefix:"637",length:16},{name:"JCB",short_name:"jcb",prefix:"3528",length:16},{name:"Laser",short_name:"laser",prefix:"6304",length:16},{name:"Maestro",short_name:"maestro",prefix:"5018",length:16},{name:"Mastercard",short_name:"mc",prefix:"51",length:16},{name:"Solo",short_name:"solo",prefix:"6334",length:16},{name:"Switch",short_name:"switch",prefix:"4903",length:16},{name:"Visa",short_name:"visa",prefix:"4",length:16},{name:"Visa Electron",short_name:"electron",prefix:"4026",length:16}],currency_types:[{code:"AED",name:"United Arab Emirates Dirham"},{code:"AFN",name:"Afghanistan Afghani"},{code:"ALL",name:"Albania Lek"},{code:"AMD",name:"Armenia Dram"},{code:"ANG",name:"Netherlands Antilles Guilder"},{code:"AOA",name:"Angola Kwanza"},{code:"ARS",name:"Argentina Peso"},{code:"AUD",name:"Australia Dollar"},{code:"AWG",name:"Aruba Guilder"},{code:"AZN",name:"Azerbaijan New Manat"},{code:"BAM",name:"Bosnia and Herzegovina Convertible Marka"},{code:"BBD",name:"Barbados Dollar"},{code:"BDT",name:"Bangladesh Taka"},{code:"BGN",name:"Bulgaria Lev"},{code:"BHD",name:"Bahrain Dinar"},{code:"BIF",name:"Burundi Franc"},{code:"BMD",name:"Bermuda Dollar"},{code:"BND",name:"Brunei Darussalam Dollar"},{code:"BOB",name:"Bolivia Boliviano"},{code:"BRL",name:"Brazil Real"},{code:"BSD",name:"Bahamas Dollar"},{code:"BTN",name:"Bhutan Ngultrum"},{code:"BWP",name:"Botswana Pula"},{code:"BYR",name:"Belarus Ruble"},{code:"BZD",name:"Belize Dollar"},{code:"CAD",name:"Canada Dollar"},{code:"CDF",name:"Congo/Kinshasa Franc"},{code:"CHF",name:"Switzerland Franc"},{code:"CLP",name:"Chile Peso"},{code:"CNY",name:"China Yuan Renminbi"},{code:"COP",name:"Colombia Peso"},{code:"CRC",name:"Costa Rica Colon"},{code:"CUC",name:"Cuba Convertible Peso"},{code:"CUP",name:"Cuba Peso"},{code:"CVE",name:"Cape Verde Escudo"},{code:"CZK",name:"Czech Republic Koruna"},{code:"DJF",name:"Djibouti Franc"},{code:"DKK",name:"Denmark Krone"},{code:"DOP",name:"Dominican Republic Peso"},{code:"DZD",name:"Algeria Dinar"},{code:"EGP",name:"Egypt Pound"},{code:"ERN",name:"Eritrea Nakfa"},{code:"ETB",name:"Ethiopia Birr"},{code:"EUR",name:"Euro Member Countries"},{code:"FJD",name:"Fiji Dollar"},{code:"FKP",name:"Falkland Islands (Malvinas) Pound"},{code:"GBP",name:"United Kingdom Pound"},{code:"GEL",name:"Georgia Lari"},{code:"GGP",name:"Guernsey Pound"},{code:"GHS",name:"Ghana Cedi"},{code:"GIP",name:"Gibraltar Pound"},{code:"GMD",name:"Gambia Dalasi"},{code:"GNF",name:"Guinea Franc"},{code:"GTQ",name:"Guatemala Quetzal"},{code:"GYD",name:"Guyana Dollar"},{code:"HKD",name:"Hong Kong Dollar"},{code:"HNL",name:"Honduras Lempira"},{code:"HRK",name:"Croatia Kuna"},{code:"HTG",name:"Haiti Gourde"},{code:"HUF",name:"Hungary Forint"},{code:"IDR",name:"Indonesia Rupiah"},{code:"ILS",name:"Israel Shekel"},{code:"IMP",name:"Isle of Man Pound"},{code:"INR",name:"India Rupee"},{code:"IQD",name:"Iraq Dinar"},{code:"IRR",name:"Iran Rial"},{code:"ISK",name:"Iceland Krona"},{code:"JEP",name:"Jersey Pound"},{code:"JMD",name:"Jamaica Dollar"},{code:"JOD",name:"Jordan Dinar"},{code:"JPY",name:"Japan Yen"},{code:"KES",name:"Kenya Shilling"},{code:"KGS",name:"Kyrgyzstan Som"},{code:"KHR",name:"Cambodia Riel"},{code:"KMF",name:"Comoros Franc"},{code:"KPW",name:"Korea (North) Won"},{code:"KRW",name:"Korea (South) Won"},{code:"KWD",name:"Kuwait Dinar"},{code:"KYD",name:"Cayman Islands Dollar"},{code:"KZT",name:"Kazakhstan Tenge"},{code:"LAK",name:"Laos Kip"},{code:"LBP",name:"Lebanon Pound"},{code:"LKR",name:"Sri Lanka Rupee"},{code:"LRD",name:"Liberia Dollar"},{code:"LSL",name:"Lesotho Loti"},{code:"LTL",name:"Lithuania Litas"},{code:"LYD",name:"Libya Dinar"},{code:"MAD",name:"Morocco Dirham"},{code:"MDL",name:"Moldova Leu"},{code:"MGA",name:"Madagascar Ariary"},{code:"MKD",name:"Macedonia Denar"},{code:"MMK",name:"Myanmar (Burma) Kyat"},{code:"MNT",name:"Mongolia Tughrik"},{code:"MOP",name:"Macau Pataca"},{code:"MRO",name:"Mauritania Ouguiya"},{code:"MUR",name:"Mauritius Rupee"},{code:"MVR",name:"Maldives (Maldive Islands) Rufiyaa"},{code:"MWK",name:"Malawi Kwacha"},{code:"MXN",name:"Mexico Peso"},{code:"MYR",name:"Malaysia Ringgit"},{code:"MZN",name:"Mozambique Metical"},{code:"NAD",name:"Namibia Dollar"},{code:"NGN",name:"Nigeria Naira"},{code:"NIO",name:"Nicaragua Cordoba"},{code:"NOK",name:"Norway Krone"},{code:"NPR",name:"Nepal Rupee"},{code:"NZD",name:"New Zealand Dollar"},{code:"OMR",name:"Oman Rial"},{code:"PAB",name:"Panama Balboa"},{code:"PEN",name:"Peru Nuevo Sol"},{code:"PGK",name:"Papua New Guinea Kina"},{code:"PHP",name:"Philippines Peso"},{code:"PKR",name:"Pakistan Rupee"},{code:"PLN",name:"Poland Zloty"},{code:"PYG",name:"Paraguay Guarani"},{code:"QAR",name:"Qatar Riyal"},{code:"RON",name:"Romania New Leu"},{code:"RSD",name:"Serbia Dinar"},{code:"RUB",name:"Russia Ruble"},{code:"RWF",name:"Rwanda Franc"},{code:"SAR",name:"Saudi Arabia Riyal"},{code:"SBD",name:"Solomon Islands Dollar"},{code:"SCR",name:"Seychelles Rupee"},{code:"SDG",name:"Sudan Pound"},{code:"SEK",name:"Sweden Krona"},{code:"SGD",name:"Singapore Dollar"},{code:"SHP",name:"Saint Helena Pound"},{code:"SLL",name:"Sierra Leone Leone"},{code:"SOS",name:"Somalia Shilling"},{code:"SPL",name:"Seborga Luigino"},{code:"SRD",name:"Suriname Dollar"},{code:"STD",name:"São Tomé and Príncipe Dobra"},{code:"SVC",name:"El Salvador Colon"},{code:"SYP",name:"Syria Pound"},{code:"SZL",name:"Swaziland Lilangeni"},{code:"THB",name:"Thailand Baht"},{code:"TJS",name:"Tajikistan Somoni"},{code:"TMT",name:"Turkmenistan Manat"},{code:"TND",name:"Tunisia Dinar"},{code:"TOP",name:"Tonga Pa'anga"},{code:"TRY",name:"Turkey Lira"},{code:"TTD",name:"Trinidad and Tobago Dollar"},{code:"TVD",name:"Tuvalu Dollar"},{code:"TWD",name:"Taiwan New Dollar"},{code:"TZS",name:"Tanzania Shilling"},{code:"UAH",name:"Ukraine Hryvnia"},{code:"UGX",name:"Uganda Shilling"},{code:"USD",name:"United States Dollar"},{code:"UYU",name:"Uruguay Peso"},{code:"UZS",name:"Uzbekistan Som"},{code:"VEF",name:"Venezuela Bolivar"},{code:"VND",name:"Viet Nam Dong"},{code:"VUV",name:"Vanuatu Vatu"},{code:"WST",name:"Samoa Tala"},{code:"XAF",name:"Communauté Financière Africaine (BEAC) CFA Franc BEAC"},{code:"XCD",name:"East Caribbean Dollar"},{code:"XDR",name:"International Monetary Fund (IMF) Special Drawing Rights"},{code:"XOF",name:"Communauté Financière Africaine (BCEAO) Franc"},{code:"XPF",name:"Comptoirs Français du Pacifique (CFP) Franc"},{code:"YER",name:"Yemen Rial"},{code:"ZAR",name:"South Africa Rand"},{code:"ZMW",name:"Zambia Kwacha"},{code:"ZWD",name:"Zimbabwe Dollar"}],colorNames:["AliceBlue","Black","Navy","DarkBlue","MediumBlue","Blue","DarkGreen","Green","Teal","DarkCyan","DeepSkyBlue","DarkTurquoise","MediumSpringGreen","Lime","SpringGreen","Aqua","Cyan","MidnightBlue","DodgerBlue","LightSeaGreen","ForestGreen","SeaGreen","DarkSlateGray","LimeGreen","MediumSeaGreen","Turquoise","RoyalBlue","SteelBlue","DarkSlateBlue","MediumTurquoise","Indigo","DarkOliveGreen","CadetBlue","CornflowerBlue","RebeccaPurple","MediumAquaMarine","DimGray","SlateBlue","OliveDrab","SlateGray","LightSlateGray","MediumSlateBlue","LawnGreen","Chartreuse","Aquamarine","Maroon","Purple","Olive","Gray","SkyBlue","LightSkyBlue","BlueViolet","DarkRed","DarkMagenta","SaddleBrown","Ivory","White","DarkSeaGreen","LightGreen","MediumPurple","DarkViolet","PaleGreen","DarkOrchid","YellowGreen","Sienna","Brown","DarkGray","LightBlue","GreenYellow","PaleTurquoise","LightSteelBlue","PowderBlue","FireBrick","DarkGoldenRod","MediumOrchid","RosyBrown","DarkKhaki","Silver","MediumVioletRed","IndianRed","Peru","Chocolate","Tan","LightGray","Thistle","Orchid","GoldenRod","PaleVioletRed","Crimson","Gainsboro","Plum","BurlyWood","LightCyan","Lavender","DarkSalmon","Violet","PaleGoldenRod","LightCoral","Khaki","AliceBlue","HoneyDew","Azure","SandyBrown","Wheat","Beige","WhiteSmoke","MintCream","GhostWhite","Salmon","AntiqueWhite","Linen","LightGoldenRodYellow","OldLace","Red","Fuchsia","Magenta","DeepPink","OrangeRed","Tomato","HotPink","Coral","DarkOrange","LightSalmon","Orange","LightPink","Pink","Gold","PeachPuff","NavajoWhite","Moccasin","Bisque","MistyRose","BlanchedAlmond","PapayaWhip","LavenderBlush","SeaShell","Cornsilk","LemonChiffon","FloralWhite","Snow","Yellow","LightYellow"],company:["3Com Corp","3M Company","A.G. Edwards Inc.","Abbott Laboratories","Abercrombie & Fitch Co.","ABM Industries Incorporated","Ace Hardware Corporation","ACT Manufacturing Inc.","Acterna Corp.","Adams Resources & Energy, Inc.","ADC Telecommunications, Inc.","Adelphia Communications Corporation","Administaff, Inc.","Adobe Systems Incorporated","Adolph Coors Company","Advance Auto Parts, Inc.","Advanced Micro Devices, Inc.","AdvancePCS, Inc.","Advantica Restaurant Group, Inc.","The AES Corporation","Aetna Inc.","Affiliated Computer Services, Inc.","AFLAC Incorporated","AGCO Corporation","Agilent Technologies, Inc.","Agway Inc.","Apartment Investment and Management Company","Air Products and Chemicals, Inc.","Airborne, Inc.","Airgas, Inc.","AK Steel Holding Corporation","Alaska Air Group, Inc.","Alberto-Culver Company","Albertson's, Inc.","Alcoa Inc.","Alleghany Corporation","Allegheny Energy, Inc.","Allegheny Technologies Incorporated","Allergan, Inc.","ALLETE, Inc.","Alliant Energy Corporation","Allied Waste Industries, Inc.","Allmerica Financial Corporation","The Allstate Corporation","ALLTEL Corporation","The Alpine Group, Inc.","Amazon.com, Inc.","AMC Entertainment Inc.","American Power Conversion Corporation","Amerada Hess Corporation","AMERCO","Ameren Corporation","America West Holdings Corporation","American Axle & Manufacturing Holdings, Inc.","American Eagle Outfitters, Inc.","American Electric Power Company, Inc.","American Express Company","American Financial Group, Inc.","American Greetings Corporation","American International Group, Inc.","American Standard Companies Inc.","American Water Works Company, Inc.","AmerisourceBergen Corporation","Ames Department Stores, Inc.","Amgen Inc.","Amkor Technology, Inc.","AMR Corporation","AmSouth Bancorp.","Amtran, Inc.","Anadarko Petroleum Corporation","Analog Devices, Inc.","Anheuser-Busch Companies, Inc.","Anixter International Inc.","AnnTaylor Inc.","Anthem, Inc.","AOL Time Warner Inc.","Aon Corporation","Apache Corporation","Apple Computer, Inc.","Applera Corporation","Applied Industrial Technologies, Inc.","Applied Materials, Inc.","Aquila, Inc.","ARAMARK Corporation","Arch Coal, Inc.","Archer Daniels Midland Company","Arkansas Best Corporation","Armstrong Holdings, Inc.","Arrow Electronics, Inc.","ArvinMeritor, Inc.","Ashland Inc.","Astoria Financial Corporation","AT&T Corp.","Atmel Corporation","Atmos Energy Corporation","Audiovox Corporation","Autoliv, Inc.","Automatic Data Processing, Inc.","AutoNation, Inc.","AutoZone, Inc.","Avaya Inc.","Avery Dennison Corporation","Avista Corporation","Avnet, Inc.","Avon Products, Inc.","Baker Hughes Incorporated","Ball Corporation","Bank of America Corporation","The Bank of New York Company, Inc.","Bank One Corporation","Banknorth Group, Inc.","Banta Corporation","Barnes & Noble, Inc.","Bausch & Lomb Incorporated","Baxter International Inc.","BB&T Corporation","The Bear Stearns Companies Inc.","Beazer Homes USA, Inc.","Beckman Coulter, Inc.","Becton, Dickinson and Company","Bed Bath & Beyond Inc.","Belk, Inc.","Bell Microproducts Inc.","BellSouth Corporation","Belo Corp.","Bemis Company, Inc.","Benchmark Electronics, Inc.","Berkshire Hathaway Inc.","Best Buy Co., Inc.","Bethlehem Steel Corporation","Beverly Enterprises, Inc.","Big Lots, Inc.","BJ Services Company","BJ's Wholesale Club, Inc.","The Black & Decker Corporation","Black Hills Corporation","BMC Software, Inc.","The Boeing Company","Boise Cascade Corporation","Borders Group, Inc.","BorgWarner Inc.","Boston Scientific Corporation","Bowater Incorporated","Briggs & Stratton Corporation","Brightpoint, Inc.","Brinker International, Inc.","Bristol-Myers Squibb Company","Broadwing, Inc.","Brown Shoe Company, Inc.","Brown-Forman Corporation","Brunswick Corporation","Budget Group, Inc.","Burlington Coat Factory Warehouse Corporation","Burlington Industries, Inc.","Burlington Northern Santa Fe Corporation","Burlington Resources Inc.","C. H. Robinson Worldwide Inc.","Cablevision Systems Corp","Cabot Corp","Cadence Design Systems, Inc.","Calpine Corp.","Campbell Soup Co.","Capital One Financial Corp.","Cardinal Health Inc.","Caremark Rx Inc.","Carlisle Cos. Inc.","Carpenter Technology Corp.","Casey's General Stores Inc.","Caterpillar Inc.","CBRL Group Inc.","CDI Corp.","CDW Computer Centers Inc.","CellStar Corp.","Cendant Corp","Cenex Harvest States Cooperatives","Centex Corp.","CenturyTel Inc.","Ceridian Corp.","CH2M Hill Cos. Ltd.","Champion Enterprises Inc.","Charles Schwab Corp.","Charming Shoppes Inc.","Charter Communications Inc.","Charter One Financial Inc.","ChevronTexaco Corp.","Chiquita Brands International Inc.","Chubb Corp","Ciena Corp.","Cigna Corp","Cincinnati Financial Corp.","Cinergy Corp.","Cintas Corp.","Circuit City Stores Inc.","Cisco Systems Inc.","Citigroup, Inc","Citizens Communications Co.","CKE Restaurants Inc.","Clear Channel Communications Inc.","The Clorox Co.","CMGI Inc.","CMS Energy Corp.","CNF Inc.","Coca-Cola Co.","Coca-Cola Enterprises Inc.","Colgate-Palmolive Co.","Collins & Aikman Corp.","Comcast Corp.","Comdisco Inc.","Comerica Inc.","Comfort Systems USA Inc.","Commercial Metals Co.","Community Health Systems Inc.","Compass Bancshares Inc","Computer Associates International Inc.","Computer Sciences Corp.","Compuware Corp.","Comverse Technology Inc.","ConAgra Foods Inc.","Concord EFS Inc.","Conectiv, Inc","Conoco Inc","Conseco Inc.","Consolidated Freightways Corp.","Consolidated Edison Inc.","Constellation Brands Inc.","Constellation Emergy Group Inc.","Continental Airlines Inc.","Convergys Corp.","Cooper Cameron Corp.","Cooper Industries Ltd.","Cooper Tire & Rubber Co.","Corn Products International Inc.","Corning Inc.","Costco Wholesale Corp.","Countrywide Credit Industries Inc.","Coventry Health Care Inc.","Cox Communications Inc.","Crane Co.","Crompton Corp.","Crown Cork & Seal Co. Inc.","CSK Auto Corp.","CSX Corp.","Cummins Inc.","CVS Corp.","Cytec Industries Inc.","D&K Healthcare Resources, Inc.","D.R. Horton Inc.","Dana Corporation","Danaher Corporation","Darden Restaurants Inc.","DaVita Inc.","Dean Foods Company","Deere & Company","Del Monte Foods Co","Dell Computer Corporation","Delphi Corp.","Delta Air Lines Inc.","Deluxe Corporation","Devon Energy Corporation","Di Giorgio Corporation","Dial Corporation","Diebold Incorporated","Dillard's Inc.","DIMON Incorporated","Dole Food Company, Inc.","Dollar General Corporation","Dollar Tree Stores, Inc.","Dominion Resources, Inc.","Domino's Pizza LLC","Dover Corporation, Inc.","Dow Chemical Company","Dow Jones & Company, Inc.","DPL Inc.","DQE Inc.","Dreyer's Grand Ice Cream, Inc.","DST Systems, Inc.","DTE Energy Co.","E.I. Du Pont de Nemours and Company","Duke Energy Corp","Dun & Bradstreet Inc.","DURA Automotive Systems Inc.","DynCorp","Dynegy Inc.","E*Trade Group, Inc.","E.W. Scripps Company","Earthlink, Inc.","Eastman Chemical Company","Eastman Kodak Company","Eaton Corporation","Echostar Communications Corporation","Ecolab Inc.","Edison International","EGL Inc.","El Paso Corporation","Electronic Arts Inc.","Electronic Data Systems Corp.","Eli Lilly and Company","EMC Corporation","Emcor Group Inc.","Emerson Electric Co.","Encompass Services Corporation","Energizer Holdings Inc.","Energy East Corporation","Engelhard Corporation","Enron Corp.","Entergy Corporation","Enterprise Products Partners L.P.","EOG Resources, Inc.","Equifax Inc.","Equitable Resources Inc.","Equity Office Properties Trust","Equity Residential Properties Trust","Estee Lauder Companies Inc.","Exelon Corporation","Exide Technologies","Expeditors International of Washington Inc.","Express Scripts Inc.","ExxonMobil Corporation","Fairchild Semiconductor International Inc.","Family Dollar Stores Inc.","Farmland Industries Inc.","Federal Mogul Corp.","Federated Department Stores Inc.","Federal Express Corp.","Felcor Lodging Trust Inc.","Ferro Corp.","Fidelity National Financial Inc.","Fifth Third Bancorp","First American Financial Corp.","First Data Corp.","First National of Nebraska Inc.","First Tennessee National Corp.","FirstEnergy Corp.","Fiserv Inc.","Fisher Scientific International Inc.","FleetBoston Financial Co.","Fleetwood Enterprises Inc.","Fleming Companies Inc.","Flowers Foods Inc.","Flowserv Corp","Fluor Corp","FMC Corp","Foamex International Inc","Foot Locker Inc","Footstar Inc.","Ford Motor Co","Forest Laboratories Inc.","Fortune Brands Inc.","Foster Wheeler Ltd.","FPL Group Inc.","Franklin Resources Inc.","Freeport McMoran Copper & Gold Inc.","Frontier Oil Corp","Furniture Brands International Inc.","Gannett Co., Inc.","Gap Inc.","Gateway Inc.","GATX Corporation","Gemstar-TV Guide International Inc.","GenCorp Inc.","General Cable Corporation","General Dynamics Corporation","General Electric Company","General Mills Inc","General Motors Corporation","Genesis Health Ventures Inc.","Gentek Inc.","Gentiva Health Services Inc.","Genuine Parts Company","Genuity Inc.","Genzyme Corporation","Georgia Gulf Corporation","Georgia-Pacific Corporation","Gillette Company","Gold Kist Inc.","Golden State Bancorp Inc.","Golden West Financial Corporation","Goldman Sachs Group Inc.","Goodrich Corporation","The Goodyear Tire & Rubber Company","Granite Construction Incorporated","Graybar Electric Company Inc.","Great Lakes Chemical Corporation","Great Plains Energy Inc.","GreenPoint Financial Corp.","Greif Bros. Corporation","Grey Global Group Inc.","Group 1 Automotive Inc.","Guidant Corporation","H&R Block Inc.","H.B. Fuller Company","H.J. Heinz Company","Halliburton Co.","Harley-Davidson Inc.","Harman International Industries Inc.","Harrah's Entertainment Inc.","Harris Corp.","Harsco Corp.","Hartford Financial Services Group Inc.","Hasbro Inc.","Hawaiian Electric Industries Inc.","HCA Inc.","Health Management Associates Inc.","Health Net Inc.","Healthsouth Corp","Henry Schein Inc.","Hercules Inc.","Herman Miller Inc.","Hershey Foods Corp.","Hewlett-Packard Company","Hibernia Corp.","Hillenbrand Industries Inc.","Hilton Hotels Corp.","Hollywood Entertainment Corp.","Home Depot Inc.","Hon Industries Inc.","Honeywell International Inc.","Hormel Foods Corp.","Host Marriott Corp.","Household International Corp.","Hovnanian Enterprises Inc.","Hub Group Inc.","Hubbell Inc.","Hughes Supply Inc.","Humana Inc.","Huntington Bancshares Inc.","Idacorp Inc.","IDT Corporation","IKON Office Solutions Inc.","Illinois Tool Works Inc.","IMC Global Inc.","Imperial Sugar Company","IMS Health Inc.","Ingles Market Inc","Ingram Micro Inc.","Insight Enterprises Inc.","Integrated Electrical Services Inc.","Intel Corporation","International Paper Co.","Interpublic Group of Companies Inc.","Interstate Bakeries Corporation","International Business Machines Corp.","International Flavors & Fragrances Inc.","International Multifoods Corporation","Intuit Inc.","IT Group Inc.","ITT Industries Inc.","Ivax Corp.","J.B. Hunt Transport Services Inc.","J.C. Penny Co.","J.P. Morgan Chase & Co.","Jabil Circuit Inc.","Jack In The Box Inc.","Jacobs Engineering Group Inc.","JDS Uniphase Corp.","Jefferson-Pilot Co.","John Hancock Financial Services Inc.","Johnson & Johnson","Johnson Controls Inc.","Jones Apparel Group Inc.","KB Home","Kellogg Company","Kellwood Company","Kelly Services Inc.","Kemet Corp.","Kennametal Inc.","Kerr-McGee Corporation","KeyCorp","KeySpan Corp.","Kimball International Inc.","Kimberly-Clark Corporation","Kindred Healthcare Inc.","KLA-Tencor Corporation","K-Mart Corp.","Knight-Ridder Inc.","Kohl's Corp.","KPMG Consulting Inc.","Kroger Co.","L-3 Communications Holdings Inc.","Laboratory Corporation of America Holdings","Lam Research Corporation","LandAmerica Financial Group Inc.","Lands' End Inc.","Landstar System Inc.","La-Z-Boy Inc.","Lear Corporation","Legg Mason Inc.","Leggett & Platt Inc.","Lehman Brothers Holdings Inc.","Lennar Corporation","Lennox International Inc.","Level 3 Communications Inc.","Levi Strauss & Co.","Lexmark International Inc.","Limited Inc.","Lincoln National Corporation","Linens 'n Things Inc.","Lithia Motors Inc.","Liz Claiborne Inc.","Lockheed Martin Corporation","Loews Corporation","Longs Drug Stores Corporation","Louisiana-Pacific Corporation","Lowe's Companies Inc.","LSI Logic Corporation","The LTV Corporation","The Lubrizol Corporation","Lucent Technologies Inc.","Lyondell Chemical Company","M & T Bank Corporation","Magellan Health Services Inc.","Mail-Well Inc.","Mandalay Resort Group","Manor Care Inc.","Manpower Inc.","Marathon Oil Corporation","Mariner Health Care Inc.","Markel Corporation","Marriott International Inc.","Marsh & McLennan Companies Inc.","Marsh Supermarkets Inc.","Marshall & Ilsley Corporation","Martin Marietta Materials Inc.","Masco Corporation","Massey Energy Company","MasTec Inc.","Mattel Inc.","Maxim Integrated Products Inc.","Maxtor Corporation","Maxxam Inc.","The May Department Stores Company","Maytag Corporation","MBNA Corporation","McCormick & Company Incorporated","McDonald's Corporation","The McGraw-Hill Companies Inc.","McKesson Corporation","McLeodUSA Incorporated","M.D.C. Holdings Inc.","MDU Resources Group Inc.","MeadWestvaco Corporation","Medtronic Inc.","Mellon Financial Corporation","The Men's Wearhouse Inc.","Merck & Co., Inc.","Mercury General Corporation","Merrill Lynch & Co. Inc.","Metaldyne Corporation","Metals USA Inc.","MetLife Inc.","Metris Companies Inc","MGIC Investment Corporation","MGM Mirage","Michaels Stores Inc.","Micron Technology Inc.","Microsoft Corporation","Milacron Inc.","Millennium Chemicals Inc.","Mirant Corporation","Mohawk Industries Inc.","Molex Incorporated","The MONY Group Inc.","Morgan Stanley Dean Witter & Co.","Motorola Inc.","MPS Group Inc.","Murphy Oil Corporation","Nabors Industries Inc","Nacco Industries Inc","Nash Finch Company","National City Corp.","National Commerce Financial Corporation","National Fuel Gas Company","National Oilwell Inc","National Rural Utilities Cooperative Finance Corporation","National Semiconductor Corporation","National Service Industries Inc","Navistar International Corporation","NCR Corporation","The Neiman Marcus Group Inc.","New Jersey Resources Corporation","New York Times Company","Newell Rubbermaid Inc","Newmont Mining Corporation","Nextel Communications Inc","Nicor Inc","Nike Inc","NiSource Inc","Noble Energy Inc","Nordstrom Inc","Norfolk Southern Corporation","Nortek Inc","North Fork Bancorporation Inc","Northeast Utilities System","Northern Trust Corporation","Northrop Grumman Corporation","NorthWestern Corporation","Novellus Systems Inc","NSTAR","NTL Incorporated","Nucor Corp","Nvidia Corp","NVR Inc","Northwest Airlines Corp","Occidental Petroleum Corp","Ocean Energy Inc","Office Depot Inc.","OfficeMax Inc","OGE Energy Corp","Oglethorpe Power Corp.","Ohio Casualty Corp.","Old Republic International Corp.","Olin Corp.","OM Group Inc","Omnicare Inc","Omnicom Group","On Semiconductor Corp","ONEOK Inc","Oracle Corp","Oshkosh Truck Corp","Outback Steakhouse Inc.","Owens & Minor Inc.","Owens Corning","Owens-Illinois Inc","Oxford Health Plans Inc","Paccar Inc","PacifiCare Health Systems Inc","Packaging Corp. of America","Pactiv Corp","Pall Corp","Pantry Inc","Park Place Entertainment Corp","Parker Hannifin Corp.","Pathmark Stores Inc.","Paychex Inc","Payless Shoesource Inc","Penn Traffic Co.","Pennzoil-Quaker State Company","Pentair Inc","Peoples Energy Corp.","PeopleSoft Inc","Pep Boys Manny, Moe & Jack","Potomac Electric Power Co.","Pepsi Bottling Group Inc.","PepsiAmericas Inc.","PepsiCo Inc.","Performance Food Group Co.","Perini Corp","PerkinElmer Inc","Perot Systems Corp","Petco Animal Supplies Inc.","Peter Kiewit Sons', Inc.","PETsMART Inc","Pfizer Inc","Pacific Gas & Electric Corp.","Pharmacia Corp","Phar Mor Inc.","Phelps Dodge Corp.","Philip Morris Companies Inc.","Phillips Petroleum Co","Phillips Van Heusen Corp.","Phoenix Companies Inc","Pier 1 Imports Inc.","Pilgrim's Pride Corporation","Pinnacle West Capital Corp","Pioneer-Standard Electronics Inc.","Pitney Bowes Inc.","Pittston Brinks Group","Plains All American Pipeline LP","PNC Financial Services Group Inc.","PNM Resources Inc","Polaris Industries Inc.","Polo Ralph Lauren Corp","PolyOne Corp","Popular Inc","Potlatch Corp","PPG Industries Inc","PPL Corp","Praxair Inc","Precision Castparts Corp","Premcor Inc.","Pride International Inc","Primedia Inc","Principal Financial Group Inc.","Procter & Gamble Co.","Pro-Fac Cooperative Inc.","Progress Energy Inc","Progressive Corporation","Protective Life Corp","Provident Financial Group","Providian Financial Corp.","Prudential Financial Inc.","PSS World Medical Inc","Public Service Enterprise Group Inc.","Publix Super Markets Inc.","Puget Energy Inc.","Pulte Homes Inc","Qualcomm Inc","Quanta Services Inc.","Quantum Corp","Quest Diagnostics Inc.","Questar Corp","Quintiles Transnational","Qwest Communications Intl Inc","R.J. Reynolds Tobacco Company","R.R. Donnelley & Sons Company","Radio Shack Corporation","Raymond James Financial Inc.","Raytheon Company","Reader's Digest Association Inc.","Reebok International Ltd.","Regions Financial Corp.","Regis Corporation","Reliance Steel & Aluminum Co.","Reliant Energy Inc.","Rent A Center Inc","Republic Services Inc","Revlon Inc","RGS Energy Group Inc","Rite Aid Corp","Riverwood Holding Inc.","RoadwayCorp","Robert Half International Inc.","Rock-Tenn Co","Rockwell Automation Inc","Rockwell Collins Inc","Rohm & Haas Co.","Ross Stores Inc","RPM Inc.","Ruddick Corp","Ryder System Inc","Ryerson Tull Inc","Ryland Group Inc.","Sabre Holdings Corp","Safeco Corp","Safeguard Scientifics Inc.","Safeway Inc","Saks Inc","Sanmina-SCI Inc","Sara Lee Corp","SBC Communications Inc","Scana Corp.","Schering-Plough Corp","Scholastic Corp","SCI Systems Onc.","Science Applications Intl. Inc.","Scientific-Atlanta Inc","Scotts Company","Seaboard Corp","Sealed Air Corp","Sears Roebuck & Co","Sempra Energy","Sequa Corp","Service Corp. International","ServiceMaster Co","Shaw Group Inc","Sherwin-Williams Company","Shopko Stores Inc","Siebel Systems Inc","Sierra Health Services Inc","Sierra Pacific Resources","Silgan Holdings Inc.","Silicon Graphics Inc","Simon Property Group Inc","SLM Corporation","Smith International Inc","Smithfield Foods Inc","Smurfit-Stone Container Corp","Snap-On Inc","Solectron Corp","Solutia Inc","Sonic Automotive Inc.","Sonoco Products Co.","Southern Company","Southern Union Company","SouthTrust Corp.","Southwest Airlines Co","Southwest Gas Corp","Sovereign Bancorp Inc.","Spartan Stores Inc","Spherion Corp","Sports Authority Inc","Sprint Corp.","SPX Corp","St. Jude Medical Inc","St. Paul Cos.","Staff Leasing Inc.","StanCorp Financial Group Inc","Standard Pacific Corp.","Stanley Works","Staples Inc","Starbucks Corp","Starwood Hotels & Resorts Worldwide Inc","State Street Corp.","Stater Bros. Holdings Inc.","Steelcase Inc","Stein Mart Inc","Stewart & Stevenson Services Inc","Stewart Information Services Corp","Stilwell Financial Inc","Storage Technology Corporation","Stryker Corp","Sun Healthcare Group Inc.","Sun Microsystems Inc.","SunGard Data Systems Inc.","Sunoco Inc.","SunTrust Banks Inc","Supervalu Inc","Swift Transportation, Co., Inc","Symbol Technologies Inc","Synovus Financial Corp.","Sysco Corp","Systemax Inc.","Target Corp.","Tech Data Corporation","TECO Energy Inc","Tecumseh Products Company","Tektronix Inc","Teleflex Incorporated","Telephone & Data Systems Inc","Tellabs Inc.","Temple-Inland Inc","Tenet Healthcare Corporation","Tenneco Automotive Inc.","Teradyne Inc","Terex Corp","Tesoro Petroleum Corp.","Texas Industries Inc.","Texas Instruments Incorporated","Textron Inc","Thermo Electron Corporation","Thomas & Betts Corporation","Tiffany & Co","Timken Company","TJX Companies Inc","TMP Worldwide Inc","Toll Brothers Inc","Torchmark Corporation","Toro Company","Tower Automotive Inc.","Toys 'R' Us Inc","Trans World Entertainment Corp.","TransMontaigne Inc","Transocean Inc","TravelCenters of America Inc.","Triad Hospitals Inc","Tribune Company","Trigon Healthcare Inc.","Trinity Industries Inc","Trump Hotels & Casino Resorts Inc.","TruServ Corporation","TRW Inc","TXU Corp","Tyson Foods Inc","U.S. Bancorp","U.S. Industries Inc.","UAL Corporation","UGI Corporation","Unified Western Grocers Inc","Union Pacific Corporation","Union Planters Corp","Unisource Energy Corp","Unisys Corporation","United Auto Group Inc","United Defense Industries Inc.","United Parcel Service Inc","United Rentals Inc","United Stationers Inc","United Technologies Corporation","UnitedHealth Group Incorporated","Unitrin Inc","Universal Corporation","Universal Forest Products Inc","Universal Health Services Inc","Unocal Corporation","Unova Inc","UnumProvident Corporation","URS Corporation","US Airways Group Inc","US Oncology Inc","USA Interactive","USFreighways Corporation","USG Corporation","UST Inc","Valero Energy Corporation","Valspar Corporation","Value City Department Stores Inc","Varco International Inc","Vectren Corporation","Veritas Software Corporation","Verizon Communications Inc","VF Corporation","Viacom Inc","Viad Corp","Viasystems Group Inc","Vishay Intertechnology Inc","Visteon Corporation","Volt Information Sciences Inc","Vulcan Materials Company","W.R. Berkley Corporation","W.R. Grace & Co","W.W. Grainger Inc","Wachovia Corporation","Wakenhut Corporation","Walgreen Co","Wallace Computer Services Inc","Wal-Mart Stores Inc","Walt Disney Co","Walter Industries Inc","Washington Mutual Inc","Washington Post Co.","Waste Management Inc","Watsco Inc","Weatherford International Inc","Weis Markets Inc.","Wellpoint Health Networks Inc","Wells Fargo & Company","Wendy's International Inc","Werner Enterprises Inc","WESCO International Inc","Western Digital Inc","Western Gas Resources Inc","WestPoint Stevens Inc","Weyerhauser Company","WGL Holdings Inc","Whirlpool Corporation","Whole Foods Market Inc","Willamette Industries Inc.","Williams Companies Inc","Williams Sonoma Inc","Winn Dixie Stores Inc","Wisconsin Energy Corporation","Wm Wrigley Jr Company","World Fuel Services Corporation","WorldCom Inc","Worthington Industries Inc","WPS Resources Corporation","Wyeth","Wyndham International Inc","Xcel Energy Inc","Xerox Corp","Xilinx Inc","XO Communications Inc","Yellow Corporation","York International Corp","Yum Brands Inc.","Zale Corporation","Zions Bancorporation"],fileExtension:{raster:["bmp","gif","gpl","ico","jpeg","psd","png","psp","raw","tiff"],vector:["3dv","amf","awg","ai","cgm","cdr","cmx","dxf","e2d","egt","eps","fs","odg","svg","xar"],"3d":["3dmf","3dm","3mf","3ds","an8","aoi","blend","cal3d","cob","ctm","iob","jas","max","mb","mdx","obj","x","x3d"],document:["doc","docx","dot","html","xml","odt","odm","ott","csv","rtf","tex","xhtml","xps"]},timezones:[{name:"Dateline Standard Time",abbr:"DST",offset:-12,isdst:!1,text:"(UTC-12:00) International Date Line West",utc:["Etc/GMT+12"]},{name:"UTC-11",abbr:"U",offset:-11,isdst:!1,text:"(UTC-11:00) Coordinated Universal Time-11",utc:["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{name:"Hawaiian Standard Time",abbr:"HST",offset:-10,isdst:!1,text:"(UTC-10:00) Hawaii",utc:["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{name:"Alaskan Standard Time",abbr:"AKDT",offset:-8,isdst:!0,text:"(UTC-09:00) Alaska",utc:["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{name:"Pacific Standard Time (Mexico)",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Baja California",utc:["America/Santa_Isabel"]},{name:"Pacific Standard Time",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Pacific Time (US & Canada)",utc:["America/Dawson","America/Los_Angeles","America/Tijuana","America/Vancouver","America/Whitehorse","PST8PDT"]},{name:"US Mountain Standard Time",abbr:"UMST",offset:-7,isdst:!1,text:"(UTC-07:00) Arizona",utc:["America/Creston","America/Dawson_Creek","America/Hermosillo","America/Phoenix","Etc/GMT+7"]},{name:"Mountain Standard Time (Mexico)",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",utc:["America/Chihuahua","America/Mazatlan"]},{name:"Mountain Standard Time",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Mountain Time (US & Canada)",utc:["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{name:"Central America Standard Time",abbr:"CAST",offset:-6,isdst:!1,text:"(UTC-06:00) Central America",utc:["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{name:"Central Standard Time",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Central Time (US & Canada)",utc:["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{name:"Central Standard Time (Mexico)",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",utc:["America/Bahia_Banderas","America/Cancun","America/Merida","America/Mexico_City","America/Monterrey"]},{name:"Canada Central Standard Time",abbr:"CCST",offset:-6,isdst:!1,text:"(UTC-06:00) Saskatchewan",utc:["America/Regina","America/Swift_Current"]},{name:"SA Pacific Standard Time",abbr:"SPST",offset:-5,isdst:!1,text:"(UTC-05:00) Bogota, Lima, Quito",utc:["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},{name:"Eastern Standard Time",abbr:"EDT",offset:-4,isdst:!0,text:"(UTC-05:00) Eastern Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto","EST5EDT"]},{name:"US Eastern Standard Time",abbr:"UEDT",offset:-4,isdst:!0,text:"(UTC-05:00) Indiana (East)",utc:["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{name:"Venezuela Standard Time",abbr:"VST",offset:-4.5,isdst:!1,text:"(UTC-04:30) Caracas",utc:["America/Caracas"]},{name:"Paraguay Standard Time",abbr:"PST",offset:-4,isdst:!1,text:"(UTC-04:00) Asuncion",utc:["America/Asuncion"]},{name:"Atlantic Standard Time",abbr:"ADT",offset:-3,isdst:!0,text:"(UTC-04:00) Atlantic Time (Canada)",utc:["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{name:"Central Brazilian Standard Time",abbr:"CBST",offset:-4,isdst:!1,text:"(UTC-04:00) Cuiaba",utc:["America/Campo_Grande","America/Cuiaba"]},{name:"SA Western Standard Time",abbr:"SWST",offset:-4,isdst:!1,text:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",utc:["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon","America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{name:"Pacific SA Standard Time",abbr:"PSST",offset:-4,isdst:!1,text:"(UTC-04:00) Santiago",utc:["America/Santiago","Antarctica/Palmer"]},{name:"Newfoundland Standard Time",abbr:"NDT",offset:-2.5,isdst:!0,text:"(UTC-03:30) Newfoundland",utc:["America/St_Johns"]},{name:"E. South America Standard Time",abbr:"ESAST",offset:-3,isdst:!1,text:"(UTC-03:00) Brasilia",utc:["America/Sao_Paulo"]},{name:"Argentina Standard Time",abbr:"AST",offset:-3,isdst:!1,text:"(UTC-03:00) Buenos Aires",utc:["America/Argentina/La_Rioja","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{name:"SA Eastern Standard Time",abbr:"SEST",offset:-3,isdst:!1,text:"(UTC-03:00) Cayenne, Fortaleza",utc:["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza","America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{name:"Greenland Standard Time",abbr:"GDT",offset:-2,isdst:!0,text:"(UTC-03:00) Greenland",utc:["America/Godthab"]},{name:"Montevideo Standard Time",abbr:"MST",offset:-3,isdst:!1,text:"(UTC-03:00) Montevideo",utc:["America/Montevideo"]},{name:"Bahia Standard Time",abbr:"BST",offset:-3,isdst:!1,text:"(UTC-03:00) Salvador",utc:["America/Bahia"]},{name:"UTC-02",abbr:"U",offset:-2,isdst:!1,text:"(UTC-02:00) Coordinated Universal Time-02",utc:["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{name:"Mid-Atlantic Standard Time",abbr:"MDT",offset:-1,isdst:!0,text:"(UTC-02:00) Mid-Atlantic - Old"},{name:"Azores Standard Time",abbr:"ADT",offset:0,isdst:!0,text:"(UTC-01:00) Azores",utc:["America/Scoresbysund","Atlantic/Azores"]},{name:"Cape Verde Standard Time",abbr:"CVST",offset:-1,isdst:!1,text:"(UTC-01:00) Cape Verde Is.",utc:["Atlantic/Cape_Verde","Etc/GMT+1"]},{name:"Morocco Standard Time",abbr:"MDT",offset:1,isdst:!0,text:"(UTC) Casablanca",utc:["Africa/Casablanca","Africa/El_Aaiun"]},{name:"UTC",abbr:"CUT",offset:0,isdst:!1,text:"(UTC) Coordinated Universal Time",utc:["America/Danmarkshavn","Etc/GMT"]},{name:"GMT Standard Time",abbr:"GDT",offset:1,isdst:!0,text:"(UTC) Dublin, Edinburgh, Lisbon, London",utc:["Atlantic/Canary","Atlantic/Faeroe","Atlantic/Madeira","Europe/Dublin","Europe/Guernsey","Europe/Isle_of_Man","Europe/Jersey","Europe/Lisbon","Europe/London"]},{name:"Greenwich Standard Time",abbr:"GST",offset:0,isdst:!1,text:"(UTC) Monrovia, Reykjavik",utc:["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},{name:"W. Europe Standard Time",abbr:"WEDT",offset:2,isdst:!0,text:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",utc:["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{name:"Central Europe Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",utc:["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{name:"Romance Standard Time",abbr:"RDT",offset:2,isdst:!0,text:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",utc:["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{name:"Central European Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",utc:["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{name:"W. Central Africa Standard Time",abbr:"WCAST",offset:1,isdst:!1,text:"(UTC+01:00) West Central Africa",utc:["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},{name:"Namibia Standard Time",abbr:"NST",offset:1,isdst:!1,text:"(UTC+01:00) Windhoek",utc:["Africa/Windhoek"]},{name:"GTB Standard Time",abbr:"GDT",offset:3,isdst:!0,text:"(UTC+02:00) Athens, Bucharest",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{name:"Middle East Standard Time",abbr:"MEDT",offset:3,isdst:!0,text:"(UTC+02:00) Beirut",utc:["Asia/Beirut"]},{name:"Egypt Standard Time",abbr:"EST",offset:2,isdst:!1,text:"(UTC+02:00) Cairo",utc:["Africa/Cairo"]},{name:"Syria Standard Time",abbr:"SDT",offset:3,isdst:!0,text:"(UTC+02:00) Damascus",utc:["Asia/Damascus"]},{name:"E. Europe Standard Time",abbr:"EEDT",offset:3,isdst:!0,text:"(UTC+02:00) E. Europe"},{name:"South Africa Standard Time",abbr:"SAST",offset:2,isdst:!1,text:"(UTC+02:00) Harare, Pretoria",utc:["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali","Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{name:"FLE Standard Time",abbr:"FDT",offset:3,isdst:!0,text:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",utc:["Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{name:"Turkey Standard Time",abbr:"TDT",offset:3,isdst:!0,text:"(UTC+02:00) Istanbul",utc:["Europe/Istanbul"]},{name:"Israel Standard Time",abbr:"JDT",offset:3,isdst:!0,text:"(UTC+02:00) Jerusalem",utc:["Asia/Jerusalem"]},{name:"Libya Standard Time",abbr:"LST",offset:2,isdst:!1,text:"(UTC+02:00) Tripoli",utc:["Africa/Tripoli"]},{name:"Jordan Standard Time",abbr:"JST",offset:3,isdst:!1,text:"(UTC+03:00) Amman",utc:["Asia/Amman"]},{name:"Arabic Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Baghdad",utc:["Asia/Baghdad"]},{name:"Kaliningrad Standard Time",abbr:"KST",offset:3,isdst:!1,text:"(UTC+03:00) Kaliningrad, Minsk",utc:["Europe/Kaliningrad","Europe/Minsk"]},{name:"Arab Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Kuwait, Riyadh",utc:["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{name:"E. Africa Standard Time",abbr:"EAST",offset:3,isdst:!1,text:"(UTC+03:00) Nairobi",utc:["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{name:"Iran Standard Time",abbr:"IDT",offset:4.5,isdst:!0,text:"(UTC+03:30) Tehran",utc:["Asia/Tehran"]},{name:"Arabian Standard Time",abbr:"AST",offset:4,isdst:!1,text:"(UTC+04:00) Abu Dhabi, Muscat",utc:["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{name:"Azerbaijan Standard Time",abbr:"ADT",offset:5,isdst:!0,text:"(UTC+04:00) Baku",utc:["Asia/Baku"]},{name:"Russian Standard Time",abbr:"RST",offset:4,isdst:!1,text:"(UTC+04:00) Moscow, St. Petersburg, Volgograd",utc:["Europe/Moscow","Europe/Samara","Europe/Simferopol","Europe/Volgograd"]},{name:"Mauritius Standard Time",abbr:"MST",offset:4,isdst:!1,text:"(UTC+04:00) Port Louis",utc:["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{name:"Georgian Standard Time",abbr:"GST",offset:4,isdst:!1,text:"(UTC+04:00) Tbilisi",utc:["Asia/Tbilisi"]},{name:"Caucasus Standard Time",abbr:"CST",offset:4,isdst:!1,text:"(UTC+04:00) Yerevan",utc:["Asia/Yerevan"]},{name:"Afghanistan Standard Time",abbr:"AST",offset:4.5,isdst:!1,text:"(UTC+04:30) Kabul",utc:["Asia/Kabul"]},{name:"West Asia Standard Time",abbr:"WAST",offset:5,isdst:!1,text:"(UTC+05:00) Ashgabat, Tashkent",utc:["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand","Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{name:"Pakistan Standard Time",abbr:"PST",offset:5,isdst:!1,text:"(UTC+05:00) Islamabad, Karachi",utc:["Asia/Karachi"]},{name:"India Standard Time",abbr:"IST",offset:5.5,isdst:!1,text:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",utc:["Asia/Calcutta"]},{name:"Sri Lanka Standard Time",abbr:"SLST",offset:5.5,isdst:!1,text:"(UTC+05:30) Sri Jayawardenepura",utc:["Asia/Colombo"]},{name:"Nepal Standard Time",abbr:"NST",offset:5.75,isdst:!1,text:"(UTC+05:45) Kathmandu",utc:["Asia/Katmandu"]},{name:"Central Asia Standard Time",abbr:"CAST",offset:6,isdst:!1,text:"(UTC+06:00) Astana",utc:["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{name:"Bangladesh Standard Time",abbr:"BST",offset:6,isdst:!1,text:"(UTC+06:00) Dhaka",utc:["Asia/Dhaka","Asia/Thimphu"]},{name:"Ekaterinburg Standard Time",abbr:"EST",offset:6,isdst:!1,text:"(UTC+06:00) Ekaterinburg",utc:["Asia/Yekaterinburg"]},{name:"Myanmar Standard Time",abbr:"MST",offset:6.5,isdst:!1,text:"(UTC+06:30) Yangon (Rangoon)",utc:["Asia/Rangoon","Indian/Cocos"]},{name:"SE Asia Standard Time",abbr:"SAST",offset:7,isdst:!1,text:"(UTC+07:00) Bangkok, Hanoi, Jakarta",utc:["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},{name:"N. Central Asia Standard Time",abbr:"NCAST",offset:7,isdst:!1,text:"(UTC+07:00) Novosibirsk",utc:["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk"]},{name:"China Standard Time",abbr:"CST",offset:8,isdst:!1,text:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",utc:["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{name:"North Asia Standard Time",abbr:"NAST",offset:8,isdst:!1,text:"(UTC+08:00) Krasnoyarsk",utc:["Asia/Krasnoyarsk"]},{name:"Singapore Standard Time",abbr:"MPST",offset:8,isdst:!1,text:"(UTC+08:00) Kuala Lumpur, Singapore",utc:["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{name:"W. Australia Standard Time",abbr:"WAST",offset:8,isdst:!1,text:"(UTC+08:00) Perth",utc:["Antarctica/Casey","Australia/Perth"]},{name:"Taipei Standard Time",abbr:"TST",offset:8,isdst:!1,text:"(UTC+08:00) Taipei",utc:["Asia/Taipei"]},{name:"Ulaanbaatar Standard Time",abbr:"UST",offset:8,isdst:!1,text:"(UTC+08:00) Ulaanbaatar",utc:["Asia/Choibalsan","Asia/Ulaanbaatar"]},{name:"North Asia East Standard Time",abbr:"NAEST",offset:9,isdst:!1,text:"(UTC+09:00) Irkutsk",utc:["Asia/Irkutsk"]},{name:"Tokyo Standard Time",abbr:"TST",offset:9,isdst:!1,text:"(UTC+09:00) Osaka, Sapporo, Tokyo",utc:["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{name:"Korea Standard Time",abbr:"KST",offset:9,isdst:!1,text:"(UTC+09:00) Seoul",utc:["Asia/Pyongyang","Asia/Seoul"]},{name:"Cen. Australia Standard Time",abbr:"CAST",offset:9.5,isdst:!1,text:"(UTC+09:30) Adelaide",utc:["Australia/Adelaide","Australia/Broken_Hill"]},{name:"AUS Central Standard Time",abbr:"ACST",offset:9.5,isdst:!1,text:"(UTC+09:30) Darwin",utc:["Australia/Darwin"]},{name:"E. Australia Standard Time",abbr:"EAST",offset:10,isdst:!1,text:"(UTC+10:00) Brisbane",utc:["Australia/Brisbane","Australia/Lindeman"]},{name:"AUS Eastern Standard Time",abbr:"AEST",offset:10,isdst:!1,text:"(UTC+10:00) Canberra, Melbourne, Sydney",utc:["Australia/Melbourne","Australia/Sydney"]},{name:"West Pacific Standard Time",abbr:"WPST",offset:10,isdst:!1,text:"(UTC+10:00) Guam, Port Moresby",utc:["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{name:"Tasmania Standard Time",abbr:"TST",offset:10,isdst:!1,text:"(UTC+10:00) Hobart",utc:["Australia/Currie","Australia/Hobart"]},{name:"Yakutsk Standard Time",abbr:"YST",offset:10,isdst:!1,text:"(UTC+10:00) Yakutsk",utc:["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{name:"Central Pacific Standard Time",abbr:"CPST",offset:11,isdst:!1,text:"(UTC+11:00) Solomon Is., New Caledonia",utc:["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{name:"Vladivostok Standard Time",abbr:"VST",offset:11,isdst:!1,text:"(UTC+11:00) Vladivostok",utc:["Asia/Sakhalin","Asia/Ust-Nera","Asia/Vladivostok"]},{name:"New Zealand Standard Time",abbr:"NZST",offset:12,isdst:!1,text:"(UTC+12:00) Auckland, Wellington",utc:["Antarctica/McMurdo","Pacific/Auckland"]},{name:"UTC+12",abbr:"U",offset:12,isdst:!1,text:"(UTC+12:00) Coordinated Universal Time+12",utc:["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake","Pacific/Wallis"]},{name:"Fiji Standard Time",abbr:"FST",offset:12,isdst:!1,text:"(UTC+12:00) Fiji",utc:["Pacific/Fiji"]},{name:"Magadan Standard Time",abbr:"MST",offset:12,isdst:!1,text:"(UTC+12:00) Magadan",utc:["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{name:"Kamchatka Standard Time",abbr:"KDT",offset:13,isdst:!0,text:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old"},{name:"Tonga Standard Time",abbr:"TST",offset:13,isdst:!1,text:"(UTC+13:00) Nuku'alofa",utc:["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{name:"Samoa Standard Time",abbr:"SST",offset:13,isdst:!1,text:"(UTC+13:00) Samoa",utc:["Pacific/Apia"]}],profession:["Airline Pilot","Academic Team","Accountant","Account Executive","Actor","Actuary","Acquisition Analyst","Administrative Asst.","Administrative Analyst","Administrator","Advertising Director","Aerospace Engineer","Agent","Agricultural Inspector","Agricultural Scientist","Air Traffic Controller","Animal Trainer","Anthropologist","Appraiser","Architect","Art Director","Artist","Astronomer","Athletic Coach","Auditor","Author","Baker","Banker","Bankruptcy Attorney","Benefits Manager","Biologist","Bio-feedback Specialist","Biomedical Engineer","Biotechnical Researcher","Broadcaster","Broker","Building Manager","Building Contractor","Building Inspector","Business Analyst","Business Planner","Business Manager","Buyer","Call Center Manager","Career Counselor","Cash Manager","Ceramic Engineer","Chief Executive Officer","Chief Operation Officer","Chef","Chemical Engineer","Chemist","Child Care Manager","Chief Medical Officer","Chiropractor","Cinematographer","City Housing Manager","City Manager","Civil Engineer","Claims Manager","Clinical Research Assistant","Collections Manager.","Compliance Manager","Comptroller","Computer Manager","Commercial Artist","Communications Affairs Director","Communications Director","Communications Engineer","Compensation Analyst","Computer Programmer","Computer Ops. Manager","Computer Engineer","Computer Operator","Computer Graphics Specialist","Construction Engineer","Construction Manager","Consultant","Consumer Relations Manager","Contract Administrator","Copyright Attorney","Copywriter","Corporate Planner","Corrections Officer","Cosmetologist","Credit Analyst","Cruise Director","Chief Information Officer","Chief Technology Officer","Customer Service Manager","Cryptologist","Dancer","Data Security Manager","Database Manager","Day Care Instructor","Dentist","Designer","Design Engineer","Desktop Publisher","Developer","Development Officer","Diamond Merchant","Dietitian","Direct Marketer","Director","Distribution Manager","Diversity Manager","Economist","EEO Compliance Manager","Editor","Education Adminator","Electrical Engineer","Electro Optical Engineer","Electronics Engineer","Embassy Management","Employment Agent","Engineer Technician","Entrepreneur","Environmental Analyst","Environmental Attorney","Environmental Engineer","Environmental Specialist","Escrow Officer","Estimator","Executive Assistant","Executive Director","Executive Recruiter","Facilities Manager","Family Counselor","Fashion Events Manager","Fashion Merchandiser","Fast Food Manager","Film Producer","Film Production Assistant","Financial Analyst","Financial Planner","Financier","Fine Artist","Wildlife Specialist","Fitness Consultant","Flight Attendant","Flight Engineer","Floral Designer","Food & Beverage Director","Food Service Manager","Forestry Technician","Franchise Management","Franchise Sales","Fraud Investigator","Freelance Writer","Fund Raiser","General Manager","Geologist","General Counsel","Geriatric Specialist","Gerontologist","Glamour Photographer","Golf Club Manager","Gourmet Chef","Graphic Designer","Grounds Keeper","Hazardous Waste Manager","Health Care Manager","Health Therapist","Health Service Administrator","Hearing Officer","Home Economist","Horticulturist","Hospital Administrator","Hotel Manager","Human Resources Manager","Importer","Industrial Designer","Industrial Engineer","Information Director","Inside Sales","Insurance Adjuster","Interior Decorator","Internal Controls Director","International Acct.","International Courier","International Lawyer","Interpreter","Investigator","Investment Banker","Investment Manager","IT Architect","IT Project Manager","IT Systems Analyst","Jeweler","Joint Venture Manager","Journalist","Labor Negotiator","Labor Organizer","Labor Relations Manager","Lab Services Director","Lab Technician","Land Developer","Landscape Architect","Law Enforcement Officer","Lawyer","Lead Software Engineer","Lead Software Test Engineer","Leasing Manager","Legal Secretary","Library Manager","Litigation Attorney","Loan Officer","Lobbyist","Logistics Manager","Maintenance Manager","Management Consultant","Managed Care Director","Managing Partner","Manufacturing Director","Manpower Planner","Marine Biologist","Market Res. Analyst","Marketing Director","Materials Manager","Mathematician","Membership Chairman","Mechanic","Mechanical Engineer","Media Buyer","Medical Investor","Medical Secretary","Medical Technician","Mental Health Counselor","Merchandiser","Metallurgical Engineering","Meteorologist","Microbiologist","MIS Manager","Motion Picture Director","Multimedia Director","Musician","Network Administrator","Network Specialist","Network Operator","New Product Manager","Novelist","Nuclear Engineer","Nuclear Specialist","Nutritionist","Nursing Administrator","Occupational Therapist","Oceanographer","Office Manager","Operations Manager","Operations Research Director","Optical Technician","Optometrist","Organizational Development Manager","Outplacement Specialist","Paralegal","Park Ranger","Patent Attorney","Payroll Specialist","Personnel Specialist","Petroleum Engineer","Pharmacist","Photographer","Physical Therapist","Physician","Physician Assistant","Physicist","Planning Director","Podiatrist","Political Analyst","Political Scientist","Politician","Portfolio Manager","Preschool Management","Preschool Teacher","Principal","Private Banker","Private Investigator","Probation Officer","Process Engineer","Producer","Product Manager","Product Engineer","Production Engineer","Production Planner","Professional Athlete","Professional Coach","Professor","Project Engineer","Project Manager","Program Manager","Property Manager","Public Administrator","Public Safety Director","PR Specialist","Publisher","Purchasing Agent","Publishing Director","Quality Assurance Specialist","Quality Control Engineer","Quality Control Inspector","Radiology Manager","Railroad Engineer","Real Estate Broker","Recreational Director","Recruiter","Redevelopment Specialist","Regulatory Affairs Manager","Registered Nurse","Rehabilitation Counselor","Relocation Manager","Reporter","Research Specialist","Restaurant Manager","Retail Store Manager","Risk Analyst","Safety Engineer","Sales Engineer","Sales Trainer","Sales Promotion Manager","Sales Representative","Sales Manager","Service Manager","Sanitation Engineer","Scientific Programmer","Scientific Writer","Securities Analyst","Security Consultant","Security Director","Seminar Presenter","Ship's Officer","Singer","Social Director","Social Program Planner","Social Research","Social Scientist","Social Worker","Sociologist","Software Developer","Software Engineer","Software Test Engineer","Soil Scientist","Special Events Manager","Special Education Teacher","Special Projects Director","Speech Pathologist","Speech Writer","Sports Event Manager","Statistician","Store Manager","Strategic Alliance Director","Strategic Planning Director","Stress Reduction Specialist","Stockbroker","Surveyor","Structural Engineer","Superintendent","Supply Chain Director","System Engineer","Systems Analyst","Systems Programmer","System Administrator","Tax Specialist","Teacher","Technical Support Specialist","Technical Illustrator","Technical Writer","Technology Director","Telecom Analyst","Telemarketer","Theatrical Director","Title Examiner","Tour Escort","Tour Guide Director","Traffic Manager","Trainer Translator","Transportation Manager","Travel Agent","Treasurer","TV Programmer","Underwriter","Union Representative","University Administrator","University Dean","Urban Planner","Veterinarian","Vendor Relations Director","Viticulturist","Warehouse Manager"],animals:{ocean:["Acantharea","Anemone","Angelfish King","Ahi Tuna","Albacore","American Oyster","Anchovy","Armored Snail","Arctic Char","Atlantic Bluefin Tuna","Atlantic Cod","Atlantic Goliath Grouper","Atlantic Trumpetfish","Atlantic Wolffish","Baleen Whale","Banded Butterflyfish","Banded Coral Shrimp","Banded Sea Krait","Barnacle","Barndoor Skate","Barracuda","Basking Shark","Bass","Beluga Whale","Bluebanded Goby","Bluehead Wrasse","Bluefish","Bluestreak Cleaner-Wrasse","Blue Marlin","Blue Shark","Blue Spiny Lobster","Blue Tang","Blue Whale","Broadclub Cuttlefish","Bull Shark","Chambered Nautilus","Chilean Basket Star","Chilean Jack Mackerel","Chinook Salmon","Christmas Tree Worm","Clam","Clown Anemonefish","Clown Triggerfish","Cod","Coelacanth","Cockscomb Cup Coral","Common Fangtooth","Conch","Cookiecutter Shark","Copepod","Coral","Corydoras","Cownose Ray","Crab","Crown-of-Thorns Starfish","Cushion Star","Cuttlefish","California Sea Otters","Dolphin","Dolphinfish","Dory","Devil Fish","Dugong","Dumbo Octopus","Dungeness Crab","Eccentric Sand Dollar","Edible Sea Cucumber","Eel","Elephant Seal","Elkhorn Coral","Emperor Shrimp","Estuarine Crocodile","Fathead Sculpin","Fiddler Crab","Fin Whale","Flameback","Flamingo Tongue Snail","Flashlight Fish","Flatback Turtle","Flatfish","Flying Fish","Flounder","Fluke","French Angelfish","Frilled Shark","Fugu (also called Pufferfish)","Gar","Geoduck","Giant Barrel Sponge","Giant Caribbean Sea Anemone","Giant Clam","Giant Isopod","Giant Kingfish","Giant Oarfish","Giant Pacific Octopus","Giant Pyrosome","Giant Sea Star","Giant Squid","Glowing Sucker Octopus","Giant Tube Worm","Goblin Shark","Goosefish","Great White Shark","Greenland Shark","Grey Atlantic Seal","Grouper","Grunion","Guineafowl Puffer","Haddock","Hake","Halibut","Hammerhead Shark","Hapuka","Harbor Porpoise","Harbor Seal","Hatchetfish","Hawaiian Monk Seal","Hawksbill Turtle","Hector's Dolphin","Hermit Crab","Herring","Hoki","Horn Shark","Horseshoe Crab","Humpback Anglerfish","Humpback Whale","Icefish","Imperator Angelfish","Irukandji Jellyfish","Isopod","Ivory Bush Coral","Japanese Spider Crab","Jellyfish","John Dory","Juan Fernandez Fur Seal","Killer Whale","Kiwa Hirsuta","Krill","Lagoon Triggerfish","Lamprey","Leafy Seadragon","Leopard Seal","Limpet","Ling","Lionfish","Lions Mane Jellyfish","Lobe Coral","Lobster","Loggerhead Turtle","Longnose Sawshark","Longsnout Seahorse","Lophelia Coral","Marrus Orthocanna","Manatee","Manta Ray","Marlin","Megamouth Shark","Mexican Lookdown","Mimic Octopus","Moon Jelly","Mollusk","Monkfish","Moray Eel","Mullet","Mussel","Megaladon","Napoleon Wrasse","Nassau Grouper","Narwhal","Nautilus","Needlefish","Northern Seahorse","North Atlantic Right Whale","Northern Red Snapper","Norway Lobster","Nudibranch","Nurse Shark","Oarfish","Ocean Sunfish","Oceanic Whitetip Shark","Octopus","Olive Sea Snake","Orange Roughy","Ostracod","Otter","Oyster","Pacific Angelshark","Pacific Blackdragon","Pacific Halibut","Pacific Sardine","Pacific Sea Nettle Jellyfish","Pacific White Sided Dolphin","Pantropical Spotted Dolphin","Patagonian Toothfish","Peacock Mantis Shrimp","Pelagic Thresher Shark","Penguin","Peruvian Anchoveta","Pilchard","Pink Salmon","Pinniped","Plankton","Porpoise","Polar Bear","Portuguese Man o' War","Pycnogonid Sea Spider","Quahog","Queen Angelfish","Queen Conch","Queen Parrotfish","Queensland Grouper","Ragfish","Ratfish","Rattail Fish","Ray","Red Drum","Red King Crab","Ringed Seal","Risso's Dolphin","Ross Seals","Sablefish","Salmon","Sand Dollar","Sandbar Shark","Sawfish","Sarcastic Fringehead","Scalloped Hammerhead Shark","Seahorse","Sea Cucumber","Sea Lion","Sea Urchin","Seal","Shark","Shortfin Mako Shark","Shovelnose Guitarfish","Shrimp","Silverside Fish","Skipjack Tuna","Slender Snipe Eel","Smalltooth Sawfish","Smelts","Sockeye Salmon","Southern Stingray","Sponge","Spotted Porcupinefish","Spotted Dolphin","Spotted Eagle Ray","Spotted Moray","Squid","Squidworm","Starfish","Stickleback","Stonefish","Stoplight Loosejaw","Sturgeon","Swordfish","Tan Bristlemouth","Tasseled Wobbegong","Terrible Claw Lobster","Threespot Damselfish","Tiger Prawn","Tiger Shark","Tilefish","Toadfish","Tropical Two-Wing Flyfish","Tuna","Umbrella Squid","Velvet Crab","Venus Flytrap Sea Anemone","Vigtorniella Worm","Viperfish","Vampire Squid","Vaquita","Wahoo","Walrus","West Indian Manatee","Whale","Whale Shark","Whiptail Gulper","White-Beaked Dolphin","White-Ring Garden Eel","White Shrimp","Wobbegong","Wrasse","Wreckfish","Xiphosura","Yellowtail Damselfish","Yelloweye Rockfish","Yellow Cup Black Coral","Yellow Tube Sponge","Yellowfin Tuna","Zebrashark","Zooplankton"],desert:["Aardwolf","Addax","African Wild Ass","Ant","Antelope","Armadillo","Baboon","Badger","Bat","Bearded Dragon","Beetle","Bird","Black-footed Cat","Boa","Brown Bear","Bustard","Butterfly","Camel","Caracal","Caracara","Caterpillar","Centipede","Cheetah","Chipmunk","Chuckwalla","Climbing Mouse","Coati","Cobra","Cotton Rat","Cougar","Courser","Crane Fly","Crow","Dassie Rat","Dove","Dunnart","Eagle","Echidna","Elephant","Emu","Falcon","Fly","Fox","Frogmouth","Gecko","Geoffroy's Cat","Gerbil","Grasshopper","Guanaco","Gundi","Hamster","Hawk","Hedgehog","Hyena","Hyrax","Jackal","Kangaroo","Kangaroo Rat","Kestrel","Kowari","Kultarr","Leopard","Lion","Macaw","Meerkat","Mouse","Oryx","Ostrich","Owl","Pronghorn","Python","Rabbit","Raccoon","Rattlesnake","Rhinoceros","Sand Cat","Spectacled Bear","Spiny Mouse","Starling","Stick Bug","Tarantula","Tit","Toad","Tortoise","Tyrant Flycatcher","Viper","Vulture","Waxwing","Xerus","Zebra"],grassland:["Aardvark","Aardwolf","Accentor","African Buffalo","African Wild Dog","Alpaca","Anaconda","Ant","Anteater","Antelope","Armadillo","Baboon","Badger","Bandicoot","Barbet","Bat","Bee","Bee-eater","Beetle","Bird","Bison","Black-footed Cat","Black-footed Ferret","Bluebird","Boa","Bowerbird","Brown Bear","Bush Dog","Bushshrike","Bustard","Butterfly","Buzzard","Caracal","Caracara","Cardinal","Caterpillar","Cheetah","Chipmunk","Civet","Climbing Mouse","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Common Genet","Cotton Rat","Cougar","Courser","Coyote","Crane","Crane Fly","Cricket","Crow","Culpeo","Death Adder","Deer","Deer Mouse","Dingo","Dinosaur","Dove","Drongo","Duck","Duiker","Dunnart","Eagle","Echidna","Elephant","Elk","Emu","Falcon","Finch","Flea","Fly","Flying Frog","Fox","Frog","Frogmouth","Garter Snake","Gazelle","Gecko","Geoffroy's Cat","Gerbil","Giant Tortoise","Giraffe","Grasshopper","Grison","Groundhog","Grouse","Guanaco","Guinea Pig","Hamster","Harrier","Hartebeest","Hawk","Hedgehog","Helmetshrike","Hippopotamus","Hornbill","Hyena","Hyrax","Impala","Jackal","Jaguar","Jaguarundi","Kangaroo","Kangaroo Rat","Kestrel","Kultarr","Ladybug","Leopard","Lion","Macaw","Meerkat","Mouse","Newt","Oryx","Ostrich","Owl","Pangolin","Pheasant","Prairie Dog","Pronghorn","Przewalski's Horse","Python","Quoll","Rabbit","Raven","Rhinoceros","Shelduck","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Tamandua","Tasmanian Devil","Thornbill","Thrush","Toad","Tortoise"],forest:["Agouti","Anaconda","Anoa","Ant","Anteater","Antelope","Armadillo","Asian Black Bear","Aye-aye","Babirusa","Baboon","Badger","Bandicoot","Banteng","Barbet","Basilisk","Bat","Bearded Dragon","Bee","Bee-eater","Beetle","Bettong","Binturong","Bird-of-paradise","Bongo","Bowerbird","Bulbul","Bush Dog","Bushbaby","Bushshrike","Butterfly","Buzzard","Caecilian","Cardinal","Cassowary","Caterpillar","Centipede","Chameleon","Chimpanzee","Cicada","Civet","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Colugo","Cotinga","Cotton Rat","Cougar","Crane Fly","Cricket","Crocodile","Crow","Cuckoo","Cuscus","Death Adder","Deer","Dhole","Dingo","Dinosaur","Drongo","Duck","Duiker","Eagle","Echidna","Elephant","Finch","Flat-headed Cat","Flea","Flowerpecker","Fly","Flying Frog","Fossa","Frog","Frogmouth","Gaur","Gecko","Gorilla","Grison","Hawaiian Honeycreeper","Hawk","Hedgehog","Helmetshrike","Hornbill","Hyrax","Iguana","Jackal","Jaguar","Jaguarundi","Kestrel","Ladybug","Lemur","Leopard","Lion","Macaw","Mandrill","Margay","Monkey","Mouse","Mouse Deer","Newt","Okapi","Old World Flycatcher","Orangutan","Owl","Pangolin","Peafowl","Pheasant","Possum","Python","Quokka","Rabbit","Raccoon","Red Panda","Red River Hog","Rhinoceros","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Sun Bear","Tamandua","Tamarin","Tapir","Tarantula","Thrush","Tiger","Tit","Toad","Tortoise","Toucan","Trogon","Trumpeter","Turaco","Turtle","Tyrant Flycatcher","Viper","Vulture","Wallaby","Warbler","Wasp","Waxwing","Weaver","Weaver-finch","Whistler","White-eye","Whydah","Woodswallow","Worm","Wren","Xenops","Yellowjacket","Accentor","African Buffalo","American Black Bear","Anole","Bird","Bison","Boa","Brown Bear","Chipmunk","Common Genet","Copperhead","Coyote","Deer Mouse","Dormouse","Elk","Emu","Fisher","Fox","Garter Snake","Giant Panda","Giant Tortoise","Groundhog","Grouse","Guanaco","Himalayan Tahr","Kangaroo","Koala","Numbat","Quoll","Raccoon dog","Tasmanian Devil","Thornbill","Turkey","Vole","Weasel","Wildcat","Wolf","Wombat","Woodchuck","Woodpecker"],farm:["Alpaca","Buffalo","Banteng","Cow","Cat","Chicken","Carp","Camel","Donkey","Dog","Duck","Emu","Goat","Gayal","Guinea","Goose","Horse","Honey","Llama","Pig","Pigeon","Rhea","Rabbit","Sheep","Silkworm","Turkey","Yak","Zebu"],pet:["Bearded Dragon","Birds","Burro","Cats","Chameleons","Chickens","Chinchillas","Chinese Water Dragon","Cows","Dogs","Donkey","Ducks","Ferrets","Fish","Geckos","Geese","Gerbils","Goats","Guinea Fowl","Guinea Pigs","Hamsters","Hedgehogs","Horses","Iguanas","Llamas","Lizards","Mice","Mule","Peafowl","Pigs and Hogs","Pigeons","Ponies","Pot Bellied Pig","Rabbits","Rats","Sheep","Skinks","Snakes","Stick Insects","Sugar Gliders","Tarantula","Turkeys","Turtles"],zoo:["Aardvark","African Wild Dog","Aldabra Tortoise","American Alligator","American Bison","Amur Tiger","Anaconda","Andean Condor","Asian Elephant","Baby Doll Sheep","Bald Eagle","Barred Owl","Blue Iguana","Boer Goat","California Sea Lion","Caribbean Flamingo","Chinchilla","Collared Lemur","Coquerel's Sifaka","Cuban Amazon Parrot","Ebony Langur","Fennec Fox","Fossa","Gelada","Giant Anteater","Giraffe","Gorilla","Grizzly Bear","Henkel's Leaf-tailed Gecko","Indian Gharial","Indian Rhinoceros","King Cobra","King Vulture","Komodo Dragon","Linne's Two-toed Sloth","Lion","Little Penguin","Madagascar Tree Boa","Magellanic Penguin","Malayan Tapir","Malayan Tiger","Matschies Tree Kangaroo","Mini Donkey","Monarch Butterfly","Nile crocodile","North American Porcupine","Nubian Ibex","Okapi","Poison Dart Frog","Polar Bear","Pygmy Marmoset","Radiated Tortoise","Red Panda","Red Ruffed Lemur","Ring-tailed Lemur","Ring-tailed Mongoose","Rock Hyrax","Small Clawed Asian Otter","Snow Leopard","Snowy Owl","Southern White-faced Owl","Southern White Rhinocerous","Squirrel Monkey","Tufted Puffin","White Cheeked Gibbon","White-throated Bee Eater","Zebra"]}},b=Object.prototype.hasOwnProperty,y=Object.keys||function(a){var n=[];for(var e in a)b.call(a,e)&&n.push(e);return n};function f(a,n){var e=Array.isArray(a),t=n||(e?new Array(a.length):{});return e?function(a,n){for(var e=0,t=a.length;e<t;e++)n[e]=a[e]}(a,t):function(a,n){for(var e,t=y(a),i=0,r=t.length;i<r;i++)n[e=t[i]]=a[e]||n[e]}(a,t),t}p.prototype.get=function(a){return f(g[a])},p.prototype.mac_address=function(a){(a=u(a)).separator||(a.separator=a.networkVersion?".":":");return a.networkVersion?this.n(this.string,3,{pool:"ABCDEF1234567890",length:4}).join(a.separator):this.n(this.string,6,{pool:"ABCDEF1234567890",length:2}).join(a.separator)},p.prototype.normal=function(a){if(m((a=u(a,{mean:0,dev:1,pool:[]})).pool.constructor!==Array,"Chance: The pool option must be a valid array."),m("number"!=typeof a.mean,"Chance: Mean (mean) must be a number"),m("number"!=typeof a.dev,"Chance: Standard deviation (dev) must be a number"),a.pool.length>0)return this.normal_pool(a);var n,e,t,i=a.mean,r=a.dev;do{n=(e=2*this.random()-1)*e+(t=2*this.random()-1)*t}while(n>=1);return r*(e*Math.sqrt(-2*Math.log(n)/n))+i},p.prototype.normal_pool=function(a){var n=0;do{var e=Math.round(this.normal({mean:a.mean,dev:a.dev}));if(e<a.pool.length&&e>=0)return a.pool[e];n++}while(n<100);throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.")},p.prototype.radio=function(a){var n="";switch((a=u(a,{side:"?"})).side.toLowerCase()){case"east":case"e":n="W";break;case"west":case"w":n="K";break;default:n=this.character({pool:"KW"})}return n+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})},p.prototype.set=function(a,n){"string"==typeof a?g[a]=n:g=f(a,g)},p.prototype.tv=function(a){return this.radio(a)},p.prototype.cnpj=function(){var a=this.n(this.natural,8,{max:9}),n=2+6*a[7]+7*a[6]+8*a[5]+9*a[4]+2*a[3]+3*a[2]+4*a[1]+5*a[0];(n=11-n%11)>=10&&(n=0);var e=2*n+3+7*a[7]+8*a[6]+9*a[5]+2*a[4]+3*a[3]+4*a[2]+5*a[1]+6*a[0];return(e=11-e%11)>=10&&(e=0),""+a[0]+a[1]+"."+a[2]+a[3]+a[4]+"."+a[5]+a[6]+a[7]+"/0001-"+n+e},p.prototype.mersenne_twister=function(a){return new C(a)},p.prototype.blueimp_md5=function(){return new v};var C=function(a){void 0===a&&(a=Math.floor(Math.random()*Math.pow(10,13))),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(a)};C.prototype.init_genrand=function(a){for(this.mt[0]=a>>>0,this.mti=1;this.mti<this.N;this.mti++)a=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(1812433253*((4294901760&a)>>>16)<<16)+1812433253*(65535&a)+this.mti,this.mt[this.mti]>>>=0},C.prototype.init_by_array=function(a,n){var e,t,i=1,r=0;for(this.init_genrand(19650218),e=this.N>n?this.N:n;e;e--)t=this.mt[i-1]^this.mt[i-1]>>>30,this.mt[i]=(this.mt[i]^(1664525*((4294901760&t)>>>16)<<16)+1664525*(65535&t))+a[r]+r,this.mt[i]>>>=0,r++,++i>=this.N&&(this.mt[0]=this.mt[this.N-1],i=1),r>=n&&(r=0);for(e=this.N-1;e;e--)t=this.mt[i-1]^this.mt[i-1]>>>30,this.mt[i]=(this.mt[i]^(1566083941*((4294901760&t)>>>16)<<16)+1566083941*(65535&t))-i,this.mt[i]>>>=0,++i>=this.N&&(this.mt[0]=this.mt[this.N-1],i=1);this.mt[0]=2147483648},C.prototype.genrand_int32=function(){var a,n=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var e;for(this.mti===this.N+1&&this.init_genrand(5489),e=0;e<this.N-this.M;e++)a=this.mt[e]&this.UPPER_MASK|this.mt[e+1]&this.LOWER_MASK,this.mt[e]=this.mt[e+this.M]^a>>>1^n[1&a];for(;e<this.N-1;e++)a=this.mt[e]&this.UPPER_MASK|this.mt[e+1]&this.LOWER_MASK,this.mt[e]=this.mt[e+(this.M-this.N)]^a>>>1^n[1&a];a=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^a>>>1^n[1&a],this.mti=0}return a=this.mt[this.mti++],a^=a>>>11,a^=a<<7&2636928640,a^=a<<15&4022730752,(a^=a>>>18)>>>0},C.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},C.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},C.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},C.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},C.prototype.genrand_res53=function(){return(67108864*(this.genrand_int32()>>>5)+(this.genrand_int32()>>>6))*(1/9007199254740992)};var v=function(){};v.prototype.VERSION="1.0.1",v.prototype.safe_add=function(a,n){var e=(65535&a)+(65535&n);return(a>>16)+(n>>16)+(e>>16)<<16|65535&e},v.prototype.bit_roll=function(a,n){return a<<n|a>>>32-n},v.prototype.md5_cmn=function(a,n,e,t,i,r){return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(n,a),this.safe_add(t,r)),i),e)},v.prototype.md5_ff=function(a,n,e,t,i,r,o){return this.md5_cmn(n&e|~n&t,a,n,i,r,o)},v.prototype.md5_gg=function(a,n,e,t,i,r,o){return this.md5_cmn(n&t|e&~t,a,n,i,r,o)},v.prototype.md5_hh=function(a,n,e,t,i,r,o){return this.md5_cmn(n^e^t,a,n,i,r,o)},v.prototype.md5_ii=function(a,n,e,t,i,r,o){return this.md5_cmn(e^(n|~t),a,n,i,r,o)},v.prototype.binl_md5=function(a,n){a[n>>5]|=128<<n%32,a[14+(n+64>>>9<<4)]=n;var e,t,i,r,o,s=1732584193,l=-271733879,c=-1732584194,p=271733878;for(e=0;e<a.length;e+=16)t=s,i=l,r=c,o=p,s=this.md5_ff(s,l,c,p,a[e],7,-680876936),p=this.md5_ff(p,s,l,c,a[e+1],12,-389564586),c=this.md5_ff(c,p,s,l,a[e+2],17,606105819),l=this.md5_ff(l,c,p,s,a[e+3],22,-1044525330),s=this.md5_ff(s,l,c,p,a[e+4],7,-176418897),p=this.md5_ff(p,s,l,c,a[e+5],12,1200080426),c=this.md5_ff(c,p,s,l,a[e+6],17,-1473231341),l=this.md5_ff(l,c,p,s,a[e+7],22,-45705983),s=this.md5_ff(s,l,c,p,a[e+8],7,1770035416),p=this.md5_ff(p,s,l,c,a[e+9],12,-1958414417),c=this.md5_ff(c,p,s,l,a[e+10],17,-42063),l=this.md5_ff(l,c,p,s,a[e+11],22,-1990404162),s=this.md5_ff(s,l,c,p,a[e+12],7,1804603682),p=this.md5_ff(p,s,l,c,a[e+13],12,-40341101),c=this.md5_ff(c,p,s,l,a[e+14],17,-1502002290),l=this.md5_ff(l,c,p,s,a[e+15],22,1236535329),s=this.md5_gg(s,l,c,p,a[e+1],5,-165796510),p=this.md5_gg(p,s,l,c,a[e+6],9,-1069501632),c=this.md5_gg(c,p,s,l,a[e+11],14,643717713),l=this.md5_gg(l,c,p,s,a[e],20,-373897302),s=this.md5_gg(s,l,c,p,a[e+5],5,-701558691),p=this.md5_gg(p,s,l,c,a[e+10],9,38016083),c=this.md5_gg(c,p,s,l,a[e+15],14,-660478335),l=this.md5_gg(l,c,p,s,a[e+4],20,-405537848),s=this.md5_gg(s,l,c,p,a[e+9],5,568446438),p=this.md5_gg(p,s,l,c,a[e+14],9,-1019803690),c=this.md5_gg(c,p,s,l,a[e+3],14,-187363961),l=this.md5_gg(l,c,p,s,a[e+8],20,1163531501),s=this.md5_gg(s,l,c,p,a[e+13],5,-1444681467),p=this.md5_gg(p,s,l,c,a[e+2],9,-51403784),c=this.md5_gg(c,p,s,l,a[e+7],14,1735328473),l=this.md5_gg(l,c,p,s,a[e+12],20,-1926607734),s=this.md5_hh(s,l,c,p,a[e+5],4,-378558),p=this.md5_hh(p,s,l,c,a[e+8],11,-2022574463),c=this.md5_hh(c,p,s,l,a[e+11],16,1839030562),l=this.md5_hh(l,c,p,s,a[e+14],23,-35309556),s=this.md5_hh(s,l,c,p,a[e+1],4,-1530992060),p=this.md5_hh(p,s,l,c,a[e+4],11,1272893353),c=this.md5_hh(c,p,s,l,a[e+7],16,-155497632),l=this.md5_hh(l,c,p,s,a[e+10],23,-1094730640),s=this.md5_hh(s,l,c,p,a[e+13],4,681279174),p=this.md5_hh(p,s,l,c,a[e],11,-358537222),c=this.md5_hh(c,p,s,l,a[e+3],16,-722521979),l=this.md5_hh(l,c,p,s,a[e+6],23,76029189),s=this.md5_hh(s,l,c,p,a[e+9],4,-640364487),p=this.md5_hh(p,s,l,c,a[e+12],11,-421815835),c=this.md5_hh(c,p,s,l,a[e+15],16,530742520),l=this.md5_hh(l,c,p,s,a[e+2],23,-995338651),s=this.md5_ii(s,l,c,p,a[e],6,-198630844),p=this.md5_ii(p,s,l,c,a[e+7],10,1126891415),c=this.md5_ii(c,p,s,l,a[e+14],15,-1416354905),l=this.md5_ii(l,c,p,s,a[e+5],21,-57434055),s=this.md5_ii(s,l,c,p,a[e+12],6,1700485571),p=this.md5_ii(p,s,l,c,a[e+3],10,-1894986606),c=this.md5_ii(c,p,s,l,a[e+10],15,-1051523),l=this.md5_ii(l,c,p,s,a[e+1],21,-2054922799),s=this.md5_ii(s,l,c,p,a[e+8],6,1873313359),p=this.md5_ii(p,s,l,c,a[e+15],10,-30611744),c=this.md5_ii(c,p,s,l,a[e+6],15,-1560198380),l=this.md5_ii(l,c,p,s,a[e+13],21,1309151649),s=this.md5_ii(s,l,c,p,a[e+4],6,-145523070),p=this.md5_ii(p,s,l,c,a[e+11],10,-1120210379),c=this.md5_ii(c,p,s,l,a[e+2],15,718787259),l=this.md5_ii(l,c,p,s,a[e+9],21,-343485551),s=this.safe_add(s,t),l=this.safe_add(l,i),c=this.safe_add(c,r),p=this.safe_add(p,o);return[s,l,c,p]},v.prototype.binl2rstr=function(a){var n,e="";for(n=0;n<32*a.length;n+=8)e+=String.fromCharCode(a[n>>5]>>>n%32&255);return e},v.prototype.rstr2binl=function(a){var n,e=[];for(e[(a.length>>2)-1]=void 0,n=0;n<e.length;n+=1)e[n]=0;for(n=0;n<8*a.length;n+=8)e[n>>5]|=(255&a.charCodeAt(n/8))<<n%32;return e},v.prototype.rstr_md5=function(a){return this.binl2rstr(this.binl_md5(this.rstr2binl(a),8*a.length))},v.prototype.rstr_hmac_md5=function(a,n){var e,t,i=this.rstr2binl(a),r=[],o=[];for(r[15]=o[15]=void 0,i.length>16&&(i=this.binl_md5(i,8*a.length)),e=0;e<16;e+=1)r[e]=909522486^i[e],o[e]=1549556828^i[e];return t=this.binl_md5(r.concat(this.rstr2binl(n)),512+8*n.length),this.binl2rstr(this.binl_md5(o.concat(t),640))},v.prototype.rstr2hex=function(a){var n,e,t="";for(e=0;e<a.length;e+=1)n=a.charCodeAt(e),t+="0123456789abcdef".charAt(n>>>4&15)+"0123456789abcdef".charAt(15&n);return t},v.prototype.str2rstr_utf8=function(a){return unescape(encodeURIComponent(a))},v.prototype.raw_md5=function(a){return this.rstr_md5(this.str2rstr_utf8(a))},v.prototype.hex_md5=function(a){return this.rstr2hex(this.raw_md5(a))},v.prototype.raw_hmac_md5=function(a,n){return this.rstr_hmac_md5(this.str2rstr_utf8(a),this.str2rstr_utf8(n))},v.prototype.hex_hmac_md5=function(a,n){return this.rstr2hex(this.raw_hmac_md5(a,n))},v.prototype.md5=function(a,n,e){return n?e?this.raw_hmac_md5(n,a):this.hex_hmac_md5(n,a):e?this.raw_md5(a):this.hex_md5(a)},void 0!==a&&a.exports&&(n=a.exports=p),n.Chance=p,void 0===(t=function(){return p}.apply(n,[]))||(a.exports=t),"undefined"!=typeof importScripts&&(chance=new p,self.Chance=p),"object"==typeof window&&"object"==typeof window.document&&(window.Chance=p,window.chance=new p)}()}).call(n,e("EuP9").Buffer)},cygF:function(a,n,e){"use strict";n.a={props:{"company-name":{type:String},"job-title":{type:String},period:{type:String}}}},dVBe:function(a,n,e){a.exports=e.p+"img/profile.a453f88.jpg"},goBd:function(a,n,e){"use strict";var t=function(){var a=this,n=a.$createElement,e=a._self._c||n;return e("div",{staticClass:"content"},[e("h3",{staticClass:"title is-4"},[a._v("\n    Projects\n  ")]),e("div",{staticClass:"is-flex"},a._l(a.projects,function(n){return e("ExperienceBlock",{key:n.name,staticClass:"project",attrs:{"company-name":n.name,period:n.decommissioned?"Decommissioned":void 0}},[n.decommissioned?a._e():e("a",{staticClass:"url",attrs:{href:n.url,target:"_blank",rel:"noopener noreferrer"}},[a._v("\n        "+a._s(n.url)+"\n      ")]),e("p",[a._v("Stacks:")]),e("ul",a._l(n.stacks,function(t){return e("li",{key:n.name+t},[a._v("\n          "+a._s(t)+"\n        ")])}))])}))])};t._withStripped=!0;var i={render:t,staticRenderFns:[]};n.a=i},hNHh:function(a,n,e){(a.exports=e("FZ+f")(!1)).push([a.i,"body{position:relative}",""])},iJOQ:function(a,n,e){"use strict";var t=function(){var a=this.$createElement,n=this._self._c||a;return n("aside",[this._m(0),n("profile-summary",{staticClass:"summary"})],1)},i=[function(){var a=this.$createElement,n=this._self._c||a;return n("div",[n("img",{attrs:{src:e("dVBe"),alt:"Afif Sohaili's photo"}}),n("h1",{staticClass:"title is-1"},[this._v("\n      Afif Sohaili\n    ")]),n("h2",{staticClass:"subtitle"},[this._v("\n      A Malaysia-based Web Developer\n    ")])])}];t._withStripped=!0;var r={render:t,staticRenderFns:i};n.a=r},lp5i:function(a,n,e){"use strict";var t=e("t8Q+"),i=e("VU/8")(null,t.a,!1,null,null,null);i.options.__file="components/ProfileSummary.vue",n.a=i.exports},nIIO:function(a,n,e){var t=e("hNHh");"string"==typeof t&&(t=[[a.i,t,""]]),t.locals&&(a.exports=t.locals);e("rjj0")("70658f1a",t,!1,{sourceMap:!1})},nZgT:function(a,n,e){(a.exports=e("FZ+f")(!1)).push([a.i,"",""])},pmzS:function(a,n,e){"use strict";var t=function(){var a=this.$createElement,n=this._self._c||a;return n("div",{staticClass:"card"},[n("div",{staticClass:"embed-container"},[n("iframe",{attrs:{src:this.url,frameborder:"0",allowfullscreen:""}})]),this._t("default")],2)};t._withStripped=!0;var i={render:t,staticRenderFns:[]};n.a=i},pqxp:function(a,n,e){(a.exports=e("FZ+f")(!1)).push([a.i,".embed-container[data-v-b53308aa]{position:relative;padding-bottom:56.25%;height:0;overflow:hidden;max-width:100%}.embed-container embed[data-v-b53308aa],.embed-container iframe[data-v-b53308aa],.embed-container object[data-v-b53308aa]{position:absolute;top:0;left:0;width:100%;height:100%}.card[data-v-b53308aa]{background:hsla(0,0%,100%,.43)}",""])},qDZa:function(a,n,e){"use strict";var t=e("UmI5"),i=e("iJOQ"),r=!1;var o=function(a){r||e("3oKH")},s=e("VU/8")(t.a,i.a,!1,o,"data-v-2e5e520e",null);s.options.__file="components/ProfileSidebar.vue",n.a=s.exports},qUq7:function(a,n,e){(a.exports=e("FZ+f")(!1)).push([a.i,".container[data-v-2a183b29]{margin-top:4rem}.resume-enter[data-v-2a183b29],.resume-leave-to[data-v-2a183b29]{opacity:0}.resume-enter-active[data-v-2a183b29],.resume-leave-active[data-v-2a183b29]{transition:opacity .7s ease-out;transition-delay:1s}.resume-enter-to[data-v-2a183b29],.resume-leave[data-v-2a183b29]{opacity:1}svg[data-v-2a183b29]{display:block;margin:0 auto}polygon[data-v-2a183b29]{fill:none;stroke:#000;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;transform-origin:center}img[data-v-2a183b29]{left:0;position:absolute;top:0;width:20%;opacity:.3}",""])},rGQh:function(a,n,e){"use strict";var t=function(){var a=this.$createElement,n=this._self._c||a;return n("div",[this.showResume?this._e():n("svg",{attrs:{viewBox:"0 0 917 1412",xmlns:"http://www.w3.org/2000/svg",width:"31%",id:"face-path"}},[n("polygon",{attrs:{points:"71,387 83,362 86,385"}}),n("polygon",{attrs:{points:"71,387 71,418 86,385"}}),n("polygon",{attrs:{points:"71,418 86,440 118,393"}}),n("polygon",{attrs:{points:"71,418 86,385 118,393"}}),n("polygon",{attrs:{points:"71,418 72,460 86,440"}}),n("polygon",{attrs:{points:"72,460 78,500 87,473"}}),n("polygon",{attrs:{points:"72,460 86,440 87,473"}}),n("polygon",{attrs:{points:"78,500 96,533 107,502"}}),n("polygon",{attrs:{points:"78,500 87,473 98,485"}}),n("polygon",{attrs:{points:"78,500 88,549 96,533"}}),n("polygon",{attrs:{points:"78,500 103,495 107,502"}}),n("polygon",{attrs:{points:"78,500 98,485 103,495"}}),n("polygon",{attrs:{points:"83,362 97,298 115,339"}}),n("polygon",{attrs:{points:"83,362 86,385 110,355"}}),n("polygon",{attrs:{points:"83,362 112,347 115,339"}}),n("polygon",{attrs:{points:"83,362 110,355 112,347"}}),n("polygon",{attrs:{points:"86,385 110,355 118,393"}}),n("polygon",{attrs:{points:"86,440 104,448 118,393"}}),n("polygon",{attrs:{points:"86,440 87,473 104,448"}}),n("polygon",{attrs:{points:"87,473 98,485 104,448"}}),n("polygon",{attrs:{points:"88,549 96,533 104,560"}}),n("polygon",{attrs:{points:"88,549 97,611 104,560"}}),n("polygon",{attrs:{points:"96,533 116,553 118,542"}}),n("polygon",{attrs:{points:"96,533 107,502 118,542"}}),n("polygon",{attrs:{points:"96,533 104,560 116,553"}}),n("polygon",{attrs:{points:"97,298 115,339 120,290"}}),n("polygon",{attrs:{points:"97,298 120,290 135,235"}}),n("polygon",{attrs:{points:"97,611 111,604 112,623"}}),n("polygon",{attrs:{points:"97,611 105,672 111,637"}}),n("polygon",{attrs:{points:"97,611 111,637 112,623"}}),n("polygon",{attrs:{points:"97,611 104,560 111,604"}}),n("polygon",{attrs:{points:"98,485 104,448 132,481"}}),n("polygon",{attrs:{points:"98,485 103,495 132,481"}}),n("polygon",{attrs:{points:"103,495 107,502 132,481"}}),n("polygon",{attrs:{points:"104,448 132,481 142,452"}}),n("polygon",{attrs:{points:"104,448 142,452 145,432"}}),n("polygon",{attrs:{points:"104,448 118,393 145,432"}}),n("polygon",{attrs:{points:"104,560 111,604 122,593"}}),n("polygon",{attrs:{points:"104,560 116,553 122,593"}}),n("polygon",{attrs:{points:"105,672 111,637 122,664"}}),n("polygon",{attrs:{points:"105,672 105,682 118,685"}}),n("polygon",{attrs:{points:"105,672 118,685 122,664"}}),n("polygon",{attrs:{points:"105,682 118,685 123,743"}}),n("polygon",{attrs:{points:"107,502 118,542 132,481"}}),n("polygon",{attrs:{points:"110,355 118,393 148,383"}}),n("polygon",{attrs:{points:"110,355 144,347 148,383"}}),n("polygon",{attrs:{points:"110,355 112,347 144,347"}}),n("polygon",{attrs:{points:"111,604 112,623 131,606"}}),n("polygon",{attrs:{points:"111,604 122,593 131,606"}}),n("polygon",{attrs:{points:"111,637 122,630 134,636"}}),n("polygon",{attrs:{points:"111,637 122,664 134,636"}}),n("polygon",{attrs:{points:"111,637 112,623 122,630"}}),n("polygon",{attrs:{points:"112,347 115,339 144,347"}}),n("polygon",{attrs:{points:"112,623 122,630 136,618"}}),n("polygon",{attrs:{points:"112,623 131,606 136,618"}}),n("polygon",{attrs:{points:"115,339 120,290 162,309"}}),n("polygon",{attrs:{points:"115,339 144,347 162,309"}}),n("polygon",{attrs:{points:"116,553 118,542 152,593"}}),n("polygon",{attrs:{points:"116,553 122,593 152,593"}}),n("polygon",{attrs:{points:"118,393 145,432 147,402"}}),n("polygon",{attrs:{points:"118,393 147,402 148,383"}}),n("polygon",{attrs:{points:"118,542 152,593 185,579"}}),n("polygon",{attrs:{points:"118,542 185,579 197,566"}}),n("polygon",{attrs:{points:"118,542 132,481 197,566"}}),n("polygon",{attrs:{points:"118,685 122,664 141,678"}}),n("polygon",{attrs:{points:"118,685 123,743 145,697"}}),n("polygon",{attrs:{points:"118,685 141,678 145,697"}}),n("polygon",{attrs:{points:"120,290 134,285 135,235"}}),n("polygon",{attrs:{points:"120,290 134,285 162,309"}}),n("polygon",{attrs:{points:"122,593 131,606 152,593"}}),n("polygon",{attrs:{points:"122,630 134,636 136,618"}}),n("polygon",{attrs:{points:"122,664 141,678 142,658"}}),n("polygon",{attrs:{points:"122,664 134,636 142,658"}}),n("polygon",{attrs:{points:"123,743 151,712 163,737"}}),n("polygon",{attrs:{points:"123,743 145,697 151,712"}}),n("polygon",{attrs:{points:"123,743 140,878 163,737"}}),n("polygon",{attrs:{points:"131,606 147,606 152,593"}}),n("polygon",{attrs:{points:"131,606 136,618 147,606"}}),n("polygon",{attrs:{points:"132,481 142,452 197,566"}}),n("polygon",{attrs:{points:"134,285 135,235 165,275"}}),n("polygon",{attrs:{points:"134,285 162,309 165,275"}}),n("polygon",{attrs:{points:"134,636 142,658 149,640"}}),n("polygon",{attrs:{points:"134,636 136,618 152,621"}}),n("polygon",{attrs:{points:"134,636 149,640 152,621"}}),n("polygon",{attrs:{points:"135,235 179,183 182,232"}}),n("polygon",{attrs:{points:"135,235 165,275 182,232"}}),n("polygon",{attrs:{points:"136,618 147,606 152,621"}}),n("polygon",{attrs:{points:"140,878 226,755 241,759"}}),n("polygon",{attrs:{points:"140,878 214,749 226,755"}}),n("polygon",{attrs:{points:"140,878 158,916 241,759"}}),n("polygon",{attrs:{points:"140,878 189,743 214,749"}}),n("polygon",{attrs:{points:"140,878 163,737 189,743"}}),n("polygon",{attrs:{points:"141,678 154,680 156,659"}}),n("polygon",{attrs:{points:"141,678 145,697 154,680"}}),n("polygon",{attrs:{points:"141,678 142,658 156,659"}}),n("polygon",{attrs:{points:"142,452 247,568 275,404"}}),n("polygon",{attrs:{points:"142,452 145,432 275,404"}}),n("polygon",{attrs:{points:"142,452 197,566 247,568"}}),n("polygon",{attrs:{points:"142,658 149,640 156,659"}}),n("polygon",{attrs:{points:"144,347 148,383 182,315"}}),n("polygon",{attrs:{points:"144,347 162,309 182,315"}}),n("polygon",{attrs:{points:"145,432 147,402 275,404"}}),n("polygon",{attrs:{points:"145,697 154,680 159,688"}}),n("polygon",{attrs:{points:"145,697 159,688 162,702"}}),n("polygon",{attrs:{points:"145,697 151,712 162,702"}}),n("polygon",{attrs:{points:"147,402 148,383 275,404"}}),n("polygon",{attrs:{points:"147,606 152,593 162,595"}}),n("polygon",{attrs:{points:"147,606 152,621 156,614"}}),n("polygon",{attrs:{points:"147,606 156,614 162,595"}}),n("polygon",{attrs:{points:"148,383 182,315 275,404"}}),n("polygon",{attrs:{points:"149,640 152,621 156,614"}}),n("polygon",{attrs:{points:"149,640 156,614 156,659"}}),n("polygon",{attrs:{points:"151,712 162,702 162,718"}}),n("polygon",{attrs:{points:"151,712 162,718 163,737"}}),n("polygon",{attrs:{points:"152,593 162,595 185,579"}}),n("polygon",{attrs:{points:"154,680 156,659 159,688"}}),n("polygon",{attrs:{points:"156,614 156,659 179,593"}}),n("polygon",{attrs:{points:"156,614 162,595 179,593"}}),n("polygon",{attrs:{points:"156,659 215,584 246,749"}}),n("polygon",{attrs:{points:"156,659 159,688 246,749"}}),n("polygon",{attrs:{points:"156,659 179,593 215,584"}}),n("polygon",{attrs:{points:"158,916 218,1069 290,962"}}),n("polygon",{attrs:{points:"158,916 241,759 290,962"}}),n("polygon",{attrs:{points:"159,688 162,702 174,720"}}),n("polygon",{attrs:{points:"159,688 174,720 246,749"}}),n("polygon",{attrs:{points:"162,309 165,275 187,284"}}),n("polygon",{attrs:{points:"162,309 182,315 187,284"}}),n("polygon",{attrs:{points:"162,595 179,593 185,579"}}),n("polygon",{attrs:{points:"162,702 162,718 174,720"}}),n("polygon",{attrs:{points:"162,718 163,737 174,720"}}),n("polygon",{attrs:{points:"163,737 174,720 181,732"}}),n("polygon",{attrs:{points:"163,737 181,732 189,743"}}),n("polygon",{attrs:{points:"165,275 182,232 187,284"}}),n("polygon",{attrs:{points:"174,720 214,749 246,749"}}),n("polygon",{attrs:{points:"174,720 181,732 214,749"}}),n("polygon",{attrs:{points:"179,183 182,232 217,231"}}),n("polygon",{attrs:{points:"179,183 215,175 229,136"}}),n("polygon",{attrs:{points:"179,183 215,175 226,188"}}),n("polygon",{attrs:{points:"179,183 217,231 226,188"}}),n("polygon",{attrs:{points:"179,593 185,579 203,579"}}),n("polygon",{attrs:{points:"179,593 203,579 215,584"}}),n("polygon",{attrs:{points:"181,732 189,743 214,749"}}),n("polygon",{attrs:{points:"182,232 213,249 217,231"}}),n("polygon",{attrs:{points:"182,232 187,284 213,249"}}),n("polygon",{attrs:{points:"182,315 265,271 275,404"}}),n("polygon",{attrs:{points:"182,315 187,284 265,271"}}),n("polygon",{attrs:{points:"185,579 197,566 203,579"}}),n("polygon",{attrs:{points:"187,284 213,249 265,271"}}),n("polygon",{attrs:{points:"197,566 203,579 214,574"}}),n("polygon",{attrs:{points:"197,566 214,574 230,574"}}),n("polygon",{attrs:{points:"197,566 230,574 247,568"}}),n("polygon",{attrs:{points:"203,579 214,574 215,584"}}),n("polygon",{attrs:{points:"213,249 217,231 275,251"}}),n("polygon",{attrs:{points:"213,249 265,271 275,251"}}),n("polygon",{attrs:{points:"214,574 215,584 230,574"}}),n("polygon",{attrs:{points:"214,749 226,755 246,749"}}),n("polygon",{attrs:{points:"215,175 226,188 229,136"}}),n("polygon",{attrs:{points:"215,584 230,574 246,577"}}),n("polygon",{attrs:{points:"215,584 246,577 277,583"}}),n("polygon",{attrs:{points:"217,231 269,198 275,251"}}),n("polygon",{attrs:{points:"217,231 226,188 269,198"}}),n("polygon",{attrs:{points:"218,1069 313,1206 336,1060"}}),n("polygon",{attrs:{points:"218,1069 290,962 336,1060"}}),n("polygon",{attrs:{points:"226,188 229,136 272,133"}}),n("polygon",{attrs:{points:"226,188 269,198 272,133"}}),n("polygon",{attrs:{points:"226,755 241,759 246,749"}}),n("polygon",{attrs:{points:"229,136 245,120 272,133"}}),n("polygon",{attrs:{points:"230,574 246,577 247,568"}}),n("polygon",{attrs:{points:"241,759 246,749 261,757"}}),n("polygon",{attrs:{points:"241,759 261,757 290,962"}}),n("polygon",{attrs:{points:"245,120 266,111 272,133"}}),n("polygon",{attrs:{points:"246,577 247,568 259,574"}}),n("polygon",{attrs:{points:"246,577 259,574 277,583"}}),n("polygon",{attrs:{points:"246,749 261,757 291,753"}}),n("polygon",{attrs:{points:"246,749 277,583 291,753"}}),n("polygon",{attrs:{points:"247,568 259,574 276,576"}}),n("polygon",{attrs:{points:"247,568 276,576 299,570"}}),n("polygon",{attrs:{points:"247,568 275,404 299,570"}}),n("polygon",{attrs:{points:"259,574 276,576 277,583"}}),n("polygon",{attrs:{points:"261,757 290,962 291,753"}}),n("polygon",{attrs:{points:"265,271 275,404 380,244"}}),n("polygon",{attrs:{points:"265,271 275,251 380,244"}}),n("polygon",{attrs:{points:"266,111 272,133 288,93"}}),n("polygon",{attrs:{points:"269,198 275,251 297,225"}}),n("polygon",{attrs:{points:"269,198 272,133 299,173"}}),n("polygon",{attrs:{points:"269,198 297,225 299,173"}}),n("polygon",{attrs:{points:"272,133 299,173 330,130"}}),n("polygon",{attrs:{points:"272,133 288,93 330,130"}}),n("polygon",{attrs:{points:"275,251 297,225 380,244"}}),n("polygon",{attrs:{points:"275,404 380,244 460,372"}}),n("polygon",{attrs:{points:"275,404 452,519 460,372"}}),n("polygon",{attrs:{points:"275,404 299,570 346,582"}}),n("polygon",{attrs:{points:"275,404 346,582 452,519"}}),n("polygon",{attrs:{points:"276,576 277,583 291,577"}}),n("polygon",{attrs:{points:"276,576 291,577 299,570"}}),n("polygon",{attrs:{points:"277,583 291,577 302,585"}}),n("polygon",{attrs:{points:"288,93 330,130 360,122"}}),n("polygon",{attrs:{points:"288,93 360,122 379,67"}}),n("polygon",{attrs:{points:"290,962 402,1026 432,1002"}}),n("polygon",{attrs:{points:"290,962 291,753 319,756"}}),n("polygon",{attrs:{points:"290,962 432,1002 474,879"}}),n("polygon",{attrs:{points:"290,962 350,1057 402,1026"}}),n("polygon",{attrs:{points:"290,962 319,756 474,879"}}),n("polygon",{attrs:{points:"290,962 336,1060 350,1057"}}),n("polygon",{attrs:{points:"291,577 299,570 302,585"}}),n("polygon",{attrs:{points:"291,753 319,746 319,756"}}),n("polygon",{attrs:{points:"291,753 302,585 319,746"}}),n("polygon",{attrs:{points:"297,225 299,173 360,192"}}),n("polygon",{attrs:{points:"297,225 360,192 380,244"}}),n("polygon",{attrs:{points:"299,173 330,130 360,192"}}),n("polygon",{attrs:{points:"299,570 310,578 327,582"}}),n("polygon",{attrs:{points:"299,570 327,582 346,582"}}),n("polygon",{attrs:{points:"299,570 302,585 310,578"}}),n("polygon",{attrs:{points:"302,585 319,746 345,591"}}),n("polygon",{attrs:{points:"302,585 310,578 327,582"}}),n("polygon",{attrs:{points:"302,585 327,582 345,591"}}),n("polygon",{attrs:{points:"313,1206 425,1262 431,1112"}}),n("polygon",{attrs:{points:"313,1206 336,1060 397,1102"}}),n("polygon",{attrs:{points:"313,1206 397,1102 431,1112"}}),n("polygon",{attrs:{points:"319,746 332,751 357,743"}}),n("polygon",{attrs:{points:"319,746 319,756 332,751"}}),n("polygon",{attrs:{points:"319,746 345,591 357,743"}}),n("polygon",{attrs:{points:"319,756 332,751 378,750"}}),n("polygon",{attrs:{points:"319,756 378,750 474,879"}}),n("polygon",{attrs:{points:"327,582 345,591 346,582"}}),n("polygon",{attrs:{points:"330,130 360,192 369,154"}}),n("polygon",{attrs:{points:"330,130 360,122 369,154"}}),n("polygon",{attrs:{points:"332,751 357,743 378,750"}}),n("polygon",{attrs:{points:"336,1060 350,1057 397,1102"}}),n("polygon",{attrs:{points:"345,591 380,601 384,591"}}),n("polygon",{attrs:{points:"345,591 357,743 379,734"}}),n("polygon",{attrs:{points:"345,591 379,734 380,601"}}),n("polygon",{attrs:{points:"345,591 346,582 384,591"}}),n("polygon",{attrs:{points:"346,582 384,591 452,519"}}),n("polygon",{attrs:{points:"350,1057 385,1052 397,1102"}}),n("polygon",{attrs:{points:"350,1057 385,1052 402,1026"}}),n("polygon",{attrs:{points:"357,743 378,750 379,734"}}),n("polygon",{attrs:{points:"360,122 369,154 413,141"}}),n("polygon",{attrs:{points:"360,122 413,141 430,91"}}),n("polygon",{attrs:{points:"360,122 379,67 430,91"}}),n("polygon",{attrs:{points:"360,192 369,154 415,200"}}),n("polygon",{attrs:{points:"360,192 380,244 415,200"}}),n("polygon",{attrs:{points:"369,154 413,141 415,200"}}),n("polygon",{attrs:{points:"378,750 379,734 396,733"}}),n("polygon",{attrs:{points:"378,750 407,741 474,879"}}),n("polygon",{attrs:{points:"378,750 396,733 407,741"}}),n("polygon",{attrs:{points:"379,734 404,719 423,667"}}),n("polygon",{attrs:{points:"379,734 396,733 404,719"}}),n("polygon",{attrs:{points:"379,734 380,601 423,667"}}),n("polygon",{attrs:{points:"380,244 415,200 467,237"}}),n("polygon",{attrs:{points:"380,244 460,372 467,237"}}),n("polygon",{attrs:{points:"380,601 396,602 401,608"}}),n("polygon",{attrs:{points:"380,601 384,591 396,602"}}),n("polygon",{attrs:{points:"380,601 409,618 414,630"}}),n("polygon",{attrs:{points:"380,601 414,630 423,667"}}),n("polygon",{attrs:{points:"380,601 401,608 409,618"}}),n("polygon",{attrs:{points:"384,591 396,602 408,599"}}),n("polygon",{attrs:{points:"384,591 408,599 452,519"}}),n("polygon",{attrs:{points:"385,1052 397,1052 402,1026"}}),n("polygon",{attrs:{points:"385,1052 397,1052 397,1102"}}),n("polygon",{attrs:{points:"396,602 401,608 408,599"}}),n("polygon",{attrs:{points:"396,733 410,723 414,731"}}),n("polygon",{attrs:{points:"396,733 407,741 414,731"}}),n("polygon",{attrs:{points:"396,733 404,719 410,723"}}),n("polygon",{attrs:{points:"397,1052 402,1026 415,1047"}}),n("polygon",{attrs:{points:"397,1052 397,1102 423,1050"}}),n("polygon",{attrs:{points:"397,1052 415,1047 423,1050"}}),n("polygon",{attrs:{points:"397,1102 423,1050 431,1112"}}),n("polygon",{attrs:{points:"401,608 408,599 409,618"}}),n("polygon",{attrs:{points:"402,1026 415,1047 432,1002"}}),n("polygon",{attrs:{points:"404,719 411,715 426,686"}}),n("polygon",{attrs:{points:"404,719 410,723 411,715"}}),n("polygon",{attrs:{points:"404,719 423,667 426,686"}}),n("polygon",{attrs:{points:"407,741 474,879 530,791"}}),n("polygon",{attrs:{points:"407,741 414,731 525,752"}}),n("polygon",{attrs:{points:"407,741 525,752 530,791"}}),n("polygon",{attrs:{points:"408,599 409,618 419,601"}}),n("polygon",{attrs:{points:"408,599 419,601 452,519"}}),n("polygon",{attrs:{points:"409,618 414,630 418,618"}}),n("polygon",{attrs:{points:"409,618 418,618 419,601"}}),n("polygon",{attrs:{points:"410,723 411,715 430,710"}}),n("polygon",{attrs:{points:"410,723 414,731 430,710"}}),n("polygon",{attrs:{points:"411,715 422,703 430,710"}}),n("polygon",{attrs:{points:"411,715 422,703 426,686"}}),n("polygon",{attrs:{points:"413,141 459,103 477,116"}}),n("polygon",{attrs:{points:"413,141 466,180 477,116"}}),n("polygon",{attrs:{points:"413,141 430,91 459,103"}}),n("polygon",{attrs:{points:"413,141 415,200 466,180"}}),n("polygon",{attrs:{points:"414,630 423,641 429,618"}}),n("polygon",{attrs:{points:"414,630 418,618 429,618"}}),n("polygon",{attrs:{points:"414,630 423,641 423,667"}}),n("polygon",{attrs:{points:"414,731 430,710 525,752"}}),n("polygon",{attrs:{points:"415,200 466,180 467,237"}}),n("polygon",{attrs:{points:"415,1047 423,1050 432,1002"}}),n("polygon",{attrs:{points:"418,618 419,601 429,618"}}),n("polygon",{attrs:{points:"419,601 442,610 452,519"}}),n("polygon",{attrs:{points:"419,601 429,618 442,610"}}),n("polygon",{attrs:{points:"422,703 426,686 430,710"}}),n("polygon",{attrs:{points:"423,641 436,658 440,626"}}),n("polygon",{attrs:{points:"423,641 429,618 440,626"}}),n("polygon",{attrs:{points:"423,641 423,667 436,658"}}),n("polygon",{attrs:{points:"423,667 426,686 439,673"}}),n("polygon",{attrs:{points:"423,667 436,658 439,673"}}),n("polygon",{attrs:{points:"423,1050 432,1002 444,1046"}}),n("polygon",{attrs:{points:"423,1050 439,1052 444,1046"}}),n("polygon",{attrs:{points:"423,1050 431,1112 439,1052"}}),n("polygon",{attrs:{points:"425,1262 458,1115 471,1120"}}),n("polygon",{attrs:{points:"425,1262 471,1120 500,1270"}}),n("polygon",{attrs:{points:"425,1262 431,1112 458,1115"}}),n("polygon",{attrs:{points:"426,686 430,710 439,673"}}),n("polygon",{attrs:{points:"429,618 440,626 442,610"}}),n("polygon",{attrs:{points:"430,91 440,90 459,103"}}),n("polygon",{attrs:{points:"430,710 505,697 514,709"}}),n("polygon",{attrs:{points:"430,710 514,709 525,752"}}),n("polygon",{attrs:{points:"430,710 499,681 505,697"}}),n("polygon",{attrs:{points:"430,710 439,673 499,681"}}),n("polygon",{attrs:{points:"431,1112 439,1052 454,1053"}}),n("polygon",{attrs:{points:"431,1112 454,1053 458,1115"}}),n("polygon",{attrs:{points:"432,1002 444,1046 467,1003"}}),n("polygon",{attrs:{points:"432,1002 456,995 474,879"}}),n("polygon",{attrs:{points:"432,1002 456,995 467,1003"}}),n("polygon",{attrs:{points:"436,658 439,673 450,655"}}),n("polygon",{attrs:{points:"436,658 440,626 450,655"}}),n("polygon",{attrs:{points:"439,673 475,657 499,681"}}),n("polygon",{attrs:{points:"439,673 450,655 475,657"}}),n("polygon",{attrs:{points:"439,1052 444,1046 454,1053"}}),n("polygon",{attrs:{points:"440,626 450,655 459,632"}}),n("polygon",{attrs:{points:"440,626 442,610 454,619"}}),n("polygon",{attrs:{points:"440,626 454,619 459,632"}}),n("polygon",{attrs:{points:"442,610 452,519 475,614"}}),n("polygon",{attrs:{points:"442,610 454,619 475,614"}}),n("polygon",{attrs:{points:"444,1046 454,1053 462,1051"}}),n("polygon",{attrs:{points:"444,1046 462,1051 473,1007"}}),n("polygon",{attrs:{points:"444,1046 467,1003 473,1007"}}),n("polygon",{attrs:{points:"450,655 459,632 473,635"}}),n("polygon",{attrs:{points:"450,655 473,635 475,657"}}),n("polygon",{attrs:{points:"452,519 565,590 579,372"}}),n("polygon",{attrs:{points:"452,519 507,612 565,590"}}),n("polygon",{attrs:{points:"452,519 475,614 507,612"}}),n("polygon",{attrs:{points:"452,519 460,372 579,372"}}),n("polygon",{attrs:{points:"454,619 459,632 475,614"}}),n("polygon",{attrs:{points:"454,1053 462,1051 471,1058"}}),n("polygon",{attrs:{points:"454,1053 458,1115 471,1058"}}),n("polygon",{attrs:{points:"456,995 467,1003 500,996"}}),n("polygon",{attrs:{points:"456,995 500,915 500,996"}}),n("polygon",{attrs:{points:"456,995 474,879 500,915"}}),n("polygon",{attrs:{points:"458,1115 471,1058 471,1113"}}),n("polygon",{attrs:{points:"458,1115 471,1113 471,1120"}}),n("polygon",{attrs:{points:"459,103 477,116 506,95"}}),n("polygon",{attrs:{points:"459,632 473,635 475,614"}}),n("polygon",{attrs:{points:"460,372 467,237 530,239"}}),n("polygon",{attrs:{points:"460,372 530,239 579,372"}}),n("polygon",{attrs:{points:"462,1051 471,1058 478,1054"}}),n("polygon",{attrs:{points:"462,1051 473,1007 478,1054"}}),n("polygon",{attrs:{points:"466,180 477,116 503,180"}}),n("polygon",{attrs:{points:"466,180 467,237 503,180"}}),n("polygon",{attrs:{points:"467,237 503,180 530,239"}}),n("polygon",{attrs:{points:"467,1003 473,1007 500,996"}}),n("polygon",{attrs:{points:"471,1058 478,1054 485,1058"}}),n("polygon",{attrs:{points:"471,1058 485,1058 485,1110"}}),n("polygon",{attrs:{points:"471,1058 471,1113 485,1110"}}),n("polygon",{attrs:{points:"471,1113 471,1120 485,1110"}}),n("polygon",{attrs:{points:"471,1120 485,1110 491,1119"}}),n("polygon",{attrs:{points:"471,1120 491,1119 500,1270"}}),n("polygon",{attrs:{points:"473,635 475,614 489,631"}}),n("polygon",{attrs:{points:"473,635 489,631 493,643"}}),n("polygon",{attrs:{points:"473,635 475,657 493,643"}}),n("polygon",{attrs:{points:"473,1007 478,1054 499,1053"}}),n("polygon",{attrs:{points:"473,1007 499,1053 500,996"}}),n("polygon",{attrs:{points:"474,879 553,827 563,854"}}),n("polygon",{attrs:{points:"474,879 528,904 563,854"}}),n("polygon",{attrs:{points:"474,879 530,791 553,827"}}),n("polygon",{attrs:{points:"474,879 500,915 514,906"}}),n("polygon",{attrs:{points:"474,879 514,906 528,904"}}),n("polygon",{attrs:{points:"475,614 489,631 498,619"}}),n("polygon",{attrs:{points:"475,614 498,619 507,612"}}),n("polygon",{attrs:{points:"475,657 488,658 493,643"}}),n("polygon",{attrs:{points:"475,657 488,658 499,681"}}),n("polygon",{attrs:{points:"477,116 503,180 513,125"}}),n("polygon",{attrs:{points:"477,116 506,95 513,125"}}),n("polygon",{attrs:{points:"478,1054 485,1058 499,1053"}}),n("polygon",{attrs:{points:"485,1058 497,1060 499,1053"}}),n("polygon",{attrs:{points:"485,1058 485,1110 497,1060"}}),n("polygon",{attrs:{points:"485,1110 491,1119 504,1113"}}),n("polygon",{attrs:{points:"485,1110 497,1060 516,1106"}}),n("polygon",{attrs:{points:"485,1110 504,1113 516,1106"}}),n("polygon",{attrs:{points:"488,658 497,663 499,681"}}),n("polygon",{attrs:{points:"488,658 497,663 502,647"}}),n("polygon",{attrs:{points:"488,658 493,643 502,647"}}),n("polygon",{attrs:{points:"489,631 498,619 505,630"}}),n("polygon",{attrs:{points:"489,631 493,643 505,630"}}),n("polygon",{attrs:{points:"491,1119 500,1270 523,1116"}}),n("polygon",{attrs:{points:"491,1119 504,1113 523,1116"}}),n("polygon",{attrs:{points:"493,643 502,647 505,630"}}),n("polygon",{attrs:{points:"497,663 499,681 507,665"}}),n("polygon",{attrs:{points:"497,663 502,647 507,665"}}),n("polygon",{attrs:{points:"497,1060 512,1057 516,1106"}}),n("polygon",{attrs:{points:"497,1060 499,1053 512,1057"}}),n("polygon",{attrs:{points:"498,619 505,630 507,612"}}),n("polygon",{attrs:{points:"499,681 505,697 511,687"}}),n("polygon",{attrs:{points:"499,681 511,687 512,679"}}),n("polygon",{attrs:{points:"499,681 507,665 512,679"}}),n("polygon",{attrs:{points:"499,1053 500,996 516,1050"}}),n("polygon",{attrs:{points:"499,1053 512,1057 516,1050"}}),n("polygon",{attrs:{points:"500,915 514,906 520,913"}}),n("polygon",{attrs:{points:"500,915 500,996 520,913"}}),n("polygon",{attrs:{points:"500,996 520,913 520,1001"}}),n("polygon",{attrs:{points:"500,996 516,1050 520,1001"}}),n("polygon",{attrs:{points:"500,1270 523,1116 589,1233"}}),n("polygon",{attrs:{points:"502,647 505,630 515,639"}}),n("polygon",{attrs:{points:"502,647 507,665 515,656"}}),n("polygon",{attrs:{points:"502,647 515,639 515,656"}}),n("polygon",{attrs:{points:"503,180 530,162 543,191"}}),n("polygon",{attrs:{points:"503,180 530,239 543,191"}}),n("polygon",{attrs:{points:"503,180 513,125 530,162"}}),n("polygon",{attrs:{points:"504,1113 516,1106 523,1116"}}),n("polygon",{attrs:{points:"505,630 507,612 522,619"}}),n("polygon",{attrs:{points:"505,630 515,639 522,619"}}),n("polygon",{attrs:{points:"505,697 514,709 524,703"}}),n("polygon",{attrs:{points:"505,697 511,687 524,703"}}),n("polygon",{attrs:{points:"506,95 513,125 536,89"}}),n("polygon",{attrs:{points:"507,612 522,619 551,603"}}),n("polygon",{attrs:{points:"507,612 551,603 565,590"}}),n("polygon",{attrs:{points:"507,665 512,679 515,656"}}),n("polygon",{attrs:{points:"511,687 512,679 524,703"}}),n("polygon",{attrs:{points:"512,679 515,656 524,643"}}),n("polygon",{attrs:{points:"512,679 524,703 540,712"}}),n("polygon",{attrs:{points:"512,679 524,643 540,712"}}),n("polygon",{attrs:{points:"512,1057 516,1106 525,1057"}}),n("polygon",{attrs:{points:"512,1057 516,1050 525,1057"}}),n("polygon",{attrs:{points:"513,125 536,89 566,132"}}),n("polygon",{attrs:{points:"513,125 530,162 566,132"}}),n("polygon",{attrs:{points:"514,709 525,752 533,721"}}),n("polygon",{attrs:{points:"514,709 524,703 533,721"}}),n("polygon",{attrs:{points:"514,906 520,913 528,904"}}),n("polygon",{attrs:{points:"515,639 515,656 524,643"}}),n("polygon",{attrs:{points:"515,639 524,643 527,628"}}),n("polygon",{attrs:{points:"515,639 522,619 527,628"}}),n("polygon",{attrs:{points:"516,1050 520,1001 533,1010"}}),n("polygon",{attrs:{points:"516,1050 533,1010 533,1048"}}),n("polygon",{attrs:{points:"516,1050 525,1057 533,1048"}}),n("polygon",{attrs:{points:"516,1106 523,1116 531,1106"}}),n("polygon",{attrs:{points:"516,1106 525,1057 531,1106"}}),n("polygon",{attrs:{points:"520,913 532,913 547,919"}}),n("polygon",{attrs:{points:"520,913 528,904 532,913"}}),n("polygon",{attrs:{points:"520,913 520,1001 547,919"}}),n("polygon",{attrs:{points:"520,1001 533,1010 568,1007"}}),n("polygon",{attrs:{points:"520,1001 547,919 563,923"}}),n("polygon",{attrs:{points:"520,1001 563,923 568,1007"}}),n("polygon",{attrs:{points:"522,619 527,628 546,612"}}),n("polygon",{attrs:{points:"522,619 546,612 551,603"}}),n("polygon",{attrs:{points:"523,1116 537,1107 554,1108"}}),n("polygon",{attrs:{points:"523,1116 531,1106 537,1107"}}),n("polygon",{attrs:{points:"523,1116 554,1108 589,1233"}}),n("polygon",{attrs:{points:"524,643 546,612 583,599"}}),n("polygon",{attrs:{points:"524,643 540,712 583,599"}}),n("polygon",{attrs:{points:"524,643 527,628 546,612"}}),n("polygon",{attrs:{points:"524,703 533,721 540,712"}}),n("polygon",{attrs:{points:"525,752 530,791 544,744"}}),n("polygon",{attrs:{points:"525,752 538,739 544,744"}}),n("polygon",{attrs:{points:"525,752 533,721 538,739"}}),n("polygon",{attrs:{points:"525,1057 533,1048 539,1056"}}),n("polygon",{attrs:{points:"525,1057 531,1106 539,1056"}}),n("polygon",{attrs:{points:"528,904 532,913 544,906"}}),n("polygon",{attrs:{points:"528,904 544,906 563,854"}}),n("polygon",{attrs:{points:"530,162 543,191 576,165"}}),n("polygon",{attrs:{points:"530,162 566,132 576,165"}}),n("polygon",{attrs:{points:"530,239 599,191 616,205"}}),n("polygon",{attrs:{points:"530,239 543,191 599,191"}}),n("polygon",{attrs:{points:"530,239 579,372 623,252"}}),n("polygon",{attrs:{points:"530,239 616,205 623,252"}}),n("polygon",{attrs:{points:"530,791 544,744 575,754"}}),n("polygon",{attrs:{points:"530,791 553,827 575,754"}}),n("polygon",{attrs:{points:"531,1106 537,1107 539,1056"}}),n("polygon",{attrs:{points:"532,913 544,906 547,919"}}),n("polygon",{attrs:{points:"533,721 540,712 545,726"}}),n("polygon",{attrs:{points:"533,721 538,739 545,726"}}),n("polygon",{attrs:{points:"533,1010 533,1048 558,1026"}}),n("polygon",{attrs:{points:"533,1010 558,1026 568,1007"}}),n("polygon",{attrs:{points:"533,1048 539,1056 553,1051"}}),n("polygon",{attrs:{points:"533,1048 553,1051 558,1026"}}),n("polygon",{attrs:{points:"536,89 566,132 613,87"}}),n("polygon",{attrs:{points:"537,1107 539,1056 552,1059"}}),n("polygon",{attrs:{points:"537,1107 552,1059 562,1098"}}),n("polygon",{attrs:{points:"537,1107 554,1108 562,1098"}}),n("polygon",{attrs:{points:"538,739 544,744 553,735"}}),n("polygon",{attrs:{points:"538,739 545,726 553,735"}}),n("polygon",{attrs:{points:"539,1056 552,1059 553,1051"}}),n("polygon",{attrs:{points:"540,712 545,726 566,738"}}),n("polygon",{attrs:{points:"540,712 566,738 597,747"}}),n("polygon",{attrs:{points:"540,712 583,599 597,747"}}),n("polygon",{attrs:{points:"543,191 576,165 599,191"}}),n("polygon",{attrs:{points:"544,744 566,738 575,754"}}),n("polygon",{attrs:{points:"544,744 553,735 566,738"}}),n("polygon",{attrs:{points:"544,906 563,854 577,869"}}),n("polygon",{attrs:{points:"544,906 577,869 582,896"}}),n("polygon",{attrs:{points:"544,906 559,915 582,896"}}),n("polygon",{attrs:{points:"544,906 547,919 559,915"}}),n("polygon",{attrs:{points:"545,726 553,735 566,738"}}),n("polygon",{attrs:{points:"546,612 551,603 564,600"}}),n("polygon",{attrs:{points:"546,612 564,600 583,599"}}),n("polygon",{attrs:{points:"547,919 559,915 563,923"}}),n("polygon",{attrs:{points:"551,603 564,600 565,590"}}),n("polygon",{attrs:{points:"552,1059 566,1054 573,1061"}}),n("polygon",{attrs:{points:"552,1059 553,1051 566,1054"}}),n("polygon",{attrs:{points:"552,1059 566,1092 573,1061"}}),n("polygon",{attrs:{points:"552,1059 562,1098 566,1092"}}),n("polygon",{attrs:{points:"553,827 575,754 623,754"}}),n("polygon",{attrs:{points:"553,827 563,854 577,869"}}),n("polygon",{attrs:{points:"553,827 577,869 623,754"}}),n("polygon",{attrs:{points:"553,1051 558,1026 566,1054"}}),n("polygon",{attrs:{points:"554,1108 562,1098 577,1094"}}),n("polygon",{attrs:{points:"554,1108 589,1233 662,1163"}}),n("polygon",{attrs:{points:"554,1108 577,1094 662,1163"}}),n("polygon",{attrs:{points:"558,1026 568,1007 581,1043"}}),n("polygon",{attrs:{points:"558,1026 566,1054 581,1043"}}),n("polygon",{attrs:{points:"559,915 581,905 582,896"}}),n("polygon",{attrs:{points:"559,915 573,914 581,905"}}),n("polygon",{attrs:{points:"559,915 563,923 573,914"}}),n("polygon",{attrs:{points:"562,1098 566,1092 577,1094"}}),n("polygon",{attrs:{points:"563,923 573,914 583,913"}}),n("polygon",{attrs:{points:"563,923 568,1007 583,913"}}),n("polygon",{attrs:{points:"564,600 565,590 583,599"}}),n("polygon",{attrs:{points:"565,590 583,599 606,591"}}),n("polygon",{attrs:{points:"565,590 579,372 606,591"}}),n("polygon",{attrs:{points:"566,132 576,165 601,128"}}),n("polygon",{attrs:{points:"566,132 601,128 613,87"}}),n("polygon",{attrs:{points:"566,738 575,754 582,747"}}),n("polygon",{attrs:{points:"566,738 582,747 597,747"}}),n("polygon",{attrs:{points:"566,1054 573,1061 581,1043"}}),n("polygon",{attrs:{points:"566,1092 573,1061 581,1086"}}),n("polygon",{attrs:{points:"566,1092 577,1094 581,1086"}}),n("polygon",{attrs:{points:"568,1007 581,1043 637,1017"}}),n("polygon",{attrs:{points:"568,1007 583,913 637,1017"}}),n("polygon",{attrs:{points:"573,914 581,905 583,913"}}),n("polygon",{attrs:{points:"573,1061 586,1057 592,1060"}}),n("polygon",{attrs:{points:"573,1061 581,1086 592,1060"}}),n("polygon",{attrs:{points:"573,1061 581,1043 586,1057"}}),n("polygon",{attrs:{points:"575,754 597,747 623,754"}}),n("polygon",{attrs:{points:"575,754 582,747 597,747"}}),n("polygon",{attrs:{points:"576,165 601,128 629,173"}}),n("polygon",{attrs:{points:"576,165 599,191 629,173"}}),n("polygon",{attrs:{points:"577,869 623,754 654,759"}}),n("polygon",{attrs:{points:"577,869 582,896 589,889"}}),n("polygon",{attrs:{points:"577,869 589,889 654,759"}}),n("polygon",{attrs:{points:"577,1094 581,1086 588,1088"}}),n("polygon",{attrs:{points:"577,1094 588,1088 662,1163"}}),n("polygon",{attrs:{points:"579,372 700,300 738,366"}}),n("polygon",{attrs:{points:"579,372 738,366 756,425"}}),n("polygon",{attrs:{points:"579,372 746,479 756,425"}}),n("polygon",{attrs:{points:"579,372 623,252 700,300"}}),n("polygon",{attrs:{points:"579,372 606,591 644,583"}}),n("polygon",{attrs:{points:"579,372 644,583 746,479"}}),n("polygon",{attrs:{points:"581,905 582,896 589,889"}}),n("polygon",{attrs:{points:"581,905 583,913 589,889"}}),n("polygon",{attrs:{points:"581,1043 597,1052 637,1017"}}),n("polygon",{attrs:{points:"581,1043 586,1057 597,1052"}}),n("polygon",{attrs:{points:"581,1086 588,1088 598,1072"}}),n("polygon",{attrs:{points:"581,1086 592,1060 598,1072"}}),n("polygon",{attrs:{points:"583,599 606,591 615,595"}}),n("polygon",{attrs:{points:"583,599 597,747 615,595"}}),n("polygon",{attrs:{points:"583,913 589,889 751,978"}}),n("polygon",{attrs:{points:"583,913 637,1017 751,978"}}),n("polygon",{attrs:{points:"586,1057 592,1060 597,1052"}}),n("polygon",{attrs:{points:"588,1088 610,1070 662,1163"}}),n("polygon",{attrs:{points:"588,1088 598,1072 610,1070"}}),n("polygon",{attrs:{points:"589,889 764,833 781,899"}}),n("polygon",{attrs:{points:"589,889 673,761 764,833"}}),n("polygon",{attrs:{points:"589,889 654,759 673,761"}}),n("polygon",{attrs:{points:"589,889 751,978 781,899"}}),n("polygon",{attrs:{points:"592,1060 597,1052 601,1059"}}),n("polygon",{attrs:{points:"592,1060 598,1072 601,1059"}}),n("polygon",{attrs:{points:"597,747 615,595 702,644"}}),n("polygon",{attrs:{points:"597,747 623,754 702,644"}}),n("polygon",{attrs:{points:"597,1052 601,1059 610,1056"}}),n("polygon",{attrs:{points:"597,1052 610,1056 637,1017"}}),n("polygon",{attrs:{points:"598,1072 601,1059 610,1070"}}),n("polygon",{attrs:{points:"599,191 616,205 629,173"}}),n("polygon",{attrs:{points:"601,128 629,173 648,128"}}),n("polygon",{attrs:{points:"601,128 613,87 648,128"}}),n("polygon",{attrs:{points:"601,1059 610,1056 610,1070"}}),n("polygon",{attrs:{points:"606,591 615,595 629,592"}}),n("polygon",{attrs:{points:"606,591 629,592 644,583"}}),n("polygon",{attrs:{points:"610,1056 610,1070 624,1054"}}),n("polygon",{attrs:{points:"610,1056 624,1054 637,1017"}}),n("polygon",{attrs:{points:"610,1070 624,1054 662,1163"}}),n("polygon",{attrs:{points:"613,87 648,128 671,103"}}),n("polygon",{attrs:{points:"615,595 629,592 702,644"}}),n("polygon",{attrs:{points:"616,205 629,173 649,197"}}),n("polygon",{attrs:{points:"616,205 623,252 649,197"}}),n("polygon",{attrs:{points:"623,252 649,197 668,242"}}),n("polygon",{attrs:{points:"623,252 668,242 700,300"}}),n("polygon",{attrs:{points:"623,754 641,754 702,644"}}),n("polygon",{attrs:{points:"623,754 641,754 654,759"}}),n("polygon",{attrs:{points:"624,1054 637,1017 716,1070"}}),n("polygon",{attrs:{points:"624,1054 662,1163 716,1070"}}),n("polygon",{attrs:{points:"629,173 649,197 662,155"}}),n("polygon",{attrs:{points:"629,173 648,128 662,155"}}),n("polygon",{attrs:{points:"629,592 656,587 702,644"}}),n("polygon",{attrs:{points:"629,592 644,583 656,587"}}),n("polygon",{attrs:{points:"637,1017 716,1070 751,978"}}),n("polygon",{attrs:{points:"641,754 654,759 684,754"}}),n("polygon",{attrs:{points:"641,754 684,754 702,644"}}),n("polygon",{attrs:{points:"644,583 677,581 746,479"}}),n("polygon",{attrs:{points:"644,583 656,587 677,581"}}),n("polygon",{attrs:{points:"648,128 662,155 696,136"}}),n("polygon",{attrs:{points:"648,128 671,103 696,136"}}),n("polygon",{attrs:{points:"649,197 682,165 692,199"}}),n("polygon",{attrs:{points:"649,197 662,155 682,165"}}),n("polygon",{attrs:{points:"649,197 668,242 692,199"}}),n("polygon",{attrs:{points:"654,759 673,761 684,754"}}),n("polygon",{attrs:{points:"656,587 678,591 702,644"}}),n("polygon",{attrs:{points:"656,587 677,581 678,591"}}),n("polygon",{attrs:{points:"662,155 682,165 696,136"}}),n("polygon",{attrs:{points:"668,242 700,300 711,264"}}),n("polygon",{attrs:{points:"668,242 711,264 724,221"}}),n("polygon",{attrs:{points:"668,242 692,199 724,221"}}),n("polygon",{attrs:{points:"673,761 684,754 700,758"}}),n("polygon",{attrs:{points:"673,761 700,758 764,833"}}),n("polygon",{attrs:{points:"677,581 695,581 746,479"}}),n("polygon",{attrs:{points:"677,581 678,591 694,590"}}),n("polygon",{attrs:{points:"677,581 694,590 695,581"}}),n("polygon",{attrs:{points:"678,591 694,590 702,644"}}),n("polygon",{attrs:{points:"682,165 696,136 719,152"}}),n("polygon",{attrs:{points:"682,165 719,152 726,193"}}),n("polygon",{attrs:{points:"682,165 692,199 726,193"}}),n("polygon",{attrs:{points:"684,754 700,758 707,751"}}),n("polygon",{attrs:{points:"684,754 702,644 707,751"}}),n("polygon",{attrs:{points:"692,199 724,221 726,193"}}),n("polygon",{attrs:{points:"694,590 701,584 721,591"}}),n("polygon",{attrs:{points:"694,590 695,581 701,584"}}),n("polygon",{attrs:{points:"694,590 702,644 721,591"}}),n("polygon",{attrs:{points:"695,581 719,584 746,479"}}),n("polygon",{attrs:{points:"695,581 701,584 719,584"}}),n("polygon",{attrs:{points:"700,300 738,366 754,296"}}),n("polygon",{attrs:{points:"700,300 711,264 754,296"}}),n("polygon",{attrs:{points:"700,758 731,757 764,833"}}),n("polygon",{attrs:{points:"700,758 707,751 720,753"}}),n("polygon",{attrs:{points:"700,758 720,753 731,757"}}),n("polygon",{attrs:{points:"701,584 719,584 721,591"}}),n("polygon",{attrs:{points:"702,644 755,602 790,654"}}),n("polygon",{attrs:{points:"702,644 732,747 764,736"}}),n("polygon",{attrs:{points:"702,644 764,736 787,688"}}),n("polygon",{attrs:{points:"702,644 787,688 790,654"}}),n("polygon",{attrs:{points:"702,644 742,596 755,602"}}),n("polygon",{attrs:{points:"702,644 721,591 742,596"}}),n("polygon",{attrs:{points:"702,644 707,751 732,747"}}),n("polygon",{attrs:{points:"707,751 720,753 732,747"}}),n("polygon",{attrs:{points:"711,264 744,254 754,296"}}),n("polygon",{attrs:{points:"711,264 724,221 744,254"}}),n("polygon",{attrs:{points:"719,152 726,193 762,201"}}),n("polygon",{attrs:{points:"719,584 721,591 746,588"}}),n("polygon",{attrs:{points:"719,584 746,479 790,538"}}),n("polygon",{attrs:{points:"719,584 746,588 790,538"}}),n("polygon",{attrs:{points:"720,753 731,757 732,747"}}),n("polygon",{attrs:{points:"721,591 742,596 746,588"}}),n("polygon",{attrs:{points:"724,221 744,254 762,201"}}),n("polygon",{attrs:{points:"724,221 726,193 762,201"}}),n("polygon",{attrs:{points:"731,757 747,747 770,748"}}),n("polygon",{attrs:{points:"731,757 770,748 798,784"}}),n("polygon",{attrs:{points:"731,757 732,747 747,747"}}),n("polygon",{attrs:{points:"731,757 764,833 798,784"}}),n("polygon",{attrs:{points:"732,747 747,747 764,736"}}),n("polygon",{attrs:{points:"738,366 774,367 775,338"}}),n("polygon",{attrs:{points:"738,366 754,296 775,338"}}),n("polygon",{attrs:{points:"738,366 756,425 774,367"}}),n("polygon",{attrs:{points:"742,596 746,588 755,602"}}),n("polygon",{attrs:{points:"744,254 762,201 780,267"}}),n("polygon",{attrs:{points:"744,254 754,296 780,267"}}),n("polygon",{attrs:{points:"746,479 756,425 765,453"}}),n("polygon",{attrs:{points:"746,479 770,486 790,538"}}),n("polygon",{attrs:{points:"746,479 765,453 770,486"}}),n("polygon",{attrs:{points:"746,588 763,593 790,538"}}),n("polygon",{attrs:{points:"746,588 755,602 763,593"}}),n("polygon",{attrs:{points:"747,747 765,742 770,748"}}),n("polygon",{attrs:{points:"747,747 764,736 765,742"}}),n("polygon",{attrs:{points:"754,296 780,267 802,302"}}),n("polygon",{attrs:{points:"754,296 775,338 802,302"}}),n("polygon",{attrs:{points:"755,602 763,593 772,592"}}),n("polygon",{attrs:{points:"755,602 772,592 784,604"}}),n("polygon",{attrs:{points:"755,602 784,604 787,615"}}),n("polygon",{attrs:{points:"755,602 787,615 791,633"}}),n("polygon",{attrs:{points:"755,602 790,654 791,633"}}),n("polygon",{attrs:{points:"756,425 765,453 783,432"}}),n("polygon",{attrs:{points:"756,425 774,367 800,380"}}),n("polygon",{attrs:{points:"756,425 783,432 800,380"}}),n("polygon",{attrs:{points:"762,201 780,267 829,272"}}),n("polygon",{attrs:{points:"763,593 772,592 790,538"}}),n("polygon",{attrs:{points:"764,736 784,710 787,688"}}),n("polygon",{attrs:{points:"764,736 765,742 776,731"}}),n("polygon",{attrs:{points:"764,736 776,731 784,710"}}),n("polygon",{attrs:{points:"764,833 781,899 798,784"}}),n("polygon",{attrs:{points:"765,453 770,486 799,477"}}),n("polygon",{attrs:{points:"765,453 783,432 799,477"}}),n("polygon",{attrs:{points:"765,742 770,748 776,731"}}),n("polygon",{attrs:{points:"770,486 790,538 814,524"}}),n("polygon",{attrs:{points:"770,486 799,477 814,524"}}),n("polygon",{attrs:{points:"770,748 776,731 788,726"}}),n("polygon",{attrs:{points:"770,748 788,726 805,762"}}),n("polygon",{attrs:{points:"770,748 798,784 805,762"}}),n("polygon",{attrs:{points:"772,592 798,571 799,600"}}),n("polygon",{attrs:{points:"772,592 790,538 798,571"}}),n("polygon",{attrs:{points:"772,592 784,604 799,600"}}),n("polygon",{attrs:{points:"774,367 775,338 803,357"}}),n("polygon",{attrs:{points:"774,367 800,380 803,357"}}),n("polygon",{attrs:{points:"775,338 802,302 811,314"}}),n("polygon",{attrs:{points:"775,338 803,357 811,314"}}),n("polygon",{attrs:{points:"776,731 784,710 788,726"}}),n("polygon",{attrs:{points:"780,267 802,302 829,272"}}),n("polygon",{attrs:{points:"783,432 799,477 800,426"}}),n("polygon",{attrs:{points:"783,432 800,380 800,426"}}),n("polygon",{attrs:{points:"784,604 787,615 798,607"}}),n("polygon",{attrs:{points:"784,604 798,607 799,600"}}),n("polygon",{attrs:{points:"784,710 788,726 802,709"}}),n("polygon",{attrs:{points:"784,710 794,691 802,709"}}),n("polygon",{attrs:{points:"784,710 787,688 794,691"}}),n("polygon",{attrs:{points:"787,615 791,633 798,622"}}),n("polygon",{attrs:{points:"787,615 798,607 799,614"}}),n("polygon",{attrs:{points:"787,615 798,622 799,614"}}),n("polygon",{attrs:{points:"787,688 790,654 793,675"}}),n("polygon",{attrs:{points:"787,688 793,675 794,691"}}),n("polygon",{attrs:{points:"788,726 802,709 805,762"}}),n("polygon",{attrs:{points:"790,538 814,524 817,573"}}),n("polygon",{attrs:{points:"790,538 798,571 817,573"}}),n("polygon",{attrs:{points:"790,654 793,675 800,665"}}),n("polygon",{attrs:{points:"790,654 791,633 800,643"}}),n("polygon",{attrs:{points:"790,654 800,643 805,655"}}),n("polygon",{attrs:{points:"790,654 800,665 805,655"}}),n("polygon",{attrs:{points:"791,633 800,643 804,626"}}),n("polygon",{attrs:{points:"791,633 798,622 804,626"}}),n("polygon",{attrs:{points:"793,675 794,691 800,665"}}),n("polygon",{attrs:{points:"794,691 800,665 802,709"}}),n("polygon",{attrs:{points:"798,571 799,600 817,573"}}),n("polygon",{attrs:{points:"798,607 808,618 815,615"}}),n("polygon",{attrs:{points:"798,607 799,600 815,615"}}),n("polygon",{attrs:{points:"798,607 799,614 808,618"}}),n("polygon",{attrs:{points:"798,622 799,614 808,618"}}),n("polygon",{attrs:{points:"798,622 804,626 808,618"}}),n("polygon",{attrs:{points:"799,477 800,426 838,445"}}),n("polygon",{attrs:{points:"799,477 815,482 838,445"}}),n("polygon",{attrs:{points:"799,477 814,524 815,482"}}),n("polygon",{attrs:{points:"799,600 815,615 817,573"}}),n("polygon",{attrs:{points:"800,380 800,426 838,391"}}),n("polygon",{attrs:{points:"800,380 803,357 838,391"}}),n("polygon",{attrs:{points:"800,426 838,391 838,445"}}),n("polygon",{attrs:{points:"800,643 809,648 816,644"}}),n("polygon",{attrs:{points:"800,643 804,626 816,644"}}),n("polygon",{attrs:{points:"800,643 805,655 809,648"}}),n("polygon",{attrs:{points:"800,665 805,655 816,644"}}),n("polygon",{attrs:{points:"800,665 802,709 816,644"}}),n("polygon",{attrs:{points:"802,302 811,314 829,272"}}),n("polygon",{attrs:{points:"803,357 811,314 832,339"}}),n("polygon",{attrs:{points:"803,357 832,339 838,391"}}),n("polygon",{attrs:{points:"804,626 815,615 816,644"}}),n("polygon",{attrs:{points:"804,626 808,618 815,615"}}),n("polygon",{attrs:{points:"805,655 809,648 816,644"}}),n("polygon",{attrs:{points:"811,314 829,272 832,339"}}),n("polygon",{attrs:{points:"814,524 817,573 833,503"}}),n("polygon",{attrs:{points:"814,524 815,482 833,503"}}),n("polygon",{attrs:{points:"815,482 833,503 838,445"}})]),n("section",{staticClass:"container"},[n("transition",{attrs:{name:"resume"}},[this.showResume?n("div",{staticClass:"resume"},[n("div",{staticClass:"columns"},[n("div",{staticClass:"column is-3"},[n("profile-sidebar")],1),n("div",{staticClass:"column is-offset-1 is-8"},[n("professional-experience"),n("leadership-experience"),n("personal-projects"),n("additional-presentations")],1)])]):this._e()])],1)])};t._withStripped=!0;var i={render:t,staticRenderFns:[]};n.a=i},rPTM:function(a,n,e){"use strict";var t=function(){var a=this,n=a.$createElement,e=a._self._c||n;return e("div",{staticClass:"content"},[e("h3",{staticClass:"title is-4"},[a._v("\n    Professional Experience\n  ")]),e("ExperienceBlock",{attrs:{"company-name":"ServiceRocket Sdn Bhd","job-title":"Agile Developer",period:"July 2017 - Present"}},[e("ul",[e("li",[a._v("A full-stack developer role with job scope ranging from:")]),e("ul",[e("li",[a._v("Frontend works with React and Vue")]),e("li",[a._v("Backend API development with Play framework, Serverless framework with AWS Lambda, Express.js")]),e("li",[a._v("Configuring CI/CD pipelines on Jenkins")]),e("li",[a._v("Provision application architecture on AWS, using Terraform to plan and predictably deploy and update stacks")]),e("li",[a._v("Packaging applications for deployment using Docker")])]),e("li",[a._v("Coordinated with Product Manager and Engineering Director to help facilitate teams to move from time-based sprints to flow-based approach")]),e("li",[a._v("Active involvement with our internal UX chapter, responsible for coordinating UX improvements across teams:")]),e("ul",[e("li",[a._v("Gather data and record with analytics systems")]),e("li",[a._v("Implement design systems for a standardised look-and-feel across our apps, thus improving customers’ experience")])])])]),e("ExperienceBlock",{attrs:{"company-name":"Booster Services Asia (M) Sdn Bhd","job-title":"Jr. Software Developer, Software Developer (promoted)",period:"July 2014 - June 2017"}},[e("ul",[e("li",[a._v("\n        Spearheaded site-wide Facebook API upgrade project (to Facebook API v2.2)\n        in response to Facebook deprecating API v1 Played a major role in improving\n      ")]),e("li",[a._v("\n        Booster’s site search abilities and was in the same team that helped\n        implemented Booster’s full-text search via ElasticSearch\n      ")])])]),e("ExperienceBlock",{attrs:{"company-name":"Inti International University","job-title":"Web Designer (Student Employee)",period:"June 2011"}},[e("ul",[e("li",[a._v("Designed a whole new interface for the college’s student portal")])])])],1)};t._withStripped=!0;var i={render:t,staticRenderFns:[]};n.a=i},sOR5:function(a,n){var e={}.toString;a.exports=Array.isArray||function(a){return"[object Array]"==e.call(a)}},"t8Q+":function(a,n,e){"use strict";var t=function(){var a=this.$createElement;this._self._c;return this._m(0)};t._withStripped=!0;var i={render:t,staticRenderFns:[function(){var a=this.$createElement,n=this._self._c||a;return n("div",{staticClass:"content"},[n("h3",{staticClass:"title is-4"},[this._v("\n    Summary\n  ")]),n("p",[this._v("\n    A full-stack web developer capable of doing design works, programming on\n    both frontend and backend, and setting up servers and deployment\n    mechanisms. A fast learner. Enthusiastic about programming and technology\n    in general. Both independent and a team player.\n  ")])])}]};n.a=i},ujcs:function(a,n){n.read=function(a,n,e,t,i){var r,o,s=8*i-t-1,l=(1<<s)-1,c=l>>1,p=-7,u=e?i-1:0,m=e?-1:1,d=a[n+u];for(u+=m,r=d&(1<<-p)-1,d>>=-p,p+=s;p>0;r=256*r+a[n+u],u+=m,p-=8);for(o=r&(1<<-p)-1,r>>=-p,p+=t;p>0;o=256*o+a[n+u],u+=m,p-=8);if(0===r)r=1-c;else{if(r===l)return o?NaN:1/0*(d?-1:1);o+=Math.pow(2,t),r-=c}return(d?-1:1)*o*Math.pow(2,r-t)},n.write=function(a,n,e,t,i,r){var o,s,l,c=8*r-i-1,p=(1<<c)-1,u=p>>1,m=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=t?0:r-1,h=t?1:-1,g=n<0||0===n&&1/n<0?1:0;for(n=Math.abs(n),isNaN(n)||n===1/0?(s=isNaN(n)?1:0,o=p):(o=Math.floor(Math.log(n)/Math.LN2),n*(l=Math.pow(2,-o))<1&&(o--,l*=2),(n+=o+u>=1?m/l:m*Math.pow(2,1-u))*l>=2&&(o++,l/=2),o+u>=p?(s=0,o=p):o+u>=1?(s=(n*l-1)*Math.pow(2,i),o+=u):(s=n*Math.pow(2,u-1)*Math.pow(2,i),o=0));i>=8;a[e+d]=255&s,d+=h,s/=256,i-=8);for(o=o<<i|s,c+=i;c>0;a[e+d]=255&o,d+=h,o/=256,c-=8);a[e+d-h]|=128*g}},vw5F:function(a,n,e){"use strict";var t=e("0HUM");n.a={components:{ExperienceBlock:t.a},data:function(){return{projects:[{name:"Munying Aquaculture",url:"https://munyingaquaculture.com",stacks:["MeteorJS","MongoDB","Nginx","Hosted on Vultr"]},{name:"Syaf Armada Recruitment",url:"https://syafrecruitment.com",stacks:["MeteorJS","MongoDB","Nginx","Hosted on Linode"]},{name:"Saranira",url:"http://saranira.com",stacks:["WordPress"]},{name:"Projek Ihsan's Volunteer System",url:"https://volunteers.projekihsan.org",stacks:["MeteorJS","MongoDB","Nginx","Hosted on DigitalOcean"],decommissioned:!0},{name:"Projek Ihsan",url:"http://projekihsan.org",stacks:["WordPress"]}]}}}},wMJB:function(a,n,e){var t=e("nZgT");"string"==typeof t&&(t=[[a.i,t,""]]),t.locals&&(a.exports=t.locals);e("rjj0")("bc7ae392",t,!1,{sourceMap:!1})},xTwx:function(a,n,e){"use strict";var t=e("0HUM");n.a={components:{ExperienceBlock:t.a}}},"xVq+":function(a,n,e){var t=e("qUq7");"string"==typeof t&&(t=[[a.i,t,""]]),t.locals&&(a.exports=t.locals);e("rjj0")("388bc956",t,!1,{sourceMap:!1})}});